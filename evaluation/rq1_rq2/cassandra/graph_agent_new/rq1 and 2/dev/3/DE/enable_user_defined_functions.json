{
    "unclear_methods": [
        {
            "unclear_method_name": "enableUserDefinedFunctions",
            "unclear_method_body": "\npublic static boolean enableUserDefinedFunctions()\n    {\n        return conf.enable_user_defined_functions;\n    }\n\n    "
        }
    ],
    "code_context": "public static void assertUdfsEnabled(String language)\n    {\n        if (!DatabaseDescriptor.enableUserDefinedFunctions())\n            throw new InvalidRequestException(\"User-defined functions are disabled in cassandra.yaml - set enable_user_defined_functions=true to enable\");\n        if (!\"java\".equalsIgnoreCase(language) && !DatabaseDescriptor.enableScriptedUserDefinedFunctions())\n            throw new InvalidRequestException(\"Scripted user-defined functions are disabled in cassandra.yaml - set enable_scripted_user_defined_functions=true to enable if you are aware of the security risks\");\n    }\n\n    ",
    "config_description": "If unset, all GC Pauses greater than gc_log_threshold_in_ms will log at INFO level UDFs (user defined functions) are disabled by default. As of Cassandra 3.0 there is a sandbox in place that should prevent execution of evil code.",
    "developer_understanding_on_working": "The configuration 'enable_user_defined_functions' is checked in the assertUdfsEnabled method to ensure that user-defined functions are enabled in the cassandra.yaml file. If the configuration is not set to true, an InvalidRequestException is thrown.",
    "developer_understanding_on_triggering_frequency": "The configuration is triggered whenever the assertUdfsEnabled method is called, which depends on the specific use case and how often user-defined functions are being used in the system.",
    "developer_understanding_on_size_impact": "Enabling user-defined functions can potentially introduce security risks if not properly managed. The sandbox in place in Cassandra 3.0 helps prevent execution of malicious code, but it is important to be aware of the risks when enabling this configuration."
}