{
    "unclear_methods": [
        {
            "unclear_method_name": "scheduleUnusedConnectionMonitoring",
            "unclear_method_body": "No found this Method-related information"
        }
    ],
    "code_context": "@VisibleForTesting\n    MessagingService(boolean testOnly)\n    {\n        super(testOnly);\n        OutboundConnections.scheduleUnusedConnectionMonitoring(this, ScheduledExecutors.scheduledTasks, 1L, TimeUnit.HOURS);\n    }\n\n    ",
    "config_description": "Global, per-endpoint and per-connection limits imposed on messages queued for delivery to other nodes and waiting to be processed on arrival from other nodes in the cluster.  These limits are applied to the on-wire size of the message being sent or received.  The basic per-link limit is consumed in isolation before any endpoint or global limit is imposed. Each node-pair has three links: urgent, small and large.  So any given node may have a maximum of N*3*(internode_application_send_queue_capacity_in_bytes+internode_application_receive_queue_capacity_in_bytes) messages queued without any coordination between them although in practice, with token-aware routing, only RF*tokens nodes should need to communicate with significant bandwidth.  The per-endpoint limit is imposed on all messages exceeding the per-link limit, simultaneously with the global limit, on all links to or from a single node in the cluster. The global limit is imposed on all messages exceeding the per-link limit, simultaneously with the per-endpoint limit, on all links to or from any node in the cluster.  internode_application_send_queue_capacity_in_bytes: 4194304                       #4MiB internode_application_send_queue_reserve_endpoint_capacity_in_bytes: 134217728    #128MiB",
    "developer_understanding_on_working": "The configuration 'internode_application_send_queue_reserve_global_capacity_in_bytes' is used to set global, per-endpoint, and per-connection limits on messages queued for delivery to other nodes and waiting to be processed on arrival from other nodes in the cluster. These limits are applied to the on-wire size of the message being sent or received.",
    "developer_understanding_on_triggering_frequency": "The configuration is triggered when messages queued for delivery exceed the specified capacity limits. The triggering frequency depends on the volume of messages being sent and received in the cluster.",
    "developer_understanding_on_size_impact": "The impact of the configuration option is significant as it determines the maximum number of messages that can be queued for delivery between nodes in the cluster. Setting this configuration too low may result in message loss or delays, while setting it too high may lead to increased memory usage and potential performance issues."
}