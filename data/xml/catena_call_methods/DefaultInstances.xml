<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/catena/main/java/DefaultInstances.java"><comment type="block">/*
 * Decompiled with CFR.
 */</comment>
<package>package <name><name>main</name><operator>.</operator><name>java</name></name>;</package>

<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>Catena</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>gamma</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>IdentityGamma</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>gamma</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>SaltMix</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>graph</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>DoubleButterflyGraph</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>graph</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>GenericGraph</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>graph</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexBRG</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>graph</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexDBG</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>graph</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>index</name><operator>.</operator><name>IndexGRG</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>hash</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>Argon2CF</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>hash</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>Blake2b</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>hash</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>Blake2b_1</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>phi</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>CatenaPhi</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>phi</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>IdentityPhi</name></name>;</import>
<import>import <name><name>main</name><operator>.</operator><name>java</name><operator>.</operator><name>components</name><operator>.</operator><name>phi</name><operator>.</operator><name>algorithms</name><operator>.</operator><name>index</name><operator>.</operator><name>LSBIndex</name></name>;</import>

<class><specifier>public</specifier> class <name>DefaultInstances</name>
<super_list><extends>extends <super><name>Catena</name></super></extends></super_list> <block>{
    <function><type><specifier>public</specifier> <name>Catena</name></type> <name>initButterfly</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Catena</name></type> <name>catena</name> <init>= <expr><operator>new</operator> <call><name>Catena</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b_1</name></type> <name>hPrime</name> <init>= <expr><operator>new</operator> <call><name>Blake2b_1</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SaltMix</name></type> <name>gamma</name> <init>= <expr><operator>new</operator> <call><name>SaltMix</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>DoubleButterflyGraph</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>DoubleButterflyGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexDBG</name></type> <name>idx</name> <init>= <expr><operator>new</operator> <call><name>IndexDBG</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IdentityPhi</name></type> <name>phi</name> <init>= <expr><operator>new</operator> <call><name>IdentityPhi</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gLow</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gHigh</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lambda</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vID</name> <init>= <expr><literal type="string">"Butterfly"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>catena</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>hPrime</name></expr></argument>, <argument><expr><name>gamma</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>, <argument><expr><name>phi</name></expr></argument>, <argument><expr><name>gLow</name></expr></argument>, <argument><expr><name>gHigh</name></expr></argument>, <argument><expr><name>lambda</name></expr></argument>, <argument><expr><name>vID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>catena</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Catena</name></type> <name>initButterflyFull</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Catena</name></type> <name>catena</name> <init>= <expr><operator>new</operator> <call><name>Catena</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>hPrime</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SaltMix</name></type> <name>gamma</name> <init>= <expr><operator>new</operator> <call><name>SaltMix</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>DoubleButterflyGraph</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>DoubleButterflyGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexDBG</name></type> <name>idx</name> <init>= <expr><operator>new</operator> <call><name>IndexDBG</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IdentityPhi</name></type> <name>phi</name> <init>= <expr><operator>new</operator> <call><name>IdentityPhi</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gLow</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gHigh</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lambda</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vID</name> <init>= <expr><literal type="string">"Butterfly-Full"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>catena</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>hPrime</name></expr></argument>, <argument><expr><name>gamma</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>, <argument><expr><name>phi</name></expr></argument>, <argument><expr><name>gLow</name></expr></argument>, <argument><expr><name>gHigh</name></expr></argument>, <argument><expr><name>lambda</name></expr></argument>, <argument><expr><name>vID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>catena</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Catena</name></type> <name>initDragonfly</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Catena</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>Catena</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b_1</name></type> <name>hPrime</name> <init>= <expr><operator>new</operator> <call><name>Blake2b_1</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SaltMix</name></type> <name>gamma</name> <init>= <expr><operator>new</operator> <call><name>SaltMix</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>GenericGraph</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>GenericGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexBRG</name></type> <name>idx</name> <init>= <expr><operator>new</operator> <call><name>IndexBRG</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IdentityPhi</name></type> <name>phi</name> <init>= <expr><operator>new</operator> <call><name>IdentityPhi</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gLow</name> <init>= <expr><literal type="number">21</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gHigh</name> <init>= <expr><literal type="number">21</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lambda</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vID</name> <init>= <expr><literal type="string">"Dragonfly"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>hPrime</name></expr></argument>, <argument><expr><name>gamma</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>, <argument><expr><name>phi</name></expr></argument>, <argument><expr><name>gLow</name></expr></argument>, <argument><expr><name>gHigh</name></expr></argument>, <argument><expr><name>lambda</name></expr></argument>, <argument><expr><name>vID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>c</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Catena</name></type> <name>initDragonflyFull</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Catena</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>Catena</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>hPrime</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SaltMix</name></type> <name>gamma</name> <init>= <expr><operator>new</operator> <call><name>SaltMix</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>GenericGraph</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>GenericGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexBRG</name></type> <name>idx</name> <init>= <expr><operator>new</operator> <call><name>IndexBRG</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IdentityPhi</name></type> <name>phi</name> <init>= <expr><operator>new</operator> <call><name>IdentityPhi</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gLow</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gHigh</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lambda</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vID</name> <init>= <expr><literal type="string">"Dragonfly-Full"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>hPrime</name></expr></argument>, <argument><expr><name>gamma</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>, <argument><expr><name>phi</name></expr></argument>, <argument><expr><name>gLow</name></expr></argument>, <argument><expr><name>gHigh</name></expr></argument>, <argument><expr><name>lambda</name></expr></argument>, <argument><expr><name>vID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>c</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Catena</name></type> <name>initHorsefly</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Catena</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>Catena</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>useGL</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Argon2CF</name></type> <name>hPrime</name> <init>= <expr><operator>new</operator> <call><name>Argon2CF</name><argument_list>(<argument><expr><name>useGL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IdentityGamma</name></type> <name>gamma</name> <init>= <expr><operator>new</operator> <call><name>IdentityGamma</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>GenericGraph</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>GenericGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexBRG</name></type> <name>idx</name> <init>= <expr><operator>new</operator> <call><name>IndexBRG</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IdentityPhi</name></type> <name>phi</name> <init>= <expr><operator>new</operator> <call><name>IdentityPhi</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gLow</name> <init>= <expr><literal type="number">19</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gHigh</name> <init>= <expr><literal type="number">19</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lambda</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vID</name> <init>= <expr><literal type="string">"Horsefly"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>hPrime</name></expr></argument>, <argument><expr><name>gamma</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>, <argument><expr><name>phi</name></expr></argument>, <argument><expr><name>gLow</name></expr></argument>, <argument><expr><name>gHigh</name></expr></argument>, <argument><expr><name>lambda</name></expr></argument>, <argument><expr><name>vID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>c</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Catena</name></type> <name>initHorseflyFull</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Catena</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>Catena</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>hPrime</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IdentityGamma</name></type> <name>gamma</name> <init>= <expr><operator>new</operator> <call><name>IdentityGamma</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>GenericGraph</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>GenericGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexBRG</name></type> <name>idx</name> <init>= <expr><operator>new</operator> <call><name>IndexBRG</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IdentityPhi</name></type> <name>phi</name> <init>= <expr><operator>new</operator> <call><name>IdentityPhi</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gLow</name> <init>= <expr><literal type="number">23</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gHigh</name> <init>= <expr><literal type="number">23</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lambda</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vID</name> <init>= <expr><literal type="string">"Horsefly-Full"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>hPrime</name></expr></argument>, <argument><expr><name>gamma</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>, <argument><expr><name>phi</name></expr></argument>, <argument><expr><name>gLow</name></expr></argument>, <argument><expr><name>gHigh</name></expr></argument>, <argument><expr><name>lambda</name></expr></argument>, <argument><expr><name>vID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>c</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Catena</name></type> <name>initLanternfly</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Catena</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>Catena</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>useGL</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Argon2CF</name></type> <name>hPrime</name> <init>= <expr><operator>new</operator> <call><name>Argon2CF</name><argument_list>(<argument><expr><name>useGL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SaltMix</name></type> <name>gamma</name> <init>= <expr><operator>new</operator> <call><name>SaltMix</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>GenericGraph</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>GenericGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>l</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexGRG</name></type> <name>idx</name> <init>= <expr><operator>new</operator> <call><name>IndexGRG</name><argument_list>(<argument><expr><name>l</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IdentityPhi</name></type> <name>phi</name> <init>= <expr><operator>new</operator> <call><name>IdentityPhi</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gLow</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gHigh</name> <init>= <expr><literal type="number">17</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lambda</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vID</name> <init>= <expr><literal type="string">"Lanternfly"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>hPrime</name></expr></argument>, <argument><expr><name>gamma</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>, <argument><expr><name>phi</name></expr></argument>, <argument><expr><name>gLow</name></expr></argument>, <argument><expr><name>gHigh</name></expr></argument>, <argument><expr><name>lambda</name></expr></argument>, <argument><expr><name>vID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>c</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Catena</name></type> <name>initLanternflyFull</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Catena</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>Catena</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>hPrime</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SaltMix</name></type> <name>gamma</name> <init>= <expr><operator>new</operator> <call><name>SaltMix</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>GenericGraph</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>GenericGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>l</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexGRG</name></type> <name>idx</name> <init>= <expr><operator>new</operator> <call><name>IndexGRG</name><argument_list>(<argument><expr><name>l</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IdentityPhi</name></type> <name>phi</name> <init>= <expr><operator>new</operator> <call><name>IdentityPhi</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gLow</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gHigh</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lambda</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vID</name> <init>= <expr><literal type="string">"Lanternfly-Full"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>hPrime</name></expr></argument>, <argument><expr><name>gamma</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>, <argument><expr><name>phi</name></expr></argument>, <argument><expr><name>gLow</name></expr></argument>, <argument><expr><name>gHigh</name></expr></argument>, <argument><expr><name>lambda</name></expr></argument>, <argument><expr><name>vID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>c</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Catena</name></type> <name>initMydasfly</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Catena</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>Catena</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>useGL</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Argon2CF</name></type> <name>hPrime</name> <init>= <expr><operator>new</operator> <call><name>Argon2CF</name><argument_list>(<argument><expr><name>useGL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IdentityGamma</name></type> <name>gamma</name> <init>= <expr><operator>new</operator> <call><name>IdentityGamma</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>DoubleButterflyGraph</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>DoubleButterflyGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexDBG</name></type> <name>idx</name> <init>= <expr><operator>new</operator> <call><name>IndexDBG</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>LSBIndex</name></type> <name>idxState</name> <init>= <expr><operator>new</operator> <call><name>LSBIndex</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>CatenaPhi</name></type> <name>phi</name> <init>= <expr><operator>new</operator> <call><name>CatenaPhi</name><argument_list>(<argument><expr><name>idxState</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gLow</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gHigh</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lambda</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vID</name> <init>= <expr><literal type="string">"Mydasfly"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>hPrime</name></expr></argument>, <argument><expr><name>gamma</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>, <argument><expr><name>phi</name></expr></argument>, <argument><expr><name>gLow</name></expr></argument>, <argument><expr><name>gHigh</name></expr></argument>, <argument><expr><name>lambda</name></expr></argument>, <argument><expr><name>vID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>c</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Catena</name></type> <name>initMydasflyFull</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Catena</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>Catena</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>hPrime</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IdentityGamma</name></type> <name>gamma</name> <init>= <expr><operator>new</operator> <call><name>IdentityGamma</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>DoubleButterflyGraph</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>DoubleButterflyGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexDBG</name></type> <name>idx</name> <init>= <expr><operator>new</operator> <call><name>IndexDBG</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>LSBIndex</name></type> <name>idxState</name> <init>= <expr><operator>new</operator> <call><name>LSBIndex</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>CatenaPhi</name></type> <name>phi</name> <init>= <expr><operator>new</operator> <call><name>CatenaPhi</name><argument_list>(<argument><expr><name>idxState</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gLow</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gHigh</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lambda</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vID</name> <init>= <expr><literal type="string">"Mydasfly-Full"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>hPrime</name></expr></argument>, <argument><expr><name>gamma</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>, <argument><expr><name>phi</name></expr></argument>, <argument><expr><name>gLow</name></expr></argument>, <argument><expr><name>gHigh</name></expr></argument>, <argument><expr><name>lambda</name></expr></argument>, <argument><expr><name>vID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>c</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Catena</name></type> <name>initStonefly</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Catena</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>Catena</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>useGL</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Argon2CF</name></type> <name>hPrime</name> <init>= <expr><operator>new</operator> <call><name>Argon2CF</name><argument_list>(<argument><expr><name>useGL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SaltMix</name></type> <name>gamma</name> <init>= <expr><operator>new</operator> <call><name>SaltMix</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>GenericGraph</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>GenericGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexBRG</name></type> <name>idx</name> <init>= <expr><operator>new</operator> <call><name>IndexBRG</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>LSBIndex</name></type> <name>idxState</name> <init>= <expr><operator>new</operator> <call><name>LSBIndex</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>CatenaPhi</name></type> <name>phi</name> <init>= <expr><operator>new</operator> <call><name>CatenaPhi</name><argument_list>(<argument><expr><name>idxState</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gLow</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gHigh</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lambda</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vID</name> <init>= <expr><literal type="string">"Stonefly"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>hPrime</name></expr></argument>, <argument><expr><name>gamma</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>, <argument><expr><name>phi</name></expr></argument>, <argument><expr><name>gLow</name></expr></argument>, <argument><expr><name>gHigh</name></expr></argument>, <argument><expr><name>lambda</name></expr></argument>, <argument><expr><name>vID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>c</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Catena</name></type> <name>initStoneflyFull</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Catena</name></type> <name>c</name> <init>= <expr><operator>new</operator> <call><name>Catena</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>h</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Blake2b</name></type> <name>hPrime</name> <init>= <expr><operator>new</operator> <call><name>Blake2b</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>SaltMix</name></type> <name>gamma</name> <init>= <expr><operator>new</operator> <call><name>SaltMix</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>GenericGraph</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>GenericGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IndexBRG</name></type> <name>idx</name> <init>= <expr><operator>new</operator> <call><name>IndexBRG</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>LSBIndex</name></type> <name>idxState</name> <init>= <expr><operator>new</operator> <call><name>LSBIndex</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>CatenaPhi</name></type> <name>phi</name> <init>= <expr><operator>new</operator> <call><name>CatenaPhi</name><argument_list>(<argument><expr><name>idxState</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gLow</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>gHigh</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>lambda</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>vID</name> <init>= <expr><literal type="string">"Stonefly-Full"</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>c</name><operator>.</operator><name>init</name></name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>hPrime</name></expr></argument>, <argument><expr><name>gamma</name></expr></argument>, <argument><expr><name>f</name></expr></argument>, <argument><expr><name>idx</name></expr></argument>, <argument><expr><name>phi</name></expr></argument>, <argument><expr><name>gLow</name></expr></argument>, <argument><expr><name>gHigh</name></expr></argument>, <argument><expr><name>lambda</name></expr></argument>, <argument><expr><name>vID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>c</name></expr>;</return>
    </block_content>}</block></function>
}</block></class>

</unit>
