<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/sunflow/src/org/sunflow/core/LightSource.java"><package>package <name><name>org</name><operator>.</operator><name>sunflow</name><operator>.</operator><name>core</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>sunflow</name><operator>.</operator><name>image</name><operator>.</operator><name>Color</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>sunflow</name><operator>.</operator><name>math</name><operator>.</operator><name>Point3</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>sunflow</name><operator>.</operator><name>math</name><operator>.</operator><name>Vector3</name></name>;</import>

<comment type="block" format="javadoc">/**
 * The &lt;code&gt;LightSource&lt;/code&gt; interface is used to represent any light
 * emitting primitive. It permits efficient sampling of direct illumination.
 */</comment>
<interface><specifier>public</specifier> interface <name>LightSource</name> <super_list><extends>extends <super><name>RenderObject</name></super></extends></super_list> <block>{
    <comment type="block" format="javadoc">/**
     * Get the maximum number of samples that can be taken from this light
     * source.
     * 
     * @return maximum number of samples to be taken from this light source
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>int</name></type> <name>getNumSamples</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Samples the light source to compute direct illumination. Light samples
     * can be created using the {@link LightSample} class and added to the
     * current {@link ShadingState}. This method is responsible for the
     * shooting of shadow rays which allows for non-physical lights that don't
     * cast shadows. It is recommended that only a single shadow ray be shot if
     * {@link ShadingState#getDiffuseDepth()} is greater than 0. This avoids an
     * exponential number of shadow rays from being traced.
     * 
     * @param state current state, including point to be shaded
     * @see LightSample
     */</comment>
    <function_decl><type><name>void</name></type> <name>getSamples</name><parameter_list>(<parameter><decl><type><name>ShadingState</name></type> <name>state</name></decl></parameter>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Gets a photon to emit from this light source by setting each of the
     * arguments. The two sampling parameters are points on the unit square that
     * can be used to sample a position and/or direction for the emitted photon.
     * 
     * @param randX1 sampling parameter
     * @param randY1 sampling parameter
     * @param randX2 sampling parameter
     * @param randY2 sampling parameter
     * @param p position to shoot the photon from
     * @param dir direction to shoot the photon in
     * @param power power of the photon
     */</comment>
    <function_decl><type><name>void</name></type> <name>getPhoton</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>randX1</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>randY1</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>randX2</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>randY2</name></decl></parameter>, <parameter><decl><type><name>Point3</name></type> <name>p</name></decl></parameter>, <parameter><decl><type><name>Vector3</name></type> <name>dir</name></decl></parameter>, <parameter><decl><type><name>Color</name></type> <name>power</name></decl></parameter>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Get the total power emitted by this light source. Lights that have 0
     * power will not emit any photons.
     * 
     * @return light source power
     */</comment>
    <function_decl><type><name>float</name></type> <name>getPower</name><parameter_list>()</parameter_list>;</function_decl>
}</block></interface></unit>
