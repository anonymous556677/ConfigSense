<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/sunflow/src/org/sunflow/core/CameraLens.java"><package>package <name><name>org</name><operator>.</operator><name>sunflow</name><operator>.</operator><name>core</name></name>;</package>

<comment type="block" format="javadoc">/**
 * Represents a mapping from the 3D scene onto the final image. A camera is
 * responsible for determining what ray to cast through each pixel.
 */</comment>
<interface><specifier>public</specifier> interface <name>CameraLens</name> <super_list><extends>extends <super><name>RenderObject</name></super></extends></super_list> <block>{
    <comment type="block" format="javadoc">/**
     * Create a new {@link Ray ray}to be cast through pixel (x,y) on the image
     * plane. Two sampling parameters are provided for lens sampling. They are
     * guarenteed to be in the interval [0,1). They can be used to perturb the
     * position of the source of the ray on the lens of the camera for DOF
     * effects.
     * 
     * @param x x coordinate of the (sub)pixel
     * @param y y coordinate of the (sub)pixel
     * @param imageWidth image width in (sub)pixels
     * @param imageHeight image height in (sub)pixels
     * @param lensX x lens sampling parameter
     * @param lensY y lens sampling parameter
     * @return a new ray passing through the given pixel
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>Ray</name></type> <name>getRay</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>imageWidth</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>imageHeight</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>lensX</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>lensY</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>time</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></interface></unit>
