<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/density-converter/src/main/java/at/favre/tools/dconvert/converters/WindowsConverter.java"><comment type="block">/*
 *  Copyright 2016 Patrick Favre-Bulle
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>at</name><operator>.</operator><name>favre</name><operator>.</operator><name>tools</name><operator>.</operator><name>dconvert</name><operator>.</operator><name>converters</name></name>;</package>

<import>import <name><name>at</name><operator>.</operator><name>favre</name><operator>.</operator><name>tools</name><operator>.</operator><name>dconvert</name><operator>.</operator><name>arg</name><operator>.</operator><name>Arguments</name></name>;</import>
<import>import <name><name>at</name><operator>.</operator><name>favre</name><operator>.</operator><name>tools</name><operator>.</operator><name>dconvert</name><operator>.</operator><name>arg</name><operator>.</operator><name>ImageType</name></name>;</import>
<import>import <name><name>at</name><operator>.</operator><name>favre</name><operator>.</operator><name>tools</name><operator>.</operator><name>dconvert</name><operator>.</operator><name>converters</name><operator>.</operator><name>descriptors</name><operator>.</operator><name>PostfixDescriptor</name></name>;</import>
<import>import <name><name>at</name><operator>.</operator><name>favre</name><operator>.</operator><name>tools</name><operator>.</operator><name>dconvert</name><operator>.</operator><name>util</name><operator>.</operator><name>MiscUtil</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Needed info to convert for Windows
 */</comment>
<class><specifier>public</specifier> class <name>WindowsConverter</name> <super_list><extends>extends <super><name><name>APlatformConverter</name><argument_list type="generic">&lt;<argument><name>PostfixDescriptor</name></argument>&gt;</argument_list></name></super></extends></super_list> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>WINDOWS_FOLDER_NAME</name> <init>= <expr><literal type="string">"windows"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ROOT_FOLDER</name> <init>= <expr><literal type="string">"Assets"</literal></expr></init></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>PostfixDescriptor</name></argument>&gt;</argument_list></name></type> <name>usedOutputDensities</name><parameter_list>(<parameter><decl><type><name>Arguments</name></type> <name>arguments</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><call><name>getWindowsDescriptors</name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>PostfixDescriptor</name></argument>&gt;</argument_list></name></type> <name>getWindowsDescriptors</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>PostfixDescriptor</name></argument>&gt;</argument_list></name></type> <name>list</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PostfixDescriptor</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"100%"</literal></expr></argument>, <argument><expr><literal type="string">".scale-100"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PostfixDescriptor</name><argument_list>(<argument><expr><literal type="number">1.4f</literal></expr></argument>, <argument><expr><literal type="string">"140%"</literal></expr></argument>, <argument><expr><literal type="string">".scale-140"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PostfixDescriptor</name><argument_list>(<argument><expr><literal type="number">1.8f</literal></expr></argument>, <argument><expr><literal type="string">"180%"</literal></expr></argument>, <argument><expr><literal type="string">".scale-180"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>list</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>PostfixDescriptor</name><argument_list>(<argument><expr><literal type="number">2.4f</literal></expr></argument>, <argument><expr><literal type="string">"240%"</literal></expr></argument>, <argument><expr><literal type="string">".scale-240"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><name>list</name></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>getConverterName</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><literal type="string">"windows-converter"</literal></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>File</name></type> <name>createMainSubFolder</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>destinationFolder</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>targetImageFileName</name></decl></parameter>, <parameter><decl><type><name>Arguments</name></type> <name>arguments</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>arguments</name><operator>.</operator><name>platform</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>destinationFolder</name> <operator>=</operator> <call><name><name>MiscUtil</name><operator>.</operator><name>createAndCheckFolder</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>destinationFolder</name></expr></argument>, <argument><expr><name>WINDOWS_FOLDER_NAME</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>arguments</name><operator>.</operator><name>dryRun</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return>return <expr><call><name><name>MiscUtil</name><operator>.</operator><name>createAndCheckFolder</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>destinationFolder</name></expr></argument>, <argument><expr><name><name>WindowsConverter</name><operator>.</operator><name>ROOT_FOLDER</name></name></expr></argument>)</argument_list></call><operator>.</operator><call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>arguments</name><operator>.</operator><name>dryRun</name></name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>File</name></type> <name>createFolderForOutputFile</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>mainSubFolder</name></decl></parameter>, <parameter><decl><type><name>PostfixDescriptor</name></type> <name>density</name></decl></parameter>, <parameter><decl><type><name>Dimension</name></type> <name>dimension</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>targetFileName</name></decl></parameter>, <parameter><decl><type><name>Arguments</name></type> <name>arguments</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><name>mainSubFolder</name></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>createDestinationFileNameWithoutExtension</name><parameter_list>(<parameter><decl><type><name>PostfixDescriptor</name></type> <name>density</name></decl></parameter>, <parameter><decl><type><name>Dimension</name></type> <name>dimension</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>targetFileName</name></decl></parameter>, <parameter><decl><type><name>Arguments</name></type> <name>arguments</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <return>return <expr><name>targetFileName</name> <operator>+</operator> <name><name>density</name><operator>.</operator><name>postFix</name></name></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>onPreExecute</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>dstFolder</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>targetFileName</name></decl></parameter>, <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>PostfixDescriptor</name></argument>&gt;</argument_list></name></type> <name>densityDescriptions</name></decl></parameter>, <parameter><decl><type><name>ImageType</name></type> <name>imageType</name></decl></parameter>, <parameter><decl><type><name>Arguments</name></type> <name>arguments</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>

    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>onPostExecute</name><parameter_list>(<parameter><decl><type><name>Arguments</name></type> <name>arguments</name></decl></parameter>)</parameter_list> <block>{<block_content>

    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>void</name></type> <name>clean</name><parameter_list>(<parameter><decl><type><name>Arguments</name></type> <name>arguments</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><call><name><name>arguments</name><operator>.</operator><name>platform</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>MiscUtil</name><operator>.</operator><name>deleteFolder</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>arguments</name><operator>.</operator><name>dst</name></name></expr></argument>, <argument><expr><name>ROOT_FOLDER</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <expr_stmt><expr><call><name><name>MiscUtil</name><operator>.</operator><name>deleteFolder</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name><name>arguments</name><operator>.</operator><name>dst</name></name></expr></argument>, <argument><expr><name>WINDOWS_FOLDER_NAME</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>ROOT_FOLDER</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>
}</block></class>
</unit>
