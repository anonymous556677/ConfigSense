<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/cql3/statements/ListUsersStatement.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>cql3</name><operator>.</operator><name>statements</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>ImmutableList</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>auth</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>config</name><operator>.</operator><name>DatabaseDescriptor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>schema</name><operator>.</operator><name>SchemaConstants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>cql3</name><operator>.</operator><name>ColumnIdentifier</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>cql3</name><operator>.</operator><name>ColumnSpecification</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>cql3</name><operator>.</operator><name>ResultSet</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>marshal</name><operator>.</operator><name>BooleanType</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>marshal</name><operator>.</operator><name>UTF8Type</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>transport</name><operator>.</operator><name>messages</name><operator>.</operator><name>ResultMessage</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang3</name><operator>.</operator><name>builder</name><operator>.</operator><name>ToStringBuilder</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>commons</name><operator>.</operator><name>lang3</name><operator>.</operator><name>builder</name><operator>.</operator><name>ToStringStyle</name></name>;</import>

<class><specifier>public</specifier> class <name>ListUsersStatement</name> <super_list><extends>extends <super><name>ListRolesStatement</name></super></extends></super_list>
<block>{
    <comment type="line">// pseudo-virtual cf as the actual datasource is dependent on the IRoleManager impl</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>KS</name> <init>= <expr><name><name>SchemaConstants</name><operator>.</operator><name>AUTH_KEYSPACE_NAME</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>CF</name> <init>= <expr><literal type="string">"users"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>List</name><argument_list type="generic">&lt;<argument><name>ColumnSpecification</name></argument>&gt;</argument_list></name></type> <name>metadata</name> <init>=
        <expr><call><name><name>ImmutableList</name><operator>.</operator><name>of</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>ColumnSpecification</name><argument_list>(<argument><expr><name>KS</name></expr></argument>, <argument><expr><name>CF</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ColumnIdentifier</name><argument_list>(<argument><expr><literal type="string">"name"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>UTF8Type</name><operator>.</operator><name>instance</name></name></expr></argument>)</argument_list></call></expr></argument>,
                         <argument><expr><operator>new</operator> <call><name>ColumnSpecification</name><argument_list>(<argument><expr><name>KS</name></expr></argument>, <argument><expr><name>CF</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ColumnIdentifier</name><argument_list>(<argument><expr><literal type="string">"super"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>BooleanType</name><operator>.</operator><name>instance</name></name></expr></argument>)</argument_list></call></expr></argument>,
                         <argument><expr><operator>new</operator> <call><name>ColumnSpecification</name><argument_list>(<argument><expr><name>KS</name></expr></argument>, <argument><expr><name>CF</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ColumnIdentifier</name><argument_list>(<argument><expr><literal type="string">"datacenters"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>UTF8Type</name><operator>.</operator><name>instance</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>protected</specifier> <name>ResultMessage</name></type> <name>formatResults</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>RoleResource</name></argument>&gt;</argument_list></name></type> <name>sortedRoles</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <decl_stmt><decl><type><name><name>ResultSet</name><operator>.</operator><name>ResultMetadata</name></name></type> <name>resultMetadata</name> <init>= <expr><operator>new</operator> <call><name><name>ResultSet</name><operator>.</operator><name>ResultMetadata</name></name><argument_list>(<argument><expr><name>metadata</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>ResultSet</name></type> <name>result</name> <init>= <expr><operator>new</operator> <call><name>ResultSet</name><argument_list>(<argument><expr><name>resultMetadata</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>IRoleManager</name></type> <name>roleManager</name> <init>= <expr><call><name><name>DatabaseDescriptor</name><operator>.</operator><name>getRoleManager</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>INetworkAuthorizer</name></type> <name>networkAuthorizer</name> <init>= <expr><call><name><name>DatabaseDescriptor</name><operator>.</operator><name>getNetworkAuthorizer</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>RoleResource</name></type> <name>role</name> <range>: <expr><name>sortedRoles</name></expr></range></decl></init>)</control>
        <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>roleManager</name><operator>.</operator><name>canLogin</name></name><argument_list>(<argument><expr><name>role</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
                <continue>continue;</continue></block_content></block></if></if_stmt>
            <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>addColumnValue</name></name><argument_list>(<argument><expr><call><name><name>UTF8Type</name><operator>.</operator><name>instance</name><operator>.</operator><name>decompose</name></name><argument_list>(<argument><expr><call><name><name>role</name><operator>.</operator><name>getRoleName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>addColumnValue</name></name><argument_list>(<argument><expr><call><name><name>BooleanType</name><operator>.</operator><name>instance</name><operator>.</operator><name>decompose</name></name><argument_list>(<argument><expr><call><name><name>Roles</name><operator>.</operator><name>hasSuperuserStatus</name></name><argument_list>(<argument><expr><name>role</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>addColumnValue</name></name><argument_list>(<argument><expr><call><name><name>UTF8Type</name><operator>.</operator><name>instance</name><operator>.</operator><name>decompose</name></name><argument_list>(<argument><expr><call><name><name>networkAuthorizer</name><operator>.</operator><name>authorize</name></name><argument_list>(<argument><expr><name>role</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>

        <return>return <expr><operator>new</operator> <call><name><name>ResultMessage</name><operator>.</operator><name>Rows</name></name><argument_list>(<argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
    
    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>ToStringBuilder</name><operator>.</operator><name>reflectionToString</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name><name>ToStringStyle</name><operator>.</operator><name>SHORT_PREFIX_STYLE</name></name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
