<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/h2database/h2/src/main/org/h2/store/InDoubtTransaction.java"><comment type="block">/*
 * Copyright 2004-2022 H2 Group. Multiple-Licensed under the MPL 2.0,
 * and the EPL 1.0 (https://h2database.com/html/license.html).
 * Initial Developer: H2 Group
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>h2</name><operator>.</operator><name>store</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>h2</name><operator>.</operator><name>message</name><operator>.</operator><name>DbException</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Represents an in-doubt transaction (a transaction in the prepare phase).
 */</comment>
<interface><specifier>public</specifier> interface <name>InDoubtTransaction</name> <block>{

    <comment type="block" format="javadoc">/**
     * The transaction state meaning this transaction is not committed yet, but
     * also not rolled back (in-doubt).
     */</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>IN_DOUBT</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * The transaction state meaning this transaction is committed.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>COMMIT</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * The transaction state meaning this transaction is rolled back.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>ROLLBACK</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/**
     * Change the state of this transaction.
     * This will also update the transaction log.
     *
     * @param state the new state
     */</comment>
    <function_decl><type><name>void</name></type> <name>setState</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>state</name></decl></parameter>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Get the state of this transaction.
     *
     * @return the transaction state
     */</comment>
    <function_decl><type><name>int</name></type> <name>getState</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Get the state of this transaction as a text.
     *
     * @return the transaction state text
     */</comment>
    <function><type><specifier>default</specifier> <name>String</name></type> <name>getStateDescription</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>state</name> <init>= <expr><call><name>getState</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <switch>switch <condition>(<expr><name>state</name></expr>)</condition> <block>{<block_content>
        <case>case <expr><literal type="number">0</literal></expr>:</case>
            <return>return <expr><literal type="string">"IN_DOUBT"</literal></expr>;</return>
        <case>case <expr><literal type="number">1</literal></expr>:</case>
            <return>return <expr><literal type="string">"COMMIT"</literal></expr>;</return>
        <case>case <expr><literal type="number">2</literal></expr>:</case>
            <return>return <expr><literal type="string">"ROLLBACK"</literal></expr>;</return>
        <default>default:</default>
            <throw>throw <expr><call><name><name>DbException</name><operator>.</operator><name>getInternalError</name></name><argument_list>(<argument><expr><literal type="string">"state="</literal> <operator>+</operator> <name>state</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></switch>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Get the name of the transaction.
     *
     * @return the transaction name
     */</comment>
    <function_decl><type><name>String</name></type> <name>getTransactionName</name><parameter_list>()</parameter_list>;</function_decl>
}</block></interface>
</unit>
