<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/xmlgraphics-batik/batik-dom/src/main/java/org/apache/batik/dom/util/DocumentFactory.java"><comment type="block">/*

   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>batik</name><operator>.</operator><name>dom</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>InputStream</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>Reader</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>w3c</name><operator>.</operator><name>dom</name><operator>.</operator><name>Document</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>xml</name><operator>.</operator><name>sax</name><operator>.</operator><name>XMLReader</name></name>;</import>

<comment type="block" format="javadoc">/**
 * This interface represents an object which can build a Document.
 *
 * @author &lt;a href="mailto:stephane@hillion.org"&gt;Stephane Hillion&lt;/a&gt;
 * @version $Id$
 */</comment>
<interface><specifier>public</specifier> interface <name>DocumentFactory</name> <block>{

    <comment type="block" format="javadoc">/**
     * Sets whether or not the XML stream has to be validate, depending on the
     * specified parameter.
     *
     * @param isValidating true implies the XML stream will be validated
     */</comment>
    <function_decl><type><name>void</name></type> <name>setValidating</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>isValidating</name></decl></parameter>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Returns true if the XML stream has to be validated, false otherwise.
     */</comment>
    <function_decl><type><name>boolean</name></type> <name>isValidating</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Creates a Document instance.
     * @param ns The namespace URI of the root element of the document.
     * @param root The name of the root element of the document.
     * @param uri The document URI.
     * @exception IOException if an error occured while reading the document.
     */</comment>
    <function_decl><type><name>Document</name></type> <name>createDocument</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>ns</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>root</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>uri</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Creates a Document instance.
     * @param ns The namespace URI of the root element of the document.
     * @param root The name of the root element of the document.
     * @param uri The document URI.
     * @param is The document input stream.
     * @exception IOException if an error occured while reading the document.
     */</comment>
    <function_decl><type><name>Document</name></type> <name>createDocument</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>ns</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>root</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>uri</name></decl></parameter>, <parameter><decl><type><name>InputStream</name></type> <name>is</name></decl></parameter>)</parameter_list>
        <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Creates a Document instance.
     * @param ns The namespace URI of the root element of the document.
     * @param root The name of the root element of the document.
     * @param uri The document URI.
     * @param r An XMLReader instance
     * @exception IOException if an error occured while reading the document.
     */</comment>
    <function_decl><type><name>Document</name></type> <name>createDocument</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>ns</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>root</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>uri</name></decl></parameter>, <parameter><decl><type><name>XMLReader</name></type> <name>r</name></decl></parameter>)</parameter_list>
        <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Creates a Document instance.
     * @param ns The namespace URI of the root element of the document.
     * @param root The name of the root element of the document.
     * @param uri The document URI.
     * @param r The document reader.
     * @exception IOException if an error occured while reading the document.
     */</comment>
    <function_decl><type><name>Document</name></type> <name>createDocument</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>ns</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>root</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>uri</name></decl></parameter>, <parameter><decl><type><name>Reader</name></type> <name>r</name></decl></parameter>)</parameter_list>
        <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Returns the document descriptor associated with the latest created
     * document.
     * @return null if no document or descriptor was previously generated.
     */</comment>
    <function_decl><type><name>DocumentDescriptor</name></type> <name>getDocumentDescriptor</name><parameter_list>()</parameter_list>;</function_decl>
}</block></interface>
</unit>
