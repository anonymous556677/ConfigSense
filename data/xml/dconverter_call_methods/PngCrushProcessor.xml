<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/density-converter/src/main/java/at/favre/tools/dconvert/converters/postprocessing/PngCrushProcessor.java"><comment type="block">/*
 *  Copyright 2016 Patrick Favre-Bulle
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>at</name><operator>.</operator><name>favre</name><operator>.</operator><name>tools</name><operator>.</operator><name>dconvert</name><operator>.</operator><name>converters</name><operator>.</operator><name>postprocessing</name></name>;</package>

<import>import <name><name>at</name><operator>.</operator><name>favre</name><operator>.</operator><name>tools</name><operator>.</operator><name>dconvert</name><operator>.</operator><name>arg</name><operator>.</operator><name>ImageType</name></name>;</import>
<import>import <name><name>at</name><operator>.</operator><name>favre</name><operator>.</operator><name>tools</name><operator>.</operator><name>dconvert</name><operator>.</operator><name>converters</name><operator>.</operator><name>Result</name></name>;</import>
<import>import <name><name>at</name><operator>.</operator><name>favre</name><operator>.</operator><name>tools</name><operator>.</operator><name>dconvert</name><operator>.</operator><name>util</name><operator>.</operator><name>MiscUtil</name></name>;</import>
<import>import <name><name>at</name><operator>.</operator><name>favre</name><operator>.</operator><name>tools</name><operator>.</operator><name>dconvert</name><operator>.</operator><name>util</name><operator>.</operator><name>PostProcessorUtil</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Calls pngcrush on a file
 */</comment>
<class><specifier>public</specifier> class <name>PngCrushProcessor</name> <super_list><extends>extends <super><name>APostProcessor</name></super></extends></super_list> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>String</name><index>[]</index></name></type> <name>DEFAULT_ARGS</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="string">"-rem"</literal></expr>, <expr><literal type="string">"alla"</literal></expr>, <expr><literal type="string">"-rem"</literal></expr>, <expr><literal type="string">"text"</literal></expr>, <expr><literal type="string">"-rem"</literal></expr>, <expr><literal type="string">"gAMA"</literal></expr>, <expr><literal type="string">"-rem"</literal></expr>, <expr><literal type="string">"cHRM"</literal></expr>, <expr><literal type="string">"-rem"</literal></expr>, <expr><literal type="string">"iCCP"</literal></expr>, <expr><literal type="string">"-rem"</literal></expr>, <expr><literal type="string">"sRGB"</literal></expr>}</block></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <name><name>String</name><index>[]</index></name></type> <name>additionalArgs</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>PngCrushProcessor</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><name>DEFAULT_ARGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <constructor><specifier>public</specifier> <name>PngCrushProcessor</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>additionalArgs</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>additionalArgs</name></name> <operator>=</operator> <name>additionalArgs</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>Result</name></type> <name>synchronizedProcess</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>rawFile</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>keepOriginal</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name> <init>= <expr><call><name><name>MiscUtil</name><operator>.</operator><name>concat</name></name><argument_list>(<argument><expr><call><name><name>MiscUtil</name><operator>.</operator><name>concat</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="string">"pngcrush"</literal></expr>}</block></expr></argument>, <argument><expr><name>additionalArgs</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="string">"%%sourceFilePath%%"</literal></expr>, <expr><literal type="string">"%%outFilePath%%"</literal></expr>}</block></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><call><name><name>PostProcessorUtil</name><operator>.</operator><name>runImageOptimizer</name></name><argument_list>(<argument><expr><name>rawFile</name></expr></argument>, <argument><expr><name><name>ImageType</name><operator>.</operator><name>PNG</name></name></expr></argument>, <argument><expr><name>args</name></expr></argument>, <argument><expr><name>keepOriginal</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name>Result</name><argument_list>(<argument><expr><literal type="string">"could not execute post processor "</literal> <operator>+</operator> <call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getSimpleName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>, <argument><expr><call><name><name>Collections</name><operator>.</operator><name>singletonList</name></name><argument_list>(<argument><expr><name>rawFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>isSupported</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><call><name><name>PostProcessorUtil</name><operator>.</operator><name>canRunCmd</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name><block>{<expr><literal type="string">"pngcrush"</literal></expr>, <expr><literal type="string">"-h"</literal></expr>}</block></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
