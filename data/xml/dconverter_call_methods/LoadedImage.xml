<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/density-converter/src/main/java/at/favre/tools/dconvert/util/LoadedImage.java"><comment type="block">/*
 *  Copyright 2016 Patrick Favre-Bulle
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>at</name><operator>.</operator><name>favre</name><operator>.</operator><name>tools</name><operator>.</operator><name>dconvert</name><operator>.</operator><name>util</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>twelvemonkeys</name><operator>.</operator><name>imageio</name><operator>.</operator><name>metadata</name><operator>.</operator><name>CompoundDirectory</name></name>;</import>

<import>import <name><name>javax</name><operator>.</operator><name>imageio</name><operator>.</operator><name>metadata</name><operator>.</operator><name>IIOMetadata</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>image</name><operator>.</operator><name>BufferedImage</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Wraps a {@link java.awt.image.BufferedImage} and some other meta data
 */</comment>

<class><specifier>public</specifier> class <name>LoadedImage</name> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>File</name></type> <name>sourceFile</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>BufferedImage</name></type> <name>image</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>IIOMetadata</name></type> <name>metadata</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>CompoundDirectory</name></type> <name>directory</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>LoadedImage</name><parameter_list>(<parameter><decl><type><name>File</name></type> <name>sourceFile</name></decl></parameter>, <parameter><decl><type><name>BufferedImage</name></type> <name>image</name></decl></parameter>, <parameter><decl><type><name>IIOMetadata</name></type> <name>metadata</name></decl></parameter>, <parameter><decl><type><name>CompoundDirectory</name></type> <name>directory</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>sourceFile</name></name> <operator>=</operator> <name>sourceFile</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>image</name></name> <operator>=</operator> <name>image</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>metadata</name></name> <operator>=</operator> <name>metadata</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>directory</name></name> <operator>=</operator> <name>directory</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><type><specifier>public</specifier> <name>File</name></type> <name>getSourceFile</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>sourceFile</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>BufferedImage</name></type> <name>getImage</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>image</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>IIOMetadata</name></type> <name>getMetadata</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>metadata</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>CompoundDirectory</name></type> <name>getExif</name><parameter_list>()</parameter_list> <block>{<block_content>
        <return>return <expr><name>directory</name></expr>;</return>
    </block_content>}</block></function>
}</block></class>
</unit>
