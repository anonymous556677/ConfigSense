<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/metrics/ClientRequestsMetricsHolder.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>metrics</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>EnumMap</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>ConsistencyLevel</name></name>;</import>

<class><specifier>public</specifier> <specifier>final</specifier> class <name>ClientRequestsMetricsHolder</name>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>ClientRequestMetrics</name></type> <name>readMetrics</name> <init>= <expr><operator>new</operator> <call><name>ClientRequestMetrics</name><argument_list>(<argument><expr><literal type="string">"Read"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>ClientWriteRequestMetrics</name></type> <name>writeMetrics</name> <init>= <expr><operator>new</operator> <call><name>ClientWriteRequestMetrics</name><argument_list>(<argument><expr><literal type="string">"Write"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>CASClientWriteRequestMetrics</name></type> <name>casWriteMetrics</name> <init>= <expr><operator>new</operator> <call><name>CASClientWriteRequestMetrics</name><argument_list>(<argument><expr><literal type="string">"CASWrite"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>CASClientRequestMetrics</name></type> <name>casReadMetrics</name> <init>= <expr><operator>new</operator> <call><name>CASClientRequestMetrics</name><argument_list>(<argument><expr><literal type="string">"CASRead"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>ViewWriteMetrics</name></type> <name>viewWriteMetrics</name> <init>= <expr><operator>new</operator> <call><name>ViewWriteMetrics</name><argument_list>(<argument><expr><literal type="string">"ViewWrite"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>ConsistencyLevel</name></argument>, <argument><name>ClientRequestMetrics</name></argument>&gt;</argument_list></name></type> <name>readMetricsMap</name> <init>= <expr><operator>new</operator> <call><name><name>EnumMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name><name>ConsistencyLevel</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name><name>Map</name><argument_list type="generic">&lt;<argument><name>ConsistencyLevel</name></argument>, <argument><name>ClientWriteRequestMetrics</name></argument>&gt;</argument_list></name></type> <name>writeMetricsMap</name> <init>= <expr><operator>new</operator> <call><name><name>EnumMap</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name><name>ConsistencyLevel</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <static>static
    <block>{<block_content>
        <for>for <control>(<init><decl><type><name>ConsistencyLevel</name></type> <name>level</name> <range>: <expr><call><name><name>ConsistencyLevel</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control>
        <block>{<block_content>
             <expr_stmt><expr><call><name><name>readMetricsMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>level</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ClientRequestMetrics</name><argument_list>(<argument><expr><literal type="string">"Read-"</literal> <operator>+</operator> <call><name><name>level</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>writeMetricsMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>level</name></expr></argument>, <argument><expr><operator>new</operator> <call><name>ClientWriteRequestMetrics</name><argument_list>(<argument><expr><literal type="string">"Write-"</literal> <operator>+</operator> <call><name><name>level</name><operator>.</operator><name>name</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></static>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>ClientRequestMetrics</name></type> <name>readMetricsForLevel</name><parameter_list>(<parameter><decl><type><name>ConsistencyLevel</name></type> <name>level</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>readMetricsMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>level</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>ClientWriteRequestMetrics</name></type> <name>writeMetricsForLevel</name><parameter_list>(<parameter><decl><type><name>ConsistencyLevel</name></type> <name>level</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>writeMetricsMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>level</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
