<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/auth/AllowAllAuthenticator.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>auth</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>InetAddress</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collections</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>exceptions</name><operator>.</operator><name>AuthenticationException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>exceptions</name><operator>.</operator><name>ConfigurationException</name></name>;</import>

<class><specifier>public</specifier> class <name>AllowAllAuthenticator</name> <super_list><implements>implements <super><name>IAuthenticator</name></super></implements></super_list>
<block>{
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>SaslNegotiator</name></type> <name>AUTHENTICATOR_INSTANCE</name> <init>= <expr><operator>new</operator> <call><name>Negotiator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>requireAuthentication</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>IResource</name></argument>&gt;</argument_list></name></type> <name>protectedResources</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>Collections</name><operator>.</operator><name>emptySet</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>validateConfiguration</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>ConfigurationException</name></expr></argument></throws>
    <block>{<block_content>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>setup</name><parameter_list>()</parameter_list>
    <block>{<block_content>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>SaslNegotiator</name></type> <name>newSaslNegotiator</name><parameter_list>(<parameter><decl><type><name>InetAddress</name></type> <name>clientAddress</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <return>return <expr><name>AUTHENTICATOR_INSTANCE</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>AuthenticatedUser</name></type> <name>legacyAuthenticate</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name>String</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>credentialsData</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <return>return <expr><name><name>AuthenticatedUser</name><operator>.</operator><name>ANONYMOUS_USER</name></name></expr>;</return>
    </block_content>}</block></function>

    <class><specifier>private</specifier> <specifier>static</specifier> class <name>Negotiator</name> <super_list><implements>implements <super><name>SaslNegotiator</name></super></implements></super_list>
    <block>{

        <function><type><specifier>public</specifier> <name><name>byte</name><index>[]</index></name></type> <name>evaluateResponse</name><parameter_list>(<parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>clientResponse</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>AuthenticationException</name></expr></argument></throws>
        <block>{<block_content>
            <return>return <expr><literal type="null">null</literal></expr>;</return>
        </block_content>}</block></function>

        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isComplete</name><parameter_list>()</parameter_list>
        <block>{<block_content>
            <return>return <expr><literal type="boolean">true</literal></expr>;</return>
        </block_content>}</block></function>

        <function><type><specifier>public</specifier> <name>AuthenticatedUser</name></type> <name>getAuthenticatedUser</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AuthenticationException</name></expr></argument></throws>
        <block>{<block_content>
            <return>return <expr><name><name>AuthenticatedUser</name><operator>.</operator><name>ANONYMOUS_USER</name></name></expr>;</return>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
