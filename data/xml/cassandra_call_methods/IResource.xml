<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/auth/IResource.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>auth</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<comment type="block" format="javadoc">/**
 * The interface at the core of Cassandra authorization.
 *
 * Represents a resource in the hierarchy.
 * Currently just one resource type is supported by Cassandra
 * @see DataResource
 */</comment>
<interface><specifier>public</specifier> interface <name>IResource</name>
<block>{
    <comment type="block" format="javadoc">/**
     * @return printable name of the resource.
     */</comment>
    <function_decl><type><name>String</name></type> <name>getName</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Gets next resource in the hierarchy. Call hasParent first to make sure there is one.
     *
     * @return Resource parent (or IllegalStateException if there is none). Never a null.
     */</comment>
    <function_decl><type><name>IResource</name></type> <name>getParent</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Indicates whether or not this resource has a parent in the hierarchy.
     *
     * Please perform this check before calling getParent() method.
     * @return Whether or not the resource has a parent.
     */</comment>
    <function_decl><type><name>boolean</name></type> <name>hasParent</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * @return Whether or not this resource exists in Cassandra.
     */</comment>
    <function_decl><type><name>boolean</name></type> <name>exists</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Returns the set of Permissions that may be applied to this resource
     *
     * Certain permissions are not applicable to particular types of resources.
     * For instance, it makes no sense to talk about CREATE permission on table, or SELECT on a Role.
     * Here we filter a set of permissions depending on the specific resource they're being applied to.
     * This is necessary because the CQL syntax supports ALL as wildcard, but the set of permissions that
     * should resolve to varies by IResource.
     *
     * @return the permissions that may be granted on the specific resource
     */</comment>
    <function_decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Permission</name></argument>&gt;</argument_list></name></type> <name>applicablePermissions</name><parameter_list>()</parameter_list>;</function_decl>
}</block></interface>
</unit>
