<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/service/reads/repair/ReadRepairStrategy.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>service</name><operator>.</operator><name>reads</name><operator>.</operator><name>repair</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>ReadCommand</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>locator</name><operator>.</operator><name>Endpoints</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>locator</name><operator>.</operator><name>ReplicaLayout</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>locator</name><operator>.</operator><name>ReplicaPlan</name></name>;</import>

<enum><specifier>public</specifier> enum <name>ReadRepairStrategy</name> <super_list><implements>implements <super><name><name>ReadRepair</name><operator>.</operator><name>Factory</name></name></super></implements></super_list>
<block>{
    <decl><name>NONE</name>
    <block>{
        <function><type><specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>E</name> <extends>extends <name><name>Endpoints</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name></extends></parameter>, <parameter><name>P</name> <extends>extends <name>ReplicaPlan</name><operator>.</operator><name><name>ForRead</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name></extends></parameter>&gt;</parameter_list>
        <name><name>ReadRepair</name><argument_list type="generic">&lt;<argument><name>E</name></argument>, <argument><name>P</name></argument>&gt;</argument_list></name></type> <name>create</name><parameter_list>(<parameter><decl><type><name>ReadCommand</name></type> <name>command</name></decl></parameter>, <parameter><decl><type><name><name>ReplicaPlan</name><operator>.</operator><name><name>Shared</name><argument_list type="generic">&lt;<argument><name>E</name></argument>, <argument><name>P</name></argument>&gt;</argument_list></name></name></type> <name>replicaPlan</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>queryStartNanoTime</name></decl></parameter>)</parameter_list>
        <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name><name>ReadOnlyReadRepair</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>command</name></expr></argument>, <argument><expr><name>replicaPlan</name></expr></argument>, <argument><expr><name>queryStartNanoTime</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>
    }</block></decl>,

    <decl><name>BLOCKING</name>
    <block>{
        <function><type><specifier>public</specifier> <parameter_list type="generic">&lt;<parameter><name>E</name> <extends>extends <name><name>Endpoints</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name></extends></parameter>, <parameter><name>P</name> <extends>extends <name>ReplicaPlan</name><operator>.</operator><name><name>ForRead</name><argument_list type="generic">&lt;<argument><name>E</name></argument>&gt;</argument_list></name></extends></parameter>&gt;</parameter_list>
        <name><name>ReadRepair</name><argument_list type="generic">&lt;<argument><name>E</name></argument>, <argument><name>P</name></argument>&gt;</argument_list></name></type> <name>create</name><parameter_list>(<parameter><decl><type><name>ReadCommand</name></type> <name>command</name></decl></parameter>, <parameter><decl><type><name><name>ReplicaPlan</name><operator>.</operator><name><name>Shared</name><argument_list type="generic">&lt;<argument><name>E</name></argument>, <argument><name>P</name></argument>&gt;</argument_list></name></name></type> <name>replicaPlan</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>queryStartNanoTime</name></decl></parameter>)</parameter_list>
        <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name><name>BlockingReadRepair</name><argument_list type="generic">&lt;&gt;</argument_list></name><argument_list>(<argument><expr><name>command</name></expr></argument>, <argument><expr><name>replicaPlan</name></expr></argument>, <argument><expr><name>queryStartNanoTime</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>
    }</block></decl>;

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>ReadRepairStrategy</name></type> <name>fromString</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>s</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name>valueOf</name><argument_list>(<argument><expr><call><name><name>s</name><operator>.</operator><name>toUpperCase</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
}</block></enum>
</unit>
