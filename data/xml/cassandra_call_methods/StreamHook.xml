<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/streaming/StreamHook.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>streaming</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>schema</name><operator>.</operator><name>TableId</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>streaming</name><operator>.</operator><name>messages</name><operator>.</operator><name>OutgoingStreamMessage</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>utils</name><operator>.</operator><name>FBUtilities</name></name>;</import>

<interface><specifier>public</specifier> interface <name>StreamHook</name>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>StreamHook</name></type> <name>instance</name> <init>= <expr><call><name>createHook</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <function_decl><type><specifier>public</specifier> <name>OutgoingStreamMessage</name></type> <name>reportOutgoingStream</name><parameter_list>(<parameter><decl><type><name>StreamSession</name></type> <name>session</name></decl></parameter>, <parameter><decl><type><name>OutgoingStream</name></type> <name>stream</name></decl></parameter>, <parameter><decl><type><name>OutgoingStreamMessage</name></type> <name>message</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>reportStreamFuture</name><parameter_list>(<parameter><decl><type><name>StreamSession</name></type> <name>session</name></decl></parameter>, <parameter><decl><type><name>StreamResultFuture</name></type> <name>future</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>reportIncomingStream</name><parameter_list>(<parameter><decl><type><name>TableId</name></type> <name>tableId</name></decl></parameter>, <parameter><decl><type><name>IncomingStream</name></type> <name>stream</name></decl></parameter>, <parameter><decl><type><name>StreamSession</name></type> <name>session</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sequenceNumber</name></decl></parameter>)</parameter_list>;</function_decl>

    <function><type><specifier>static</specifier> <name>StreamHook</name></type> <name>createHook</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>className</name> <init>=  <expr><call><name><name>System</name><operator>.</operator><name>getProperty</name></name><argument_list>(<argument><expr><literal type="string">"cassandra.stream_hook"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>className</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition>
        <block>{<block_content>
            <return>return <expr><call><name><name>FBUtilities</name><operator>.</operator><name>construct</name></name><argument_list>(<argument><expr><name>className</name></expr></argument>, <argument><expr><call><name><name>StreamHook</name><operator>.</operator><name><name>class</name><operator>.</operator><name>getSimpleName</name></name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></if>
        <else>else
        <block>{<block_content>
            <return>return <expr><operator>new</operator> <class><super><name>StreamHook</name></super><argument_list>()</argument_list>
            <block>{
                <function><type><specifier>public</specifier> <name>OutgoingStreamMessage</name></type> <name>reportOutgoingStream</name><parameter_list>(<parameter><decl><type><name>StreamSession</name></type> <name>session</name></decl></parameter>, <parameter><decl><type><name>OutgoingStream</name></type> <name>stream</name></decl></parameter>, <parameter><decl><type><name>OutgoingStreamMessage</name></type> <name>message</name></decl></parameter>)</parameter_list>
                <block>{<block_content>
                    <return>return <expr><name>message</name></expr>;</return>
                </block_content>}</block></function>

                <function><type><specifier>public</specifier> <name>void</name></type> <name>reportStreamFuture</name><parameter_list>(<parameter><decl><type><name>StreamSession</name></type> <name>session</name></decl></parameter>, <parameter><decl><type><name>StreamResultFuture</name></type> <name>future</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>

                <function><type><specifier>public</specifier> <name>void</name></type> <name>reportIncomingStream</name><parameter_list>(<parameter><decl><type><name>TableId</name></type> <name>tableId</name></decl></parameter>, <parameter><decl><type><name>IncomingStream</name></type> <name>stream</name></decl></parameter>, <parameter><decl><type><name>StreamSession</name></type> <name>session</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sequenceNumber</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>
            }</block></class></expr>;</return>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>
}</block></interface>
</unit>
