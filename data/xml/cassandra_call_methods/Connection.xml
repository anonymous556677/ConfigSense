<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/transport/Connection.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>transport</name></name>;</package>

<import>import <name><name>io</name><operator>.</operator><name>netty</name><operator>.</operator><name>channel</name><operator>.</operator><name>Channel</name></name>;</import>
<import>import <name><name>io</name><operator>.</operator><name>netty</name><operator>.</operator><name>util</name><operator>.</operator><name>AttributeKey</name></name>;</import>

<class><specifier>public</specifier> class <name>Connection</name>
<block>{
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name><name>AttributeKey</name><argument_list type="generic">&lt;<argument><name>Connection</name></argument>&gt;</argument_list></name></type> <name>attributeKey</name> <init>= <expr><call><name><name>AttributeKey</name><operator>.</operator><name>valueOf</name></name><argument_list>(<argument><expr><literal type="string">"CONN"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Channel</name></type> <name>channel</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>ProtocolVersion</name></type> <name>version</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Tracker</name></type> <name>tracker</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>throwOnOverload</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>volatile</specifier> <name>Compressor</name></type> <name>preV5MessageCompressor</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>Connection</name><parameter_list>(<parameter><decl><type><name>Channel</name></type> <name>channel</name></decl></parameter>, <parameter><decl><type><name>ProtocolVersion</name></type> <name>version</name></decl></parameter>, <parameter><decl><type><name>Tracker</name></type> <name>tracker</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>channel</name></name> <operator>=</operator> <name>channel</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>version</name></name> <operator>=</operator> <name>version</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>tracker</name></name> <operator>=</operator> <name>tracker</name></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name>tracker</name><operator>.</operator><name>addConnection</name></name><argument_list>(<argument><expr><name>channel</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>setCompressor</name><parameter_list>(<parameter><decl><type><name>Compressor</name></type> <name>compressor</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>preV5MessageCompressor</name></name> <operator>=</operator> <name>compressor</name></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Compressor</name></type> <name>getCompressor</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><name>preV5MessageCompressor</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>setThrowOnOverload</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>throwOnOverload</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>throwOnOverload</name></name> <operator>=</operator> <name>throwOnOverload</name></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isThrowOnOverload</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><name>throwOnOverload</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Tracker</name></type> <name>getTracker</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><name>tracker</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>ProtocolVersion</name></type> <name>getVersion</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><name>version</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Channel</name></type> <name>channel</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><name>channel</name></expr>;</return>
    </block_content>}</block></function>

    <interface><specifier>public</specifier> interface <name>Factory</name>
    <block>{
        <function_decl><type><name>Connection</name></type> <name>newConnection</name><parameter_list>(<parameter><decl><type><name>Channel</name></type> <name>channel</name></decl></parameter>, <parameter><decl><type><name>ProtocolVersion</name></type> <name>version</name></decl></parameter>)</parameter_list>;</function_decl>
    }</block></interface>

    <interface><specifier>public</specifier> interface <name>Tracker</name>
    <block>{
        <function_decl><type><name>void</name></type> <name>addConnection</name><parameter_list>(<parameter><decl><type><name>Channel</name></type> <name>ch</name></decl></parameter>, <parameter><decl><type><name>Connection</name></type> <name>connection</name></decl></parameter>)</parameter_list>;</function_decl>
    }</block></interface>
}</block></class>
</unit>
