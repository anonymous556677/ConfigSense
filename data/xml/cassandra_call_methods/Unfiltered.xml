<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/db/rows/Unfiltered.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>rows</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>ClusteringPrefix</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>Digest</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>schema</name><operator>.</operator><name>TableMetadata</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>Clusterable</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Unfiltered is the common class for the main constituent of an unfiltered partition.
 * &lt;p&gt;
 * In practice, an Unfiltered is either a row or a range tombstone marker. Unfiltereds
 * are uniquely identified by their clustering information and can be sorted according
 * to those.
 *
 * We don't set the type parameter for Clusterable here because it doesn't make sense in
 * the context of an Unfiltered. Merge iterators can produce rows containing clustering
 * and cell values with multiple backing types. Also, by the time you're dealing with
 * Unfiltered objects, the backing type should be considered opaque.
 */</comment>
<interface><specifier>public</specifier> interface <name>Unfiltered</name> <super_list><extends>extends <super><name>Clusterable</name></super></extends></super_list>
<block>{
    <enum><specifier>public</specifier> enum <name>Kind</name> <block>{ <decl><name>ROW</name></decl>, <decl><name>RANGE_TOMBSTONE_MARKER</name></decl> }</block></enum>

    <comment type="block" format="javadoc">/**
     * The kind of the atom: either row or range tombstone marker.
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>Kind</name></type> <name>kind</name><parameter_list>()</parameter_list>;</function_decl>

    <function_decl><type><name><name>ClusteringPrefix</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>clustering</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Digest the atom using the provided {@link Digest}.
     *
     * @param digest the {@see Digest} to use.
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>digest</name><parameter_list>(<parameter><decl><type><name>Digest</name></type> <name>digest</name></decl></parameter>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Validate the data of this atom.
     *
     * @param metadata the metadata for the table this atom is part of.
     * @throws org.apache.cassandra.serializers.MarshalException if some of the data in this atom is
     * invalid (some value is invalid for its column type, or some field
     * is nonsensical).
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>void</name></type> <name>validateData</name><parameter_list>(<parameter><decl><type><name>TableMetadata</name></type> <name>metadata</name></decl></parameter>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Do a quick validation of the deletions of the unfiltered (if any)
     *
     * @return true if any deletion is invalid
     */</comment>
    <function_decl><type><specifier>public</specifier> <name>boolean</name></type> <name>hasInvalidDeletions</name><parameter_list>()</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>boolean</name></type> <name>isEmpty</name><parameter_list>()</parameter_list>;</function_decl>

    <function_decl><type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>(<parameter><decl><type><name>TableMetadata</name></type> <name>metadata</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>(<parameter><decl><type><name>TableMetadata</name></type> <name>metadata</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>fullDetails</name></decl></parameter>)</parameter_list>;</function_decl>
    <function_decl><type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>(<parameter><decl><type><name>TableMetadata</name></type> <name>metadata</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>includeClusterKeys</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>fullDetails</name></decl></parameter>)</parameter_list>;</function_decl>

    <function><type><specifier>default</specifier> <name>boolean</name></type> <name>isRow</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name>kind</name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>Kind</name><operator>.</operator><name>ROW</name></name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>default</specifier> <name>boolean</name></type> <name>isRangeTombstoneMarker</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name>kind</name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>Kind</name><operator>.</operator><name>RANGE_TOMBSTONE_MARKER</name></name></expr>;</return>
    </block_content>}</block></function>
}</block></interface>
</unit>
