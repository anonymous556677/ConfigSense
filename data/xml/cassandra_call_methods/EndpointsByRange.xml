<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/locator/EndpointsByRange.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>locator</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Preconditions</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>ImmutableMap</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>collect</name><operator>.</operator><name>Maps</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>dht</name><operator>.</operator><name>Range</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>dht</name><operator>.</operator><name>Token</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>locator</name><operator>.</operator><name>ReplicaCollection</name><operator>.</operator><name>Builder</name><operator>.</operator><name>Conflict</name></name>;</import>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Map</name></name>;</import>

<class><specifier>public</specifier> class <name>EndpointsByRange</name> <super_list><extends>extends <super><name><name>ReplicaMultimap</name><argument_list type="generic">&lt;<argument><name><name>Range</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name></argument>, <argument><name>EndpointsForRange</name></argument>&gt;</argument_list></name></super></extends></super_list>
<block>{
    <constructor><specifier>public</specifier> <name>EndpointsByRange</name><parameter_list>(<parameter><decl><type><name><name>Map</name><argument_list type="generic">&lt;<argument><name><name>Range</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name></argument>, <argument><name>EndpointsForRange</name></argument>&gt;</argument_list></name></type> <name>map</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><type><specifier>public</specifier> <name>EndpointsForRange</name></type> <name>get</name><parameter_list>(<parameter><decl><type><name><name>Range</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name></type> <name>range</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <expr_stmt><expr><call><name><name>Preconditions</name><operator>.</operator><name>checkNotNull</name></name><argument_list>(<argument><expr><name>range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return>return <expr><call><name><name>map</name><operator>.</operator><name>getOrDefault</name></name><argument_list>(<argument><expr><name>range</name></expr></argument>, <argument><expr><call><name><name>EndpointsForRange</name><operator>.</operator><name>empty</name></name><argument_list>(<argument><expr><name>range</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Builder</name> <super_list><extends>extends <super><name><name>ReplicaMultimap</name><operator>.</operator><name><name>Builder</name><argument_list type="generic">&lt;<argument><name><name>Range</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name></argument>, <argument><name><name>EndpointsForRange</name><operator>.</operator><name>Builder</name></name></argument>&gt;</argument_list></name></name></super></extends></super_list>
    <block>{
        <function><annotation>@<name>Override</name></annotation>
        <type><specifier>protected</specifier> <name><name>EndpointsForRange</name><operator>.</operator><name>Builder</name></name></type> <name>newBuilder</name><parameter_list>(<parameter><decl><type><name><name>Range</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name></type> <name>range</name></decl></parameter>)</parameter_list>
        <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name><name>EndpointsForRange</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><name>range</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>

        <comment type="line">// TODO: consider all ignoreDuplicates cases</comment>
        <function><type><specifier>public</specifier> <name>void</name></type> <name>putAll</name><parameter_list>(<parameter><decl><type><name><name>Range</name><argument_list type="generic">&lt;<argument><name>Token</name></argument>&gt;</argument_list></name></type> <name>range</name></decl></parameter>, <parameter><decl><type><name>EndpointsForRange</name></type> <name>replicas</name></decl></parameter>, <parameter><decl><type><name>Conflict</name></type> <name>ignoreConflicts</name></decl></parameter>)</parameter_list>
        <block>{<block_content>
            <expr_stmt><expr><call><name>get</name><argument_list>(<argument><expr><name>range</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>addAll</name><argument_list>(<argument><expr><name>replicas</name></expr></argument>, <argument><expr><name>ignoreConflicts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function>

        <function><type><specifier>public</specifier> <name>EndpointsByRange</name></type> <name>build</name><parameter_list>()</parameter_list>
        <block>{<block_content>
            <return>return <expr><operator>new</operator> <call><name>EndpointsByRange</name><argument_list>(
                    <argument><expr><call><name><name>ImmutableMap</name><operator>.</operator><name>copyOf</name></name><argument_list>(
                            <argument><expr><call><name><name>Maps</name><operator>.</operator><name>transformValues</name></name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>map</name></name></expr></argument>, <argument><expr><name><name>EndpointsForRange</name><operator>.</operator><name>Builder</name></name><operator>::</operator><name>build</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>
    }</block></class>

}</block></class>
</unit>
