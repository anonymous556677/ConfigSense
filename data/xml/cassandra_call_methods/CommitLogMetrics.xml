<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/metrics/CommitLogMetrics.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>metrics</name></name>;</package>

<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Gauge</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Meter</name></name>;</import>
<import>import <name><name>com</name><operator>.</operator><name>codahale</name><operator>.</operator><name>metrics</name><operator>.</operator><name>Timer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>commitlog</name><operator>.</operator><name>AbstractCommitLogService</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>commitlog</name><operator>.</operator><name>AbstractCommitLogSegmentManager</name></name>;</import>

<import>import static <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>metrics</name><operator>.</operator><name>CassandraMetricsRegistry</name><operator>.</operator><name>Metrics</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Metrics for commit log
 */</comment>
<class><specifier>public</specifier> class <name>CommitLogMetrics</name>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>MetricNameFactory</name></type> <name>factory</name> <init>= <expr><operator>new</operator> <call><name>DefaultNameFactory</name><argument_list>(<argument><expr><literal type="string">"CommitLog"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc">/** Number of completed tasks */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>completedTasks</name></decl>;</decl_stmt>
    <comment type="block" format="javadoc">/** Number of pending tasks */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>pendingTasks</name></decl>;</decl_stmt>
    <comment type="block" format="javadoc">/** Current size used by all the commit log segments */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></type> <name>totalCommitLogSize</name></decl>;</decl_stmt>
    <comment type="block" format="javadoc">/** Time spent waiting for a CLS to be allocated - under normal conditions this should be zero */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>Timer</name></type> <name>waitingOnSegmentAllocation</name></decl>;</decl_stmt>
    <comment type="block" format="javadoc">/** The time spent waiting on CL sync; for Periodic this is only occurs when the sync is lagging its sync interval */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>Timer</name></type> <name>waitingOnCommit</name></decl>;</decl_stmt>
    <comment type="block" format="javadoc">/** Number and rate of oversized mutations */</comment>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>Meter</name></type> <name>oversizedMutations</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>CommitLogMetrics</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <expr_stmt><expr><name>waitingOnSegmentAllocation</name> <operator>=</operator> <call><name><name>Metrics</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><call><name><name>factory</name><operator>.</operator><name>createMetricName</name></name><argument_list>(<argument><expr><literal type="string">"WaitingOnSegmentAllocation"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>waitingOnCommit</name> <operator>=</operator> <call><name><name>Metrics</name><operator>.</operator><name>timer</name></name><argument_list>(<argument><expr><call><name><name>factory</name><operator>.</operator><name>createMetricName</name></name><argument_list>(<argument><expr><literal type="string">"WaitingOnCommit"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>oversizedMutations</name> <operator>=</operator> <call><name><name>Metrics</name><operator>.</operator><name>meter</name></name><argument_list>(<argument><expr><call><name><name>factory</name><operator>.</operator><name>createMetricName</name></name><argument_list>(<argument><expr><literal type="string">"OverSizedMutations"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>attach</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>AbstractCommitLogService</name></type> <name>service</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>AbstractCommitLogSegmentManager</name></type> <name>segmentManager</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <expr_stmt><expr><name>completedTasks</name> <operator>=</operator> <call><name><name>Metrics</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><call><name><name>factory</name><operator>.</operator><name>createMetricName</name></name><argument_list>(<argument><expr><literal type="string">"CompletedTasks"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list>
        <block>{
            <function><type><specifier>public</specifier> <name>Long</name></type> <name>getValue</name><parameter_list>()</parameter_list>
            <block>{<block_content>
                <return>return <expr><call><name><name>service</name><operator>.</operator><name>getCompletedTasks</name></name><argument_list>()</argument_list></call></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>pendingTasks</name> <operator>=</operator> <call><name><name>Metrics</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><call><name><name>factory</name><operator>.</operator><name>createMetricName</name></name><argument_list>(<argument><expr><literal type="string">"PendingTasks"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list>
        <block>{
            <function><type><specifier>public</specifier> <name>Long</name></type> <name>getValue</name><parameter_list>()</parameter_list>
            <block>{<block_content>
                <return>return <expr><call><name><name>service</name><operator>.</operator><name>getPendingTasks</name></name><argument_list>()</argument_list></call></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>totalCommitLogSize</name> <operator>=</operator> <call><name><name>Metrics</name><operator>.</operator><name>register</name></name><argument_list>(<argument><expr><call><name><name>factory</name><operator>.</operator><name>createMetricName</name></name><argument_list>(<argument><expr><literal type="string">"TotalCommitLogSize"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>new</operator> <class><super><name><name>Gauge</name><argument_list type="generic">&lt;<argument><name>Long</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list>
        <block>{
            <function><type><specifier>public</specifier> <name>Long</name></type> <name>getValue</name><parameter_list>()</parameter_list>
            <block>{<block_content>
                <return>return <expr><call><name><name>segmentManager</name><operator>.</operator><name>onDiskSize</name></name><argument_list>()</argument_list></call></expr>;</return>
            </block_content>}</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class>
</unit>
