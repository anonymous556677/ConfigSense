<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/service/paxos/Commit.java"><package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>service</name><operator>.</operator><name>paxos</name></name>;</package>
<comment type="block">/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */</comment>


<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>IOException</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>UUID</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Objects</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>schema</name><operator>.</operator><name>TableMetadata</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>rows</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>partitions</name><operator>.</operator><name>PartitionUpdate</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>io</name><operator>.</operator><name>IVersionedSerializer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>io</name><operator>.</operator><name>util</name><operator>.</operator><name>DataInputPlus</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>io</name><operator>.</operator><name>util</name><operator>.</operator><name>DataOutputPlus</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>utils</name><operator>.</operator><name>UUIDGen</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>utils</name><operator>.</operator><name>UUIDSerializer</name></name>;</import>

<class><specifier>public</specifier> class <name>Commit</name>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>CommitSerializer</name></type> <name>serializer</name> <init>= <expr><operator>new</operator> <call><name>CommitSerializer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>UUID</name></type> <name>ballot</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>PartitionUpdate</name></type> <name>update</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>Commit</name><parameter_list>(<parameter><decl><type><name>UUID</name></type> <name>ballot</name></decl></parameter>, <parameter><decl><type><name>PartitionUpdate</name></type> <name>update</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <assert>assert <expr><name>ballot</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</assert>
        <assert>assert <expr><name>update</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</assert>

        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>ballot</name></name> <operator>=</operator> <name>ballot</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>update</name></name> <operator>=</operator> <name>update</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>Commit</name></type> <name>newPrepare</name><parameter_list>(<parameter><decl><type><name>DecoratedKey</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>TableMetadata</name></type> <name>metadata</name></decl></parameter>, <parameter><decl><type><name>UUID</name></type> <name>ballot</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <return>return <expr><operator>new</operator> <call><name>Commit</name><argument_list>(<argument><expr><name>ballot</name></expr></argument>, <argument><expr><call><name><name>PartitionUpdate</name><operator>.</operator><name>emptyUpdate</name></name><argument_list>(<argument><expr><name>metadata</name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>Commit</name></type> <name>newProposal</name><parameter_list>(<parameter><decl><type><name>UUID</name></type> <name>ballot</name></decl></parameter>, <parameter><decl><type><name>PartitionUpdate</name></type> <name>update</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <decl_stmt><decl><type><name>PartitionUpdate</name></type> <name>withNewTimestamp</name> <init>= <expr><operator>new</operator> <call><name><name>PartitionUpdate</name><operator>.</operator><name>Builder</name></name><argument_list>(<argument><expr><name>update</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>updateAllTimestamp</name><argument_list>(<argument><expr><call><name><name>UUIDGen</name><operator>.</operator><name>microsTimestamp</name></name><argument_list>(<argument><expr><name>ballot</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>build</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <return>return <expr><operator>new</operator> <call><name>Commit</name><argument_list>(<argument><expr><name>ballot</name></expr></argument>, <argument><expr><name>withNewTimestamp</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>Commit</name></type> <name>emptyCommit</name><parameter_list>(<parameter><decl><type><name>DecoratedKey</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>TableMetadata</name></type> <name>metadata</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <return>return <expr><operator>new</operator> <call><name>Commit</name><argument_list>(<argument><expr><call><name><name>UUIDGen</name><operator>.</operator><name>minTimeUUID</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>PartitionUpdate</name><operator>.</operator><name>emptyUpdate</name></name><argument_list>(<argument><expr><name>metadata</name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isAfter</name><parameter_list>(<parameter><decl><type><name>Commit</name></type> <name>other</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>ballot</name><operator>.</operator><name>timestamp</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <call><name><name>other</name><operator>.</operator><name>ballot</name><operator>.</operator><name>timestamp</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>hasBallot</name><parameter_list>(<parameter><decl><type><name>UUID</name></type> <name>ballot</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>this</name><operator>.</operator><name>ballot</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>ballot</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/** Whether this is an empty commit, that is one with no updates. */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isEmpty</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>update</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>Mutation</name></type> <name>makeMutation</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><operator>new</operator> <call><name>Mutation</name><argument_list>(<argument><expr><name>update</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>equals</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>o</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>this</name> <operator>==</operator> <name>o</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">true</literal></expr>;</return></block_content></block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name>o</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name>getClass</name><argument_list>()</argument_list></call> <operator>!=</operator> <call><name><name>o</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

        <decl_stmt><decl><type><name>Commit</name></type> <name>commit</name> <init>= <expr><operator>(</operator><name>Commit</name><operator>)</operator> <name>o</name></expr></init></decl>;</decl_stmt>

        <return>return <expr><call><name><name>ballot</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>commit</name><operator>.</operator><name>ballot</name></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>update</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name><name>commit</name><operator>.</operator><name>update</name></name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>Objects</name><operator>.</operator><name>hashCode</name></name><argument_list>(<argument><expr><name>ballot</name></expr></argument>, <argument><expr><name>update</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Commit(%s, %s)"</literal></expr></argument>, <argument><expr><name>ballot</name></expr></argument>, <argument><expr><name>update</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <class><specifier>public</specifier> <specifier>static</specifier> class <name>CommitSerializer</name> <super_list><implements>implements <super><name><name>IVersionedSerializer</name><argument_list type="generic">&lt;<argument><name>Commit</name></argument>&gt;</argument_list></name></super></implements></super_list>
    <block>{
        <function><type><specifier>public</specifier> <name>void</name></type> <name>serialize</name><parameter_list>(<parameter><decl><type><name>Commit</name></type> <name>commit</name></decl></parameter>, <parameter><decl><type><name>DataOutputPlus</name></type> <name>out</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>
        <block>{<block_content>
            <expr_stmt><expr><call><name><name>UUIDSerializer</name><operator>.</operator><name>serializer</name><operator>.</operator><name>serialize</name></name><argument_list>(<argument><expr><name><name>commit</name><operator>.</operator><name>ballot</name></name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>PartitionUpdate</name><operator>.</operator><name>serializer</name><operator>.</operator><name>serialize</name></name><argument_list>(<argument><expr><name><name>commit</name><operator>.</operator><name>update</name></name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></function>

        <function><type><specifier>public</specifier> <name>Commit</name></type> <name>deserialize</name><parameter_list>(<parameter><decl><type><name>DataInputPlus</name></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws>
        <block>{<block_content>
            <decl_stmt><decl><type><name>UUID</name></type> <name>ballot</name> <init>= <expr><call><name><name>UUIDSerializer</name><operator>.</operator><name>serializer</name><operator>.</operator><name>deserialize</name></name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>PartitionUpdate</name></type> <name>update</name> <init>= <expr><call><name><name>PartitionUpdate</name><operator>.</operator><name>serializer</name><operator>.</operator><name>deserialize</name></name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>version</name></expr></argument>, <argument><expr><name><name>DeserializationHelper</name><operator>.</operator><name>Flag</name><operator>.</operator><name>LOCAL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><operator>new</operator> <call><name>Commit</name><argument_list>(<argument><expr><name>ballot</name></expr></argument>, <argument><expr><name>update</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>

        <function><type><specifier>public</specifier> <name>long</name></type> <name>serializedSize</name><parameter_list>(<parameter><decl><type><name>Commit</name></type> <name>commit</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>)</parameter_list>
        <block>{<block_content>
            <return>return <expr><call><name><name>UUIDSerializer</name><operator>.</operator><name>serializer</name><operator>.</operator><name>serializedSize</name></name><argument_list>(<argument><expr><name><name>commit</name><operator>.</operator><name>ballot</name></name></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call>
                 <operator>+</operator> <call><name><name>PartitionUpdate</name><operator>.</operator><name>serializer</name><operator>.</operator><name>serializedSize</name></name><argument_list>(<argument><expr><name><name>commit</name><operator>.</operator><name>update</name></name></expr></argument>, <argument><expr><name>version</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></function>
    }</block></class>
}</block></class>
</unit>
