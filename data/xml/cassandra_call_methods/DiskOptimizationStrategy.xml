<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/io/util/DiskOptimizationStrategy.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>io</name><operator>.</operator><name>util</name></name>;</package>

<interface><specifier>public</specifier> interface <name>DiskOptimizationStrategy</name>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>MIN_BUFFER_SIZE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">12</literal></expr></init></decl>;</decl_stmt> <comment type="line">// 4096, the typical size of a page in the OS cache</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>MIN_BUFFER_SIZE_MASK</name> <init>= <expr><name>MIN_BUFFER_SIZE</name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

    <comment type="line">// The maximum buffer size, we will never buffer more than this size. Further,</comment>
    <comment type="line">// when the limiter is not null, i.e. when throttling is enabled, we read exactly</comment>
    <comment type="line">// this size, since when throttling the intention is to eventually read everything,</comment>
    <comment type="line">// see CASSANDRA-8630</comment>
    <comment type="line">// NOTE: this size is chosen both for historical consistency, as a reasonable upper bound,</comment>
    <comment type="line">//       and because our BufferPool currently has a maximum allocation size of this.</comment>
    <decl_stmt><decl><type><name>int</name></type> <name>MAX_BUFFER_SIZE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal></expr></init></decl>;</decl_stmt> <comment type="line">// 64k</comment>

    <comment type="block" format="javadoc">/**
     * @param recordSize record size
     * @return the buffer size for a given record size.
     */</comment>
    <function_decl><type><name>int</name></type> <name>bufferSize</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>recordSize</name></decl></parameter>)</parameter_list>;</function_decl>

    <comment type="block" format="javadoc">/**
     * Round up to the next multiple of 4k but no more than {@link #MAX_BUFFER_SIZE}.
     */</comment>
    <function><type><specifier>default</specifier> <name>int</name></type> <name>roundBufferSize</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>size</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>size</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><name>MIN_BUFFER_SIZE</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt><expr><name>size</name> <operator>=</operator> <operator>(</operator><name>size</name> <operator>+</operator> <name>MIN_BUFFER_SIZE_MASK</name><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><name>MIN_BUFFER_SIZE_MASK</name></expr>;</expr_stmt>
        <return>return <expr><operator>(</operator><name>int</name><operator>)</operator><call><name><name>Math</name><operator>.</operator><name>min</name></name><argument_list>(<argument><expr><name>size</name></expr></argument>, <argument><expr><name>MAX_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Round either up or down to the next power of two, which is required by the
     * {@link org.apache.cassandra.cache.ChunkCache.CachingRebufferer}, but capping between {@link #MIN_BUFFER_SIZE}
     * and {@link #MAX_BUFFER_SIZE}.
     *
     * @param size - the size to round to a power of two, normally this is a buffer size that was previously
     *             returned by a {@link #bufferSize(long)}.
     * @param roundUp - whether to round up or down
     *
     * @return a value rounded to a power of two but never bigger than {@link #MAX_BUFFER_SIZE} or smaller than {@link #MIN_BUFFER_SIZE}.
     */</comment>
    <function><type><specifier>static</specifier> <name>int</name></type> <name>roundForCaching</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>roundUp</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>size</name> <operator>&lt;=</operator> <name>MIN_BUFFER_SIZE</name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><name>MIN_BUFFER_SIZE</name></expr>;</return></block_content></block></if></if_stmt>

        <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><ternary><condition><expr><name>roundUp</name></expr>
                  ?</condition><then> <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <operator>(</operator><literal type="number">32</literal> <operator>-</operator> <call><name><name>Integer</name><operator>.</operator><name>numberOfLeadingZeros</name></name><argument_list>(<argument><expr><name>size</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>
                  </then><else>: <expr><call><name><name>Integer</name><operator>.</operator><name>highestOneBit</name></name><argument_list>(<argument><expr><name>size</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <return>return <expr><call><name><name>Math</name><operator>.</operator><name>min</name></name><argument_list>(<argument><expr><name>MAX_BUFFER_SIZE</name></expr></argument>, <argument><expr><name>ret</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
}</block></interface>
</unit>
