<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/exceptions/UnavailableException.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>exceptions</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>db</name><operator>.</operator><name>ConsistencyLevel</name></name>;</import>

<class><specifier>public</specifier> class <name>UnavailableException</name> <super_list><extends>extends <super><name>RequestExecutionException</name></super></extends></super_list>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>ConsistencyLevel</name></type> <name>consistency</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>int</name></type> <name>required</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>final</specifier> <name>int</name></type> <name>alive</name></decl>;</decl_stmt>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>UnavailableException</name></type> <name>create</name><parameter_list>(<parameter><decl><type><name>ConsistencyLevel</name></type> <name>consistency</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>required</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>alive</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <assert>assert <expr><name>alive</name> <operator>&lt;</operator> <name>required</name></expr>;</assert>
        <return>return <expr><call><name>create</name><argument_list>(<argument><expr><name>consistency</name></expr></argument>, <argument><expr><name>required</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>alive</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>UnavailableException</name></type> <name>create</name><parameter_list>(<parameter><decl><type><name>ConsistencyLevel</name></type> <name>consistency</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>required</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>requiredFull</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>alive</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>aliveFull</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>required</name> <operator>&gt;</operator> <name>alive</name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><operator>new</operator> <call><name>UnavailableException</name><argument_list>(<argument><expr><literal type="string">"Cannot achieve consistency level "</literal> <operator>+</operator> <name>consistency</name></expr></argument>, <argument><expr><name>consistency</name></expr></argument>, <argument><expr><name>required</name></expr></argument>, <argument><expr><name>alive</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
        <assert>assert <expr><name>requiredFull</name> <operator>&lt;</operator> <name>aliveFull</name></expr>;</assert>
        <return>return <expr><operator>new</operator> <call><name>UnavailableException</name><argument_list>(<argument><expr><literal type="string">"Insufficient full replicas"</literal></expr></argument>, <argument><expr><name>consistency</name></expr></argument>, <argument><expr><name>required</name></expr></argument>, <argument><expr><name>alive</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <specifier>static</specifier> <name>UnavailableException</name></type> <name>create</name><parameter_list>(<parameter><decl><type><name>ConsistencyLevel</name></type> <name>consistency</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>dc</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>required</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>requiredFull</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>alive</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>aliveFull</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>required</name> <operator>&gt;</operator> <name>alive</name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><operator>new</operator> <call><name>UnavailableException</name><argument_list>(<argument><expr><literal type="string">"Cannot achieve consistency level "</literal> <operator>+</operator> <name>consistency</name> <operator>+</operator> <literal type="string">" in DC "</literal> <operator>+</operator> <name>dc</name></expr></argument>, <argument><expr><name>consistency</name></expr></argument>, <argument><expr><name>required</name></expr></argument>, <argument><expr><name>alive</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
        <assert>assert <expr><name>requiredFull</name> <operator>&lt;</operator> <name>aliveFull</name></expr>;</assert>
        <return>return <expr><operator>new</operator> <call><name>UnavailableException</name><argument_list>(<argument><expr><literal type="string">"Insufficient full replicas in DC "</literal> <operator>+</operator> <name>dc</name></expr></argument>, <argument><expr><name>consistency</name></expr></argument>, <argument><expr><name>required</name></expr></argument>, <argument><expr><name>alive</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <constructor><specifier>public</specifier> <name>UnavailableException</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>msg</name></decl></parameter>, <parameter><decl><type><name>ConsistencyLevel</name></type> <name>consistency</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>required</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>alive</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name><name>ExceptionCode</name><operator>.</operator><name>UNAVAILABLE</name></name></expr></argument>, <argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>consistency</name></name> <operator>=</operator> <name>consistency</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>required</name></name> <operator>=</operator> <name>required</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>alive</name></name> <operator>=</operator> <name>alive</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>
}</block></class>
</unit>
