<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/Users/wang/Documents/project/configuration_code_understanding/code3/data/system/cassandra/src/java/org/apache/cassandra/auth/AuthenticatedUser.java"><comment type="block">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package>package <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>auth</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Set</name></name>;</import>

<import>import <name><name>com</name><operator>.</operator><name>google</name><operator>.</operator><name>common</name><operator>.</operator><name>base</name><operator>.</operator><name>Objects</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>config</name><operator>.</operator><name>DatabaseDescriptor</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>apache</name><operator>.</operator><name>cassandra</name><operator>.</operator><name>dht</name><operator>.</operator><name>Datacenters</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Returned from IAuthenticator#authenticate(), represents an authenticated user everywhere internally.
 *
 * Holds the name of the user and the roles that have been granted to the user. The roles will be cached
 * for roles_validity_in_ms.
 */</comment>
<class><specifier>public</specifier> class <name>AuthenticatedUser</name>
<block>{
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SYSTEM_USERNAME</name> <init>= <expr><literal type="string">"system"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>AuthenticatedUser</name></type> <name>SYSTEM_USER</name> <init>= <expr><operator>new</operator> <call><name>AuthenticatedUser</name><argument_list>(<argument><expr><name>SYSTEM_USERNAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>ANONYMOUS_USERNAME</name> <init>= <expr><literal type="string">"anonymous"</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>AuthenticatedUser</name></type> <name>ANONYMOUS_USER</name> <init>= <expr><operator>new</operator> <call><name>AuthenticatedUser</name><argument_list>(<argument><expr><name>ANONYMOUS_USERNAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line">// User-level permissions cache.</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>PermissionsCache</name></type> <name>permissionsCache</name> <init>= <expr><operator>new</operator> <call><name>PermissionsCache</name><argument_list>(<argument><expr><call><name><name>DatabaseDescriptor</name><operator>.</operator><name>getAuthorizer</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>NetworkAuthCache</name></type> <name>networkAuthCache</name> <init>= <expr><operator>new</operator> <call><name>NetworkAuthCache</name><argument_list>(<argument><expr><call><name><name>DatabaseDescriptor</name><operator>.</operator><name>getNetworkAuthorizer</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>name</name></decl>;</decl_stmt>
    <comment type="line">// primary Role of the logged in user</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>RoleResource</name></type> <name>role</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>AuthenticatedUser</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>name</name></name> <operator>=</operator> <name>name</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>role</name></name> <operator>=</operator> <call><name><name>RoleResource</name><operator>.</operator><name>role</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function><type><specifier>public</specifier> <name>String</name></type> <name>getName</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><name>name</name></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name>RoleResource</name></type> <name>getPrimaryRole</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><name>role</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Checks the user's superuser status.
     * Only a superuser is allowed to perform CREATE USER and DROP USER queries.
     * Im most cased, though not necessarily, a superuser will have Permission.ALL on every resource
     * (depends on IAuthorizer implementation).
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isSuper</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><operator>!</operator><call><name>isAnonymous</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>Roles</name><operator>.</operator><name>hasSuperuserStatus</name></name><argument_list>(<argument><expr><name>role</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * If IAuthenticator doesn't require authentication, this method may return true.
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isAnonymous</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><name>this</name> <operator>==</operator> <name>ANONYMOUS_USER</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Some internal operations are performed on behalf of Cassandra itself, in those cases
     * the system user should be used where an identity is required
     * see CreateRoleStatement#execute() and overrides of AlterSchemaStatement#createdResources()
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isSystem</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><name>this</name> <operator>==</operator> <name>SYSTEM_USER</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Get the roles that have been granted to the user via the IRoleManager
     *
     * @return a set of identifiers for the roles that have been granted to the user
     */</comment>
    <function><type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>RoleResource</name></argument>&gt;</argument_list></name></type> <name>getRoles</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>Roles</name><operator>.</operator><name>getRoles</name></name><argument_list>(<argument><expr><name>role</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Get the detailed info on roles granted to the user via IRoleManager
     *
     * @return a set of Role objects detailing the roles granted to the user
     */</comment>
    <function><type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Role</name></argument>&gt;</argument_list></name></type> <name>getRoleDetails</name><parameter_list>()</parameter_list>
    <block>{<block_content>
       <return>return <expr><call><name><name>Roles</name><operator>.</operator><name>getRoleDetails</name></name><argument_list>(<argument><expr><name>role</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><type><specifier>public</specifier> <name><name>Set</name><argument_list type="generic">&lt;<argument><name>Permission</name></argument>&gt;</argument_list></name></type> <name>getPermissions</name><parameter_list>(<parameter><decl><type><name>IResource</name></type> <name>resource</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>permissionsCache</name><operator>.</operator><name>getPermissions</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Check whether this user has login privileges.
     * LOGIN is not inherited from granted roles, so must be directly granted to the primary role for this user
     *
     * @return true if the user is permitted to login, false otherwise.
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>canLogin</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>Roles</name><operator>.</operator><name>canLogin</name></name><argument_list>(<argument><expr><call><name>getPrimaryRole</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc">/**
     * Verify that there is not DC level restriction on this user accessing this node.
     * Further extends the login privilege check by verifying that the primary role for this user is permitted
     * to perform operations in the local (to this node) datacenter. Like LOGIN, this is not inherited from
     * granted roles.
     * @return true if the user is permitted to access nodes in this node's datacenter, false otherwise
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>hasLocalAccess</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>networkAuthCache</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>getPrimaryRole</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>canAccess</name><argument_list>(<argument><expr><call><name><name>Datacenters</name><operator>.</operator><name>thisDatacenter</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"#&lt;User %s&gt;"</literal></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>boolean</name></type> <name>equals</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>o</name></decl></parameter>)</parameter_list>
    <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>this</name> <operator>==</operator> <name>o</name></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><literal type="boolean">true</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>o</name> <operator>instanceof</operator> <name>AuthenticatedUser</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
            <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>

        <decl_stmt><decl><type><name>AuthenticatedUser</name></type> <name>u</name> <init>= <expr><operator>(</operator><name>AuthenticatedUser</name><operator>)</operator> <name>o</name></expr></init></decl>;</decl_stmt>

        <return>return <expr><call><name><name>Objects</name><operator>.</operator><name>equal</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name><name>u</name><operator>.</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <function><annotation>@<name>Override</name></annotation>
    <type><specifier>public</specifier> <name>int</name></type> <name>hashCode</name><parameter_list>()</parameter_list>
    <block>{<block_content>
        <return>return <expr><call><name><name>Objects</name><operator>.</operator><name>hashCode</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

}</block></class>
</unit>
