C:org.apache.batik.gvt.PatternPaint java.lang.IllegalArgumentException
C:org.apache.batik.gvt.PatternPaint org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.PatternPaint java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.PatternPaint org.apache.batik.ext.awt.image.renderable.PadRable8Bit
C:org.apache.batik.gvt.PatternPaint java.awt.geom.AffineTransform
C:org.apache.batik.gvt.PatternPaint org.apache.batik.gvt.PatternPaint$PatternPaintContextWrapper
C:org.apache.batik.gvt.PatternPaint org.apache.batik.gvt.PatternPaintContext
C:org.apache.batik.gvt.PatternPaint java.awt.Transparency
C:org.apache.batik.gvt.PatternPaint org.apache.batik.gvt.PatternPaint
C:org.apache.batik.gvt.PatternPaint java.lang.Object
C:org.apache.batik.gvt.PatternPaint java.awt.Paint
C:org.apache.batik.gvt.PatternPaint org.apache.batik.gvt.PatternPaint
C:org.apache.batik.gvt.PatternPaint org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.PatternPaint java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.PatternPaint java.awt.geom.AffineTransform
C:org.apache.batik.gvt.PatternPaint org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.PatternPaint org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.PatternPaint [D
C:org.apache.batik.gvt.PatternPaint java.util.List
C:org.apache.batik.gvt.PatternPaint org.apache.batik.ext.awt.image.PadMode
C:org.apache.batik.gvt.PatternPaint java.awt.image.ColorModel
C:org.apache.batik.gvt.filter.GraphicsNodeRable org.apache.batik.gvt.filter.GraphicsNodeRable
C:org.apache.batik.gvt.filter.GraphicsNodeRable java.lang.Object
C:org.apache.batik.gvt.filter.GraphicsNodeRable org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.lang.IllegalArgumentException
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.awt.geom.Rectangle2D$Double
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.awt.color.ColorSpace
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.awt.geom.AffineTransform
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.ext.awt.image.rendered.TranslateRed
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.gvt.filter.GraphicsNodeRed8Bit
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.gvt.filter.GraphicsNodeRable8Bit
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.ext.awt.image.renderable.AbstractRable
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.gvt.filter.GraphicsNodeRable
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.ext.awt.image.renderable.PaintRable
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.gvt.filter.GraphicsNodeRable8Bit
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.util.Map
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.awt.geom.AffineTransform
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.awt.Composite
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.awt.color.ColorSpace
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.awt.Shape
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.awt.Graphics2D
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.ext.awt.image.SVGComposite
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.ext.awt.image.GraphicsUtil
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.awt.image.renderable.RenderContext
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit org.apache.batik.ext.awt.image.rendered.CachableRed
C:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit java.lang.Math
C:org.apache.batik.gvt.filter.ConcreteGraphicsNodeRableFactory org.apache.batik.gvt.filter.GraphicsNodeRable
C:org.apache.batik.gvt.filter.ConcreteGraphicsNodeRableFactory org.apache.batik.gvt.filter.ConcreteGraphicsNodeRableFactory
C:org.apache.batik.gvt.filter.ConcreteGraphicsNodeRableFactory java.lang.Object
C:org.apache.batik.gvt.filter.ConcreteGraphicsNodeRableFactory org.apache.batik.gvt.filter.GraphicsNodeRableFactory
C:org.apache.batik.gvt.filter.ConcreteGraphicsNodeRableFactory org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.filter.GraphicsNodeRableFactory org.apache.batik.gvt.filter.GraphicsNodeRableFactory
C:org.apache.batik.gvt.filter.GraphicsNodeRableFactory java.lang.Object
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.lang.IllegalArgumentException
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.awt.geom.NoninvertibleTransformException
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.awt.geom.Rectangle2D$Float
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.util.ArrayList
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.ext.awt.image.renderable.CompositeRable8Bit
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.ext.awt.image.renderable.AffineRable8Bit
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.ext.awt.image.renderable.PadRable8Bit
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.awt.image.renderable.RenderContext
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.gvt.filter.BackgroundRable8Bit
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.ext.awt.image.renderable.AbstractRable
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.gvt.filter.BackgroundRable8Bit
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.util.List
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.util.Iterator
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.awt.geom.AffineTransform
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.awt.geom.NoninvertibleTransformException
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.lang.Object
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.awt.Shape
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.util.List
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.util.Iterator
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.awt.geom.AffineTransform
C:org.apache.batik.gvt.filter.BackgroundRable8Bit java.awt.Shape
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.ext.awt.image.CompositeRule
C:org.apache.batik.gvt.filter.BackgroundRable8Bit org.apache.batik.ext.awt.image.PadMode
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.geom.Rectangle2D$Float
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.geom.AffineTransform
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit org.apache.batik.ext.awt.image.rendered.CachableRed
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.image.BufferedImage
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit org.apache.batik.gvt.filter.GraphicsNodeRed8Bit
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit org.apache.batik.ext.awt.image.rendered.AbstractRed
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit org.apache.batik.gvt.filter.GraphicsNodeRed8Bit
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.geom.AffineTransform
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.RenderingHints
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.Rectangle
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.image.ColorModel
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.image.BufferedImage
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.Graphics2D
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.Shape
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit org.apache.batik.ext.awt.image.rendered.AbstractTiledRed
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.Rectangle
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.lang.Math
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.image.ColorModel
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.image.WritableRaster
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit org.apache.batik.ext.awt.image.GraphicsUtil
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.AlphaComposite
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit java.awt.Graphics2D
C:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit org.apache.batik.util.Platform
C:org.apache.batik.gvt.filter.Mask org.apache.batik.gvt.filter.Mask
C:org.apache.batik.gvt.filter.Mask java.lang.Object
C:org.apache.batik.gvt.filter.Mask org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.filter.MaskRable8Bit java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.filter.MaskRable8Bit java.lang.IllegalArgumentException
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.ext.awt.image.renderable.PadRable8Bit
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.ext.awt.image.renderable.FilterAsAlphaRable
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.ext.awt.image.rendered.MultiplyAlphaRed
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.gvt.filter.MaskRable8Bit
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.ext.awt.image.renderable.AbstractRable
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.gvt.filter.Mask
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.ext.awt.image.renderable.PadRable
C:org.apache.batik.gvt.filter.MaskRable8Bit java.awt.image.RenderedImage
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.ext.awt.image.rendered.CachableRed
C:org.apache.batik.gvt.filter.MaskRable8Bit java.util.Vector
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.ext.awt.image.PadMode
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.ext.awt.image.renderable.PadRable
C:org.apache.batik.gvt.filter.MaskRable8Bit org.apache.batik.ext.awt.image.GraphicsUtil
C:org.apache.batik.gvt.RootGraphicsNode java.util.LinkedList
C:org.apache.batik.gvt.RootGraphicsNode org.apache.batik.gvt.RootGraphicsNode
C:org.apache.batik.gvt.RootGraphicsNode org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.RootGraphicsNode java.util.List
C:org.apache.batik.gvt.ImageNode org.apache.batik.gvt.AbstractGraphicsNode
C:org.apache.batik.gvt.ImageNode org.apache.batik.gvt.ImageNode
C:org.apache.batik.gvt.ImageNode org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.ImageNode org.apache.batik.gvt.ImageNode
C:org.apache.batik.gvt.ShapePainter org.apache.batik.gvt.ShapePainter
C:org.apache.batik.gvt.ShapePainter java.lang.Object
C:org.apache.batik.gvt.UpdateTracker java.util.HashMap
C:org.apache.batik.gvt.UpdateTracker java.util.LinkedList
C:org.apache.batik.gvt.UpdateTracker java.lang.ref.WeakReference
C:org.apache.batik.gvt.UpdateTracker org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.UpdateTracker java.awt.geom.AffineTransform
C:org.apache.batik.gvt.UpdateTracker java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.UpdateTracker org.apache.batik.gvt.UpdateTracker$ChngSrcRect
C:org.apache.batik.gvt.UpdateTracker org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.UpdateTracker java.awt.Rectangle
C:org.apache.batik.gvt.UpdateTracker org.apache.batik.gvt.UpdateTracker
C:org.apache.batik.gvt.UpdateTracker org.apache.batik.gvt.event.GraphicsNodeChangeAdapter
C:org.apache.batik.gvt.UpdateTracker java.util.List
C:org.apache.batik.gvt.UpdateTracker java.util.Set
C:org.apache.batik.gvt.UpdateTracker java.util.Iterator
C:org.apache.batik.gvt.UpdateTracker java.lang.Object
C:org.apache.batik.gvt.UpdateTracker java.lang.ref.WeakReference
C:org.apache.batik.gvt.UpdateTracker org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.UpdateTracker java.awt.geom.AffineTransform
C:org.apache.batik.gvt.UpdateTracker java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.UpdateTracker org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.UpdateTracker java.awt.Shape
C:org.apache.batik.gvt.UpdateTracker org.apache.batik.gvt.UpdateTracker
C:org.apache.batik.gvt.UpdateTracker org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.UpdateTracker java.util.Map
C:org.apache.batik.gvt.UpdateTracker java.util.Set
C:org.apache.batik.gvt.UpdateTracker java.util.Iterator
C:org.apache.batik.gvt.UpdateTracker org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.UpdateTracker java.util.List
C:org.apache.batik.gvt.UpdateTracker java.awt.Shape
C:org.apache.batik.gvt.UpdateTracker org.apache.batik.gvt.event.GraphicsNodeChangeEvent
C:org.apache.batik.gvt.CompositeGraphicsNode$Itr java.lang.IndexOutOfBoundsException
C:org.apache.batik.gvt.CompositeGraphicsNode$Itr java.util.NoSuchElementException
C:org.apache.batik.gvt.CompositeGraphicsNode$Itr java.lang.IllegalStateException
C:org.apache.batik.gvt.CompositeGraphicsNode$Itr java.util.ConcurrentModificationException
C:org.apache.batik.gvt.CompositeGraphicsNode$Itr org.apache.batik.gvt.CompositeGraphicsNode$Itr
C:org.apache.batik.gvt.CompositeGraphicsNode$Itr java.lang.Object
C:org.apache.batik.gvt.CompositeGraphicsNode$Itr java.util.Iterator
C:org.apache.batik.gvt.CompositeGraphicsNode$Itr java.lang.IndexOutOfBoundsException
C:org.apache.batik.gvt.CompositeGraphicsNode$Itr org.apache.batik.gvt.CompositeGraphicsNode$1
C:org.apache.batik.gvt.CompositeGraphicsNode$Itr org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.PatternPaintContext java.lang.IllegalArgumentException
C:org.apache.batik.gvt.PatternPaintContext java.awt.RenderingHints
C:org.apache.batik.gvt.PatternPaintContext org.apache.batik.ext.awt.image.renderable.TileRable8Bit
C:org.apache.batik.gvt.PatternPaintContext java.awt.color.ColorSpace
C:org.apache.batik.gvt.PatternPaintContext java.awt.image.renderable.RenderContext
C:org.apache.batik.gvt.PatternPaintContext org.apache.batik.ext.awt.image.rendered.TileCacheRed
C:org.apache.batik.gvt.PatternPaintContext java.awt.image.BufferedImage
C:org.apache.batik.gvt.PatternPaintContext java.awt.Rectangle
C:org.apache.batik.gvt.PatternPaintContext java.lang.Integer
C:org.apache.batik.gvt.PatternPaintContext org.apache.batik.gvt.PatternPaintContext
C:org.apache.batik.gvt.PatternPaintContext java.lang.Object
C:org.apache.batik.gvt.PatternPaintContext java.awt.PaintContext
C:org.apache.batik.gvt.PatternPaintContext org.apache.batik.gvt.PatternPaintContext
C:org.apache.batik.gvt.PatternPaintContext java.awt.image.ColorModel
C:org.apache.batik.gvt.PatternPaintContext java.awt.geom.AffineTransform
C:org.apache.batik.gvt.PatternPaintContext java.awt.RenderingHints
C:org.apache.batik.gvt.PatternPaintContext org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.PatternPaintContext java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.PatternPaintContext org.apache.batik.ext.awt.image.renderable.TileRable
C:org.apache.batik.gvt.PatternPaintContext java.awt.color.ColorSpace
C:org.apache.batik.gvt.PatternPaintContext java.awt.image.renderable.RenderContext
C:org.apache.batik.gvt.PatternPaintContext java.awt.image.WritableRaster
C:org.apache.batik.gvt.PatternPaintContext java.awt.image.ColorModel
C:org.apache.batik.gvt.PatternPaintContext org.apache.batik.ext.awt.image.renderable.TileRable
C:org.apache.batik.gvt.PatternPaintContext java.awt.geom.AffineTransform
C:org.apache.batik.gvt.PatternPaintContext java.awt.Shape
C:org.apache.batik.gvt.PatternPaintContext java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.PatternPaintContext org.apache.batik.ext.awt.image.GraphicsUtil
C:org.apache.batik.gvt.PatternPaintContext java.awt.image.RenderedImage
C:org.apache.batik.gvt.PatternPaintContext java.awt.image.WritableRaster
C:org.apache.batik.gvt.text.TextPath org.apache.batik.ext.awt.geom.PathLength
C:org.apache.batik.gvt.text.TextPath org.apache.batik.gvt.text.TextPath
C:org.apache.batik.gvt.text.TextPath java.lang.Object
C:org.apache.batik.gvt.text.TextPaintInfo org.apache.batik.gvt.text.TextPaintInfo
C:org.apache.batik.gvt.text.TextPaintInfo java.lang.Object
C:org.apache.batik.gvt.text.TextPaintInfo org.apache.batik.gvt.text.TextPaintInfo
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute java.lang.Integer
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute java.awt.font.TextAttribute
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute java.lang.Boolean
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$AttributeFilter org.apache.batik.gvt.text.GVTAttributedCharacterIterator$AttributeFilter
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$AttributeFilter java.lang.Object
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$AttributeFilter org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.gvt.text.GVTACIImpl$TransformAttributeFilter org.apache.batik.gvt.text.GVTACIImpl$TransformAttributeFilter
C:org.apache.batik.gvt.text.GVTACIImpl$TransformAttributeFilter java.lang.Object
C:org.apache.batik.gvt.text.GVTACIImpl$TransformAttributeFilter org.apache.batik.gvt.text.GVTAttributedCharacterIterator$AttributeFilter
C:org.apache.batik.gvt.text.GVTACIImpl$TransformAttributeFilter org.apache.batik.gvt.text.GVTACIImpl
C:org.apache.batik.gvt.text.GVTACIImpl$TransformAttributeFilter org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.gvt.text.AttributedCharacterSpanIterator org.apache.batik.gvt.text.AttributedCharacterSpanIterator
C:org.apache.batik.gvt.text.AttributedCharacterSpanIterator java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.text.AttributedCharacterSpanIterator java.text.CharacterIterator
C:org.apache.batik.gvt.text.AttributedCharacterSpanIterator java.lang.Object
C:org.apache.batik.gvt.text.AttributedCharacterSpanIterator java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.gvt.text.AttributedCharacterSpanIterator java.lang.Math
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.lang.StringBuffer
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.text.AttributedString
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.util.HashMap
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.util.Map$Entry
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.awt.font.TextLayout
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.util.Map
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.lang.Float
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator org.apache.batik.gvt.text.BidiAttributedCharacterIterator
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator [I
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.lang.Object
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator org.apache.batik.gvt.text.BidiAttributedCharacterIterator
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.awt.font.FontRenderContext
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.lang.StringBuffer
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.text.AttributedString
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.util.Map
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.util.Iterator
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.lang.Object
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.util.Map$Entry
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.awt.font.TextLayout
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator [Ljava.util.Map;
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.lang.Float
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.util.Set
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.util.Iterator
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator java.lang.Integer
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator org.apache.batik.gvt.text.ArabicTextHandler
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator [I
C:org.apache.batik.gvt.text.BidiAttributedCharacterIterator org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.gvt.text.GVTACIImpl java.text.StringCharacterIterator
C:org.apache.batik.gvt.text.GVTACIImpl java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.text.GVTACIImpl java.util.Map
C:org.apache.batik.gvt.text.GVTACIImpl java.lang.IndexOutOfBoundsException
C:org.apache.batik.gvt.text.GVTACIImpl org.apache.batik.gvt.text.GVTACIImpl
C:org.apache.batik.gvt.text.GVTACIImpl java.util.HashSet
C:org.apache.batik.gvt.text.GVTACIImpl java.util.ArrayList
C:org.apache.batik.gvt.text.GVTACIImpl java.util.HashMap
C:org.apache.batik.gvt.text.GVTACIImpl java.lang.String
C:org.apache.batik.gvt.text.GVTACIImpl java.lang.Object
C:org.apache.batik.gvt.text.GVTACIImpl org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.gvt.text.GVTACIImpl org.apache.batik.gvt.text.GVTACIImpl$TransformAttributeFilter
C:org.apache.batik.gvt.text.GVTACIImpl org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute
C:org.apache.batik.gvt.text.GVTACIImpl java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.gvt.text.GVTACIImpl java.lang.Object
C:org.apache.batik.gvt.text.GVTACIImpl java.lang.IndexOutOfBoundsException
C:org.apache.batik.gvt.text.GVTACIImpl org.apache.batik.gvt.text.GVTACIImpl
C:org.apache.batik.gvt.text.GVTACIImpl java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.text.GVTACIImpl [C
C:org.apache.batik.gvt.text.GVTACIImpl java.text.AttributedString
C:org.apache.batik.gvt.text.GVTACIImpl java.lang.Math
C:org.apache.batik.gvt.text.GVTACIImpl java.util.Set
C:org.apache.batik.gvt.text.GVTACIImpl java.text.CharacterIterator
C:org.apache.batik.gvt.text.ArabicTextHandler java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.text.ArabicTextHandler java.lang.StringBuffer
C:org.apache.batik.gvt.text.ArabicTextHandler java.text.AttributedString
C:org.apache.batik.gvt.text.ArabicTextHandler java.lang.Float
C:org.apache.batik.gvt.text.ArabicTextHandler org.apache.batik.gvt.text.ArabicTextHandler
C:org.apache.batik.gvt.text.ArabicTextHandler java.lang.Integer
C:org.apache.batik.gvt.text.ArabicTextHandler [I
C:org.apache.batik.gvt.text.ArabicTextHandler [[I
C:org.apache.batik.gvt.text.ArabicTextHandler java.lang.Object
C:org.apache.batik.gvt.text.ArabicTextHandler java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.gvt.text.ArabicTextHandler java.text.AttributedString
C:org.apache.batik.gvt.text.ArabicTextHandler java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.text.ArabicTextHandler java.lang.StringBuffer
C:org.apache.batik.gvt.text.ArabicTextHandler java.lang.Float
C:org.apache.batik.gvt.text.ArabicTextHandler java.lang.Integer
C:org.apache.batik.gvt.text.ArabicTextHandler org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute
C:org.apache.batik.gvt.text.ArabicTextHandler org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator java.lang.Object
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator org.apache.batik.gvt.text.GVTAttributedCharacterIterator$AttributeFilter
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute
C:org.apache.batik.gvt.text.GVTAttributedCharacterIterator java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.gvt.StrokeShapePainter java.lang.IllegalArgumentException
C:org.apache.batik.gvt.StrokeShapePainter org.apache.batik.gvt.StrokeShapePainter
C:org.apache.batik.gvt.StrokeShapePainter java.lang.Object
C:org.apache.batik.gvt.StrokeShapePainter org.apache.batik.gvt.ShapePainter
C:org.apache.batik.gvt.StrokeShapePainter org.apache.batik.gvt.StrokeShapePainter
C:org.apache.batik.gvt.StrokeShapePainter java.awt.Shape
C:org.apache.batik.gvt.StrokeShapePainter java.awt.Graphics2D
C:org.apache.batik.gvt.StrokeShapePainter java.awt.Stroke
C:org.apache.batik.gvt.StrokeShapePainter java.awt.Shape
C:org.apache.batik.gvt.Selector org.apache.batik.gvt.Selector
C:org.apache.batik.gvt.Selector java.lang.Object
C:org.apache.batik.gvt.Selector org.apache.batik.gvt.event.GraphicsNodeMouseListener
C:org.apache.batik.gvt.Selector org.apache.batik.gvt.event.GraphicsNodeKeyListener
C:org.apache.batik.gvt.Selector org.apache.batik.gvt.event.GraphicsNodeChangeListener
C:org.apache.batik.gvt.PatternPaint$PatternPaintContextWrapper org.apache.batik.gvt.PatternPaint$PatternPaintContextWrapper
C:org.apache.batik.gvt.PatternPaint$PatternPaintContextWrapper java.lang.Object
C:org.apache.batik.gvt.PatternPaint$PatternPaintContextWrapper java.awt.PaintContext
C:org.apache.batik.gvt.PatternPaint$PatternPaintContextWrapper org.apache.batik.gvt.PatternPaintContext
C:org.apache.batik.gvt.PatternPaint$PatternPaintContextWrapper org.apache.batik.gvt.PatternPaint
C:org.apache.batik.gvt.font.GVTFontFamily org.apache.batik.gvt.font.GVTFontFamily
C:org.apache.batik.gvt.font.GVTFontFamily java.lang.Object
C:org.apache.batik.gvt.font.AWTFontFamily org.apache.batik.gvt.font.GVTFontFace
C:org.apache.batik.gvt.font.AWTFontFamily org.apache.batik.gvt.font.AWTGVTFont
C:org.apache.batik.gvt.font.AWTFontFamily java.util.HashMap
C:org.apache.batik.gvt.font.AWTFontFamily org.apache.batik.gvt.font.AWTFontFamily
C:org.apache.batik.gvt.font.AWTFontFamily java.lang.Object
C:org.apache.batik.gvt.font.AWTFontFamily org.apache.batik.gvt.font.GVTFontFamily
C:org.apache.batik.gvt.font.AWTFontFamily java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.gvt.font.AWTFontFamily java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.font.AWTFontFamily java.awt.font.TextAttribute
C:org.apache.batik.gvt.font.AWTFontFamily java.lang.Float
C:org.apache.batik.gvt.font.AWTFontFamily java.util.Map
C:org.apache.batik.gvt.font.AWTFontFamily org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute
C:org.apache.batik.gvt.font.AWTFontFamily org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache java.lang.ref.ReferenceQueue
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache org.apache.batik.gvt.font.AWTGlyphGeometryCache
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache java.lang.Object
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache [Lorg.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry;
C:org.apache.batik.gvt.font.KerningTable org.apache.batik.gvt.font.KerningTable
C:org.apache.batik.gvt.font.KerningTable java.lang.Object
C:org.apache.batik.gvt.font.KerningTable [Lorg.apache.batik.gvt.font.Kern;
C:org.apache.batik.gvt.font.KerningTable org.apache.batik.gvt.font.Kern
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.Shape
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.geom.Point2D$Float
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.lang.IndexOutOfBoundsException
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.lang.StringBuilder
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.lang.IllegalArgumentException
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.geom.Rectangle2D$Double
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.geom.Point2D$Double
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.geom.GeneralPath
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.text.TextPaintInfo
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.geom.Rectangle2D$Float
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.geom.Point2D
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.font.SVGGVTGlyphVector
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.lang.Object
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.font.GVTGlyphVector
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.font.SVGGVTGlyphVector
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.font.GVTFont
C:org.apache.batik.gvt.font.SVGGVTGlyphVector [Lorg.apache.batik.gvt.font.Glyph;
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.font.FontRenderContext
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.font.GVTGlyphMetrics
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.font.SVGGVTGlyphVector [Ljava.awt.Shape;
C:org.apache.batik.gvt.font.SVGGVTGlyphVector [Z
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.geom.AffineTransform
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.geom.Point2D
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.geom.GeneralPath
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.text.TextPaintInfo
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.font.Glyph
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.lang.String
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.font.Glyph
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.font.GVTFont
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.font.GVTLineMetrics
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.font.GVTGlyphMetrics
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.awt.geom.AffineTransform
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.lang.Math
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.lang.System
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.font.SVGGVTGlyphVector java.lang.String
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.text.ArabicTextHandler
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute
C:org.apache.batik.gvt.font.SVGGVTGlyphVector org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.gvt.font.GVTFontFace org.apache.batik.util.SVGConstants
C:org.apache.batik.gvt.font.GVTFontFace org.apache.batik.gvt.font.GVTFontFace
C:org.apache.batik.gvt.font.GVTFontFace java.lang.Object
C:org.apache.batik.gvt.font.GVTFontFace java.lang.String
C:org.apache.batik.gvt.font.GVTFontFace java.lang.String
C:org.apache.batik.gvt.font.MultiGlyphVector org.apache.batik.gvt.font.GVTGlyphVector
C:org.apache.batik.gvt.font.MultiGlyphVector java.lang.IllegalArgumentException
C:org.apache.batik.gvt.font.MultiGlyphVector java.awt.geom.GeneralPath
C:org.apache.batik.gvt.font.MultiGlyphVector org.apache.batik.gvt.text.AttributedCharacterSpanIterator
C:org.apache.batik.gvt.font.MultiGlyphVector org.apache.batik.gvt.font.MultiGlyphVector
C:org.apache.batik.gvt.font.MultiGlyphVector java.lang.Object
C:org.apache.batik.gvt.font.MultiGlyphVector org.apache.batik.gvt.font.MultiGlyphVector
C:org.apache.batik.gvt.font.MultiGlyphVector java.util.List
C:org.apache.batik.gvt.font.MultiGlyphVector java.util.Iterator
C:org.apache.batik.gvt.font.MultiGlyphVector [I
C:org.apache.batik.gvt.font.MultiGlyphVector org.apache.batik.gvt.font.GVTGlyphVector
C:org.apache.batik.gvt.font.MultiGlyphVector [F
C:org.apache.batik.gvt.font.MultiGlyphVector java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.font.MultiGlyphVector [Lorg.apache.batik.gvt.font.GVTGlyphVector;
C:org.apache.batik.gvt.font.MultiGlyphVector java.awt.geom.GeneralPath
C:org.apache.batik.gvt.font.MultiGlyphVector java.awt.Shape
C:org.apache.batik.gvt.font.MultiGlyphVector java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.font.MultiGlyphVector java.awt.Graphics2D
C:org.apache.batik.gvt.font.MultiGlyphVector java.util.List
C:org.apache.batik.gvt.font.MultiGlyphVector java.util.Iterator
C:org.apache.batik.gvt.font.MultiGlyphVector java.awt.Shape
C:org.apache.batik.gvt.font.MultiGlyphVector java.lang.System
C:org.apache.batik.gvt.font.MultiGlyphVector java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.font.MultiGlyphVector java.awt.geom.AffineTransform
C:org.apache.batik.gvt.font.MultiGlyphVector java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.font.Kern org.apache.batik.gvt.font.Kern
C:org.apache.batik.gvt.font.Kern java.lang.Object
C:org.apache.batik.gvt.font.Kern org.apache.batik.gvt.font.Kern
C:org.apache.batik.gvt.font.Kern [I
C:org.apache.batik.gvt.font.Kern [Lorg.apache.batik.gvt.font.UnicodeRange;
C:org.apache.batik.gvt.font.Kern java.lang.String
C:org.apache.batik.gvt.font.Kern java.util.Arrays
C:org.apache.batik.gvt.font.Kern java.lang.String
C:org.apache.batik.gvt.font.Kern org.apache.batik.gvt.font.UnicodeRange
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.geom.Point2D$Float
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.geom.AffineTransform
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.Shape
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.font.GVTGlyphMetrics
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.text.TextPaintInfo
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.geom.Rectangle2D$Double
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.geom.Point2D$Double
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.geom.GeneralPath
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.font.GlyphMetrics
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.Color
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.font.AWTGVTGlyphVector
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.lang.Object
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.font.GVTGlyphVector
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.font.AWTGVTGlyphVector
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.font.GlyphVector
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.font.AWTGVTFont
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.text.CharacterIterator
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.font.GVTLineMetrics
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.text.TextPaintInfo
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.Shape
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.Stroke
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.Paint
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.font.AWTGVTGlyphVector [Ljava.awt.Shape;
C:org.apache.batik.gvt.font.AWTGVTGlyphVector [Z
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.geom.AffineTransform
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.font.GVTGlyphMetrics
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.geom.Point2D
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.geom.GeneralPath
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.Graphics2D
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.font.AWTGVTGlyphVector [D
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.lang.String
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.font.GlyphVector
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.font.AWTGVTFont
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.font.GVTLineMetrics
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.geom.Point2D
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.Stroke
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.lang.Math
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.lang.System
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.text.CharacterIterator
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.text.ArabicTextHandler
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.RenderingHints
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.Graphics2D
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.lang.String
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.util.Platform
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.font.AWTGlyphGeometryCache
C:org.apache.batik.gvt.font.AWTGVTGlyphVector org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.gvt.font.AWTGVTGlyphVector java.awt.RenderingHints$Key
C:org.apache.batik.gvt.font.GVTGlyphMetrics java.awt.font.GlyphMetrics
C:org.apache.batik.gvt.font.GVTGlyphMetrics org.apache.batik.gvt.font.GVTGlyphMetrics
C:org.apache.batik.gvt.font.GVTGlyphMetrics java.lang.Object
C:org.apache.batik.gvt.font.GVTLineMetrics org.apache.batik.gvt.font.GVTLineMetrics
C:org.apache.batik.gvt.font.GVTLineMetrics java.lang.Object
C:org.apache.batik.gvt.font.GVTLineMetrics org.apache.batik.gvt.font.GVTLineMetrics
C:org.apache.batik.gvt.font.GVTLineMetrics java.awt.font.LineMetrics
C:org.apache.batik.gvt.font.GVTLineMetrics java.awt.font.LineMetrics
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value java.lang.Object
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value java.awt.Shape
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value org.apache.batik.gvt.font.AWTGlyphGeometryCache
C:org.apache.batik.gvt.font.AltGlyphHandler org.apache.batik.gvt.font.AltGlyphHandler
C:org.apache.batik.gvt.font.AltGlyphHandler java.lang.Object
C:org.apache.batik.gvt.font.UnresolvedFontFamily org.apache.batik.gvt.font.GVTFontFace
C:org.apache.batik.gvt.font.UnresolvedFontFamily org.apache.batik.gvt.font.UnresolvedFontFamily
C:org.apache.batik.gvt.font.UnresolvedFontFamily java.lang.Object
C:org.apache.batik.gvt.font.UnresolvedFontFamily org.apache.batik.gvt.font.GVTFontFamily
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry java.lang.ref.SoftReference
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value
C:org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry org.apache.batik.gvt.font.AWTGlyphGeometryCache
C:org.apache.batik.gvt.font.GVTFont org.apache.batik.gvt.font.GVTFont
C:org.apache.batik.gvt.font.GVTFont java.lang.Object
C:org.apache.batik.gvt.font.UnicodeRange java.lang.NumberFormatException
C:org.apache.batik.gvt.font.UnicodeRange org.apache.batik.gvt.font.UnicodeRange
C:org.apache.batik.gvt.font.UnicodeRange java.lang.Object
C:org.apache.batik.gvt.font.UnicodeRange org.apache.batik.gvt.font.UnicodeRange
C:org.apache.batik.gvt.font.UnicodeRange java.lang.String
C:org.apache.batik.gvt.font.UnicodeRange java.lang.NumberFormatException
C:org.apache.batik.gvt.font.UnicodeRange java.lang.String
C:org.apache.batik.gvt.font.UnicodeRange java.lang.Integer
C:org.apache.batik.gvt.font.Glyph java.lang.IllegalArgumentException
C:org.apache.batik.gvt.font.Glyph java.util.Vector
C:org.apache.batik.gvt.font.Glyph java.awt.geom.Point2D$Float
C:org.apache.batik.gvt.font.Glyph org.apache.batik.gvt.font.GVTGlyphMetrics
C:org.apache.batik.gvt.font.Glyph java.awt.geom.Rectangle2D$Double
C:org.apache.batik.gvt.font.Glyph java.awt.font.GlyphMetrics
C:org.apache.batik.gvt.font.Glyph org.apache.batik.gvt.text.TextPaintInfo
C:org.apache.batik.gvt.font.Glyph java.awt.geom.GeneralPath
C:org.apache.batik.gvt.font.Glyph org.apache.batik.gvt.font.Glyph
C:org.apache.batik.gvt.font.Glyph java.lang.Object
C:org.apache.batik.gvt.font.Glyph org.apache.batik.gvt.font.Glyph
C:org.apache.batik.gvt.font.Glyph java.lang.String
C:org.apache.batik.gvt.font.Glyph java.util.List
C:org.apache.batik.gvt.font.Glyph java.awt.geom.Point2D
C:org.apache.batik.gvt.font.Glyph org.apache.batik.gvt.text.TextPaintInfo
C:org.apache.batik.gvt.font.Glyph java.awt.Shape
C:org.apache.batik.gvt.font.Glyph org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.font.Glyph java.awt.geom.AffineTransform
C:org.apache.batik.gvt.font.Glyph java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.font.Glyph java.awt.geom.GeneralPath
C:org.apache.batik.gvt.font.Glyph java.awt.geom.Point2D
C:org.apache.batik.gvt.font.Glyph java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.font.Glyph java.awt.Shape
C:org.apache.batik.gvt.font.Glyph java.awt.geom.AffineTransform
C:org.apache.batik.gvt.font.Glyph java.awt.Stroke
C:org.apache.batik.gvt.font.Glyph org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.font.Glyph java.awt.Graphics2D
C:org.apache.batik.gvt.font.GVTGlyphVector org.apache.batik.gvt.font.GVTGlyphVector
C:org.apache.batik.gvt.font.GVTGlyphVector java.lang.Object
C:org.apache.batik.gvt.font.AWTGVTFont org.apache.batik.gvt.font.AWTGVTFont
C:org.apache.batik.gvt.font.AWTGVTFont java.lang.Float
C:org.apache.batik.gvt.font.AWTGVTFont java.awt.Font
C:org.apache.batik.gvt.font.AWTGVTFont java.text.StringCharacterIterator
C:org.apache.batik.gvt.font.AWTGVTFont java.lang.String
C:org.apache.batik.gvt.font.AWTGVTFont org.apache.batik.gvt.font.AWTGVTGlyphVector
C:org.apache.batik.gvt.font.AWTGVTFont java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.font.AWTGVTFont org.apache.batik.gvt.font.GVTLineMetrics
C:org.apache.batik.gvt.font.AWTGVTFont org.apache.batik.gvt.font.AWTGlyphGeometryCache
C:org.apache.batik.gvt.font.AWTGVTFont org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value
C:org.apache.batik.gvt.font.AWTGVTFont java.util.HashMap
C:org.apache.batik.gvt.font.AWTGVTFont java.lang.Object
C:org.apache.batik.gvt.font.AWTGVTFont org.apache.batik.gvt.font.GVTFont
C:org.apache.batik.gvt.font.AWTGVTFont org.apache.batik.gvt.font.AWTGVTFont
C:org.apache.batik.gvt.font.AWTGVTFont java.util.Map
C:org.apache.batik.gvt.font.AWTGVTFont java.lang.Float
C:org.apache.batik.gvt.font.AWTGVTFont java.awt.font.GlyphVector
C:org.apache.batik.gvt.font.AWTGVTFont java.awt.geom.Point2D
C:org.apache.batik.gvt.font.AWTGVTFont org.apache.batik.gvt.font.AWTGlyphGeometryCache
C:org.apache.batik.gvt.font.AWTGVTFont org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value
C:org.apache.batik.gvt.font.AWTGVTFont java.awt.Shape
C:org.apache.batik.gvt.font.AWTGVTFont java.awt.font.GlyphMetrics
C:org.apache.batik.gvt.font.AWTGVTFont java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.font.AWTGVTFont java.awt.font.TextAttribute
C:org.apache.batik.gvt.font.AWTGVTFont java.util.Map
C:org.apache.batik.gvt.font.AWTGVTFont org.apache.batik.gvt.text.ArabicTextHandler
C:org.apache.batik.gvt.font.AWTGVTFont java.awt.font.GlyphVector
C:org.apache.batik.gvt.font.AWTGVTFont java.awt.font.GlyphMetrics
C:org.apache.batik.gvt.font.AWTGVTFont java.awt.geom.Point2D
C:org.apache.batik.gvt.font.AWTGVTFont java.awt.geom.AffineTransform
C:org.apache.batik.gvt.MarkerShapePainter java.lang.IllegalArgumentException
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.ext.awt.geom.ExtendedShape
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.ext.awt.geom.ShapeExtender
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.MarkerShapePainter java.awt.geom.Point2D$Double
C:org.apache.batik.gvt.MarkerShapePainter java.awt.geom.PathIterator
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.gvt.ProxyGraphicsNode
C:org.apache.batik.gvt.MarkerShapePainter java.util.ArrayList
C:org.apache.batik.gvt.MarkerShapePainter java.lang.RuntimeException
C:org.apache.batik.gvt.MarkerShapePainter java.awt.geom.AffineTransform
C:org.apache.batik.gvt.MarkerShapePainter java.lang.StringBuilder
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.gvt.MarkerShapePainter
C:org.apache.batik.gvt.MarkerShapePainter java.lang.Object
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.gvt.ShapePainter
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.gvt.MarkerShapePainter
C:org.apache.batik.gvt.MarkerShapePainter java.awt.Shape
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.MarkerShapePainter java.util.List
C:org.apache.batik.gvt.MarkerShapePainter [Lorg.apache.batik.gvt.ProxyGraphicsNode;
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.ext.awt.geom.ExtendedPathIterator
C:org.apache.batik.gvt.MarkerShapePainter [D
C:org.apache.batik.gvt.MarkerShapePainter java.awt.geom.Point2D
C:org.apache.batik.gvt.MarkerShapePainter java.awt.geom.Arc2D
C:org.apache.batik.gvt.MarkerShapePainter java.awt.geom.AffineTransform
C:org.apache.batik.gvt.MarkerShapePainter java.util.List
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.ext.awt.geom.ExtendedPathIterator
C:org.apache.batik.gvt.MarkerShapePainter java.awt.geom.Point2D
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.gvt.Marker
C:org.apache.batik.gvt.MarkerShapePainter java.lang.Double
C:org.apache.batik.gvt.MarkerShapePainter java.lang.Math
C:org.apache.batik.gvt.MarkerShapePainter org.apache.batik.ext.awt.geom.ExtendedGeneralPath
C:org.apache.batik.gvt.MarkerShapePainter java.awt.geom.Arc2D
C:org.apache.batik.gvt.Marker java.lang.IllegalArgumentException
C:org.apache.batik.gvt.Marker java.awt.geom.Point2D
C:org.apache.batik.gvt.Marker org.apache.batik.gvt.Marker
C:org.apache.batik.gvt.Marker java.lang.Object
C:org.apache.batik.gvt.Marker org.apache.batik.gvt.Marker
C:org.apache.batik.gvt.Marker org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.Marker java.awt.geom.Point2D
C:org.apache.batik.gvt.CompositeGraphicsNode$ListItr java.lang.IndexOutOfBoundsException
C:org.apache.batik.gvt.CompositeGraphicsNode$ListItr java.util.NoSuchElementException
C:org.apache.batik.gvt.CompositeGraphicsNode$ListItr java.lang.IllegalStateException
C:org.apache.batik.gvt.CompositeGraphicsNode$ListItr java.util.ConcurrentModificationException
C:org.apache.batik.gvt.CompositeGraphicsNode$ListItr org.apache.batik.gvt.CompositeGraphicsNode$ListItr
C:org.apache.batik.gvt.CompositeGraphicsNode$ListItr org.apache.batik.gvt.CompositeGraphicsNode$Itr
C:org.apache.batik.gvt.CompositeGraphicsNode$ListItr java.util.ListIterator
C:org.apache.batik.gvt.CompositeGraphicsNode$ListItr java.lang.IndexOutOfBoundsException
C:org.apache.batik.gvt.CompositeGraphicsNode$ListItr org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.CompositeGraphicsNode$ListItr org.apache.batik.gvt.CompositeGraphicsNode$1
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.AbstractGraphicsNode java.lang.ref.WeakReference
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.geom.NoninvertibleTransformException
C:org.apache.batik.gvt.AbstractGraphicsNode java.lang.RuntimeException
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.geom.AffineTransform
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.RenderingHints
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.filter.GraphicsNodeRable
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.filter.GraphicsNodeRable8Bit
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.AlphaComposite
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.Graphics2D
C:org.apache.batik.gvt.AbstractGraphicsNode java.lang.StringBuilder
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.ext.awt.RenderingHintsKeyExt
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.event.GraphicsNodeChangeEvent
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.event.GraphicsNodeChangeListener
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.geom.Rectangle2D$Double
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.AbstractGraphicsNode
C:org.apache.batik.gvt.AbstractGraphicsNode java.lang.Object
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.geom.NoninvertibleTransformException
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.geom.AffineTransform
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.RenderingHints$Key
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.filter.GraphicsNodeRable
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.AbstractGraphicsNode
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.Graphics2D
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.Composite
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.RenderingHints
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.Shape
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.AbstractGraphicsNode java.util.List
C:org.apache.batik.gvt.AbstractGraphicsNode java.lang.Object
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.RootGraphicsNode
C:org.apache.batik.gvt.AbstractGraphicsNode java.util.Iterator
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.ext.awt.image.renderable.ClipRable
C:org.apache.batik.gvt.AbstractGraphicsNode java.awt.Shape
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.filter.Mask
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.ext.awt.image.GraphicsUtil
C:org.apache.batik.gvt.AbstractGraphicsNode java.lang.System
C:org.apache.batik.gvt.AbstractGraphicsNode java.lang.Class
C:org.apache.batik.gvt.AbstractGraphicsNode java.io.PrintStream
C:org.apache.batik.gvt.AbstractGraphicsNode java.util.List
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.gvt.RootGraphicsNode
C:org.apache.batik.gvt.AbstractGraphicsNode java.util.Iterator
C:org.apache.batik.gvt.AbstractGraphicsNode org.apache.batik.util.HaltingThread
C:org.apache.batik.gvt.AbstractGraphicsNode java.lang.Math
C:org.apache.batik.gvt.ShapeNode org.apache.batik.gvt.StrokeShapePainter
C:org.apache.batik.gvt.ShapeNode org.apache.batik.gvt.FillShapePainter
C:org.apache.batik.gvt.ShapeNode org.apache.batik.gvt.CompositeShapePainter
C:org.apache.batik.gvt.ShapeNode org.apache.batik.gvt.ShapeNode
C:org.apache.batik.gvt.ShapeNode org.apache.batik.gvt.AbstractGraphicsNode
C:org.apache.batik.gvt.ShapeNode java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.ShapeNode org.apache.batik.gvt.ShapePainter
C:org.apache.batik.gvt.ShapeNode org.apache.batik.gvt.CompositeShapePainter
C:org.apache.batik.gvt.ShapeNode org.apache.batik.gvt.ShapePainter
C:org.apache.batik.gvt.ShapeNode java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.ShapeNode java.awt.Shape
C:org.apache.batik.gvt.ShapeNode org.apache.batik.util.HaltingThread
C:org.apache.batik.gvt.Selectable org.apache.batik.gvt.Selectable
C:org.apache.batik.gvt.Selectable java.lang.Object
C:org.apache.batik.gvt.CompositeGraphicsNode java.awt.geom.Rectangle2D$Float
C:org.apache.batik.gvt.CompositeGraphicsNode java.awt.geom.AffineTransform
C:org.apache.batik.gvt.CompositeGraphicsNode java.awt.geom.GeneralPath
C:org.apache.batik.gvt.CompositeGraphicsNode org.apache.batik.gvt.AbstractGraphicsNode
C:org.apache.batik.gvt.CompositeGraphicsNode org.apache.batik.gvt.CompositeGraphicsNode$Itr
C:org.apache.batik.gvt.CompositeGraphicsNode org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.CompositeGraphicsNode java.lang.IllegalArgumentException
C:org.apache.batik.gvt.CompositeGraphicsNode java.lang.StringBuilder
C:org.apache.batik.gvt.CompositeGraphicsNode java.lang.IndexOutOfBoundsException
C:org.apache.batik.gvt.CompositeGraphicsNode java.lang.UnsupportedOperationException
C:org.apache.batik.gvt.CompositeGraphicsNode org.apache.batik.gvt.CompositeGraphicsNode$ListItr
C:org.apache.batik.gvt.CompositeGraphicsNode java.awt.Rectangle
C:org.apache.batik.gvt.CompositeGraphicsNode org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.CompositeGraphicsNode java.util.List
C:org.apache.batik.gvt.CompositeGraphicsNode org.apache.batik.gvt.CompositeGraphicsNode$1
C:org.apache.batik.gvt.CompositeGraphicsNode java.lang.Thread
C:org.apache.batik.gvt.CompositeGraphicsNode org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.CompositeGraphicsNode java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.CompositeGraphicsNode java.awt.geom.AffineTransform
C:org.apache.batik.gvt.CompositeGraphicsNode org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.CompositeGraphicsNode java.awt.geom.Point2D
C:org.apache.batik.gvt.CompositeGraphicsNode java.awt.Shape
C:org.apache.batik.gvt.CompositeGraphicsNode java.util.Iterator
C:org.apache.batik.gvt.CompositeGraphicsNode [Lorg.apache.batik.gvt.GraphicsNode;
C:org.apache.batik.gvt.CompositeGraphicsNode java.lang.Thread
C:org.apache.batik.gvt.CompositeGraphicsNode org.apache.batik.util.HaltingThread
C:org.apache.batik.gvt.CompositeGraphicsNode java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.CompositeGraphicsNode java.lang.System
C:org.apache.batik.gvt.CompositeGraphicsNode java.util.Collection
C:org.apache.batik.gvt.CompositeGraphicsNode java.util.Iterator
C:org.apache.batik.gvt.UpdateTracker$ChngSrcRect org.apache.batik.gvt.UpdateTracker$ChngSrcRect
C:org.apache.batik.gvt.UpdateTracker$ChngSrcRect java.awt.geom.Rectangle2D$Float
C:org.apache.batik.gvt.UpdateTracker$ChngSrcRect java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.UpdateTracker$ChngSrcRect org.apache.batik.gvt.UpdateTracker
C:org.apache.batik.gvt.FillShapePainter java.lang.IllegalArgumentException
C:org.apache.batik.gvt.FillShapePainter org.apache.batik.gvt.FillShapePainter
C:org.apache.batik.gvt.FillShapePainter java.lang.Object
C:org.apache.batik.gvt.FillShapePainter org.apache.batik.gvt.ShapePainter
C:org.apache.batik.gvt.FillShapePainter org.apache.batik.gvt.FillShapePainter
C:org.apache.batik.gvt.FillShapePainter java.awt.Shape
C:org.apache.batik.gvt.FillShapePainter java.awt.Graphics2D
C:org.apache.batik.gvt.FillShapePainter java.awt.Shape
C:org.apache.batik.gvt.CanvasGraphicsNode java.awt.geom.AffineTransform
C:org.apache.batik.gvt.CanvasGraphicsNode java.awt.geom.NoninvertibleTransformException
C:org.apache.batik.gvt.CanvasGraphicsNode java.lang.RuntimeException
C:org.apache.batik.gvt.CanvasGraphicsNode org.apache.batik.gvt.CanvasGraphicsNode
C:org.apache.batik.gvt.CanvasGraphicsNode org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.CanvasGraphicsNode java.awt.geom.NoninvertibleTransformException
C:org.apache.batik.gvt.CanvasGraphicsNode java.awt.Graphics2D
C:org.apache.batik.gvt.RasterImageNode java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.RasterImageNode org.apache.batik.gvt.RasterImageNode
C:org.apache.batik.gvt.RasterImageNode org.apache.batik.gvt.AbstractGraphicsNode
C:org.apache.batik.gvt.RasterImageNode org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.RasterImageNode org.apache.batik.ext.awt.image.GraphicsUtil
C:org.apache.batik.gvt.CompositeShapePainter java.lang.IllegalArgumentException
C:org.apache.batik.gvt.CompositeShapePainter org.apache.batik.gvt.ShapePainter
C:org.apache.batik.gvt.CompositeShapePainter java.awt.geom.Area
C:org.apache.batik.gvt.CompositeShapePainter java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.CompositeShapePainter org.apache.batik.gvt.CompositeShapePainter
C:org.apache.batik.gvt.CompositeShapePainter java.lang.Object
C:org.apache.batik.gvt.CompositeShapePainter org.apache.batik.gvt.CompositeShapePainter
C:org.apache.batik.gvt.CompositeShapePainter java.awt.Shape
C:org.apache.batik.gvt.CompositeShapePainter java.awt.geom.Area
C:org.apache.batik.gvt.CompositeShapePainter java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.CompositeShapePainter java.lang.System
C:org.apache.batik.gvt.Mask org.apache.batik.gvt.Mask
C:org.apache.batik.gvt.Mask java.lang.Object
C:org.apache.batik.gvt.Mask java.awt.image.renderable.RenderableImage
C:org.apache.batik.gvt.ProxyGraphicsNode java.awt.geom.AffineTransform
C:org.apache.batik.gvt.ProxyGraphicsNode org.apache.batik.gvt.ProxyGraphicsNode
C:org.apache.batik.gvt.ProxyGraphicsNode org.apache.batik.gvt.AbstractGraphicsNode
C:org.apache.batik.gvt.ProxyGraphicsNode java.awt.geom.AffineTransform
C:org.apache.batik.gvt.ProxyGraphicsNode org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.GVTTreeWalker java.lang.IllegalArgumentException
C:org.apache.batik.gvt.GVTTreeWalker java.lang.StringBuilder
C:org.apache.batik.gvt.GVTTreeWalker org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.GVTTreeWalker org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.GVTTreeWalker org.apache.batik.gvt.GVTTreeWalker
C:org.apache.batik.gvt.GVTTreeWalker java.lang.Object
C:org.apache.batik.gvt.GVTTreeWalker org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.GVTTreeWalker org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.GVTTreeWalker java.util.List
C:org.apache.batik.gvt.GVTTreeWalker java.util.List
C:org.apache.batik.gvt.CompositeGraphicsNode$1 org.apache.batik.gvt.CompositeGraphicsNode$1
C:org.apache.batik.gvt.CompositeGraphicsNode$1 java.lang.Object
C:org.apache.batik.gvt.CompositeGraphicsNode$1 org.apache.batik.gvt.CompositeGraphicsNode
C:org.apache.batik.gvt.event.GraphicsNodeMouseListener org.apache.batik.gvt.event.GraphicsNodeMouseListener
C:org.apache.batik.gvt.event.GraphicsNodeMouseListener java.lang.Object
C:org.apache.batik.gvt.event.GraphicsNodeMouseListener java.util.EventListener
C:org.apache.batik.gvt.event.GraphicsNodeMouseEvent org.apache.batik.gvt.event.GraphicsNodeMouseEvent
C:org.apache.batik.gvt.event.GraphicsNodeMouseEvent java.awt.Point
C:org.apache.batik.gvt.event.GraphicsNodeMouseEvent java.awt.geom.Point2D$Float
C:org.apache.batik.gvt.event.GraphicsNodeMouseEvent org.apache.batik.gvt.event.GraphicsNodeInputEvent
C:org.apache.batik.gvt.event.GraphicsNodeMouseEvent java.awt.event.MouseEvent
C:org.apache.batik.gvt.event.GraphicsNodeMouseEvent java.awt.geom.Point2D
C:org.apache.batik.gvt.event.GraphicsNodeFocusListener org.apache.batik.gvt.event.GraphicsNodeFocusListener
C:org.apache.batik.gvt.event.GraphicsNodeFocusListener java.lang.Object
C:org.apache.batik.gvt.event.GraphicsNodeFocusListener java.util.EventListener
C:org.apache.batik.gvt.event.SelectionAdapter org.apache.batik.gvt.event.SelectionAdapter
C:org.apache.batik.gvt.event.SelectionAdapter java.lang.Object
C:org.apache.batik.gvt.event.SelectionAdapter org.apache.batik.gvt.event.SelectionListener
C:org.apache.batik.gvt.event.GraphicsNodeFocusEvent org.apache.batik.gvt.event.GraphicsNodeFocusEvent
C:org.apache.batik.gvt.event.GraphicsNodeFocusEvent org.apache.batik.gvt.event.GraphicsNodeEvent
C:org.apache.batik.gvt.event.GraphicsNodeMouseAdapter org.apache.batik.gvt.event.GraphicsNodeMouseAdapter
C:org.apache.batik.gvt.event.GraphicsNodeMouseAdapter java.lang.Object
C:org.apache.batik.gvt.event.GraphicsNodeMouseAdapter org.apache.batik.gvt.event.GraphicsNodeMouseListener
C:org.apache.batik.gvt.event.GraphicsNodeKeyListener org.apache.batik.gvt.event.GraphicsNodeKeyListener
C:org.apache.batik.gvt.event.GraphicsNodeKeyListener java.lang.Object
C:org.apache.batik.gvt.event.GraphicsNodeKeyListener java.util.EventListener
C:org.apache.batik.gvt.event.SelectionListener org.apache.batik.gvt.event.SelectionListener
C:org.apache.batik.gvt.event.SelectionListener java.lang.Object
C:org.apache.batik.gvt.event.SelectionListener java.util.EventListener
C:org.apache.batik.gvt.event.GraphicsNodeMouseWheelEvent org.apache.batik.gvt.event.GraphicsNodeMouseWheelEvent
C:org.apache.batik.gvt.event.GraphicsNodeMouseWheelEvent org.apache.batik.gvt.event.GraphicsNodeInputEvent
C:org.apache.batik.gvt.event.GraphicsNodeEvent org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.event.GraphicsNodeEvent org.apache.batik.gvt.event.GraphicsNodeEvent
C:org.apache.batik.gvt.event.GraphicsNodeEvent java.util.EventObject
C:org.apache.batik.gvt.event.GraphicsNodeChangeListener org.apache.batik.gvt.event.GraphicsNodeChangeListener
C:org.apache.batik.gvt.event.GraphicsNodeChangeListener java.lang.Object
C:org.apache.batik.gvt.event.GraphicsNodeChangeListener java.util.EventListener
C:org.apache.batik.gvt.event.GraphicsNodeChangeEvent org.apache.batik.gvt.event.GraphicsNodeChangeEvent
C:org.apache.batik.gvt.event.GraphicsNodeChangeEvent org.apache.batik.gvt.event.GraphicsNodeEvent
C:org.apache.batik.gvt.event.GraphicsNodeKeyEvent org.apache.batik.gvt.event.GraphicsNodeKeyEvent
C:org.apache.batik.gvt.event.GraphicsNodeKeyEvent org.apache.batik.gvt.event.GraphicsNodeInputEvent
C:org.apache.batik.gvt.event.GraphicsNodeChangeAdapter org.apache.batik.gvt.event.GraphicsNodeChangeAdapter
C:org.apache.batik.gvt.event.GraphicsNodeChangeAdapter java.lang.Object
C:org.apache.batik.gvt.event.GraphicsNodeChangeAdapter org.apache.batik.gvt.event.GraphicsNodeChangeListener
C:org.apache.batik.gvt.event.GraphicsNodeInputEvent java.awt.event.InputEvent
C:org.apache.batik.gvt.event.GraphicsNodeInputEvent org.apache.batik.gvt.event.GraphicsNodeInputEvent
C:org.apache.batik.gvt.event.GraphicsNodeInputEvent org.apache.batik.gvt.event.GraphicsNodeEvent
C:org.apache.batik.gvt.event.GraphicsNodeInputEvent org.apache.batik.gvt.event.AWTEventDispatcher
C:org.apache.batik.gvt.event.GraphicsNodeKeyAdapter org.apache.batik.gvt.event.GraphicsNodeKeyAdapter
C:org.apache.batik.gvt.event.GraphicsNodeKeyAdapter java.lang.Object
C:org.apache.batik.gvt.event.GraphicsNodeKeyAdapter org.apache.batik.gvt.event.GraphicsNodeKeyListener
C:org.apache.batik.gvt.event.GraphicsNodeMouseWheelListener org.apache.batik.gvt.event.GraphicsNodeMouseWheelListener
C:org.apache.batik.gvt.event.GraphicsNodeMouseWheelListener java.lang.Object
C:org.apache.batik.gvt.event.GraphicsNodeMouseWheelListener java.util.EventListener
C:org.apache.batik.gvt.event.SelectionEvent org.apache.batik.gvt.event.SelectionEvent
C:org.apache.batik.gvt.event.SelectionEvent java.lang.Object
C:org.apache.batik.gvt.event.EventDispatcher org.apache.batik.gvt.event.EventDispatcher
C:org.apache.batik.gvt.event.EventDispatcher java.lang.Object
C:org.apache.batik.gvt.event.AWTEventDispatcher java.util.LinkedList
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.event.AWTEventDispatcher
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.event.KeyEvent
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.event.InputEvent
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.geom.AffineTransform
C:org.apache.batik.gvt.event.AWTEventDispatcher javax.swing.event.EventListenerList
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.event.GraphicsNodeMouseListener
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.event.GraphicsNodeMouseWheelListener
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.event.GraphicsNodeKeyListener
C:org.apache.batik.gvt.event.AWTEventDispatcher [Ljava.util.EventListener;
C:org.apache.batik.gvt.event.AWTEventDispatcher java.util.EventObject
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.event.MouseWheelEvent
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.event.MouseEvent
C:org.apache.batik.gvt.event.AWTEventDispatcher java.lang.UnsupportedOperationException
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.event.GraphicsNodeKeyEvent
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.geom.Point2D$Float
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.geom.NoninvertibleTransformException
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.Point
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.event.GraphicsNodeMouseEvent
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.event.GraphicsNodeMouseWheelEvent
C:org.apache.batik.gvt.event.AWTEventDispatcher [Lorg.apache.batik.gvt.event.GraphicsNodeMouseListener;
C:org.apache.batik.gvt.event.AWTEventDispatcher java.lang.IllegalArgumentException
C:org.apache.batik.gvt.event.AWTEventDispatcher java.lang.StringBuilder
C:org.apache.batik.gvt.event.AWTEventDispatcher [Lorg.apache.batik.gvt.event.GraphicsNodeMouseWheelListener;
C:org.apache.batik.gvt.event.AWTEventDispatcher [Lorg.apache.batik.gvt.event.GraphicsNodeKeyListener;
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.event.GraphicsNodeInputEvent
C:org.apache.batik.gvt.event.AWTEventDispatcher java.lang.Object
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.event.EventDispatcher
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.event.MouseListener
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.event.MouseMotionListener
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.event.MouseWheelListener
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.event.KeyListener
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.event.AWTEventDispatcher
C:org.apache.batik.gvt.event.AWTEventDispatcher java.lang.Class
C:org.apache.batik.gvt.event.AWTEventDispatcher java.lang.Object
C:org.apache.batik.gvt.event.AWTEventDispatcher [Ljava.lang.Object;
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.event.InputEvent
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.Toolkit
C:org.apache.batik.gvt.event.AWTEventDispatcher java.lang.UnsupportedOperationException
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.geom.Point2D
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.event.MouseEvent
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.geom.NoninvertibleTransformException
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.Point
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.event.GraphicsNodeMouseEvent
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.event.GraphicsNodeMouseWheelEvent
C:org.apache.batik.gvt.event.AWTEventDispatcher java.util.List
C:org.apache.batik.gvt.event.AWTEventDispatcher java.lang.reflect.Array
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.Toolkit
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.geom.Point2D
C:org.apache.batik.gvt.event.AWTEventDispatcher org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.event.AWTEventDispatcher java.awt.Component
C:org.apache.batik.gvt.event.AWTEventDispatcher java.lang.Math
C:org.apache.batik.gvt.GraphicsNode java.awt.geom.AffineTransform
C:org.apache.batik.gvt.GraphicsNode org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.GraphicsNode java.lang.Object
C:org.apache.batik.gvt.GraphicsNode java.awt.RenderingHints$Key
C:org.apache.batik.gvt.GraphicsNode java.awt.RenderingHints
C:org.apache.batik.gvt.flow.TextLineBreaks org.apache.batik.gvt.flow.TextLineBreaks
C:org.apache.batik.gvt.flow.TextLineBreaks java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.flow.TextLineBreaks org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute
C:org.apache.batik.gvt.flow.TextLineBreaks java.util.HashSet
C:org.apache.batik.gvt.flow.TextLineBreaks java.lang.String
C:org.apache.batik.gvt.flow.TextLineBreaks [B
C:org.apache.batik.gvt.flow.TextLineBreaks java.lang.Object
C:org.apache.batik.gvt.flow.TextLineBreaks java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.gvt.flow.TextLineBreaks java.text.AttributedCharacterIterator
C:org.apache.batik.gvt.flow.TextLineBreaks java.text.AttributedString
C:org.apache.batik.gvt.flow.TextLineBreaks java.text.AttributedString
C:org.apache.batik.gvt.flow.TextLineBreaks java.lang.Integer
C:org.apache.batik.gvt.flow.TextLineBreaks org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.gvt.flow.TextLineBreaks java.util.Set
C:org.apache.batik.gvt.flow.GlyphGroupInfo org.apache.batik.gvt.flow.GlyphGroupInfo
C:org.apache.batik.gvt.flow.GlyphGroupInfo java.lang.Object
C:org.apache.batik.gvt.flow.GlyphGroupInfo org.apache.batik.gvt.flow.GlyphGroupInfo
C:org.apache.batik.gvt.flow.GlyphGroupInfo org.apache.batik.gvt.font.GVTGlyphVector
C:org.apache.batik.gvt.flow.GlyphGroupInfo [Z
C:org.apache.batik.gvt.flow.GlyphGroupInfo [F
C:org.apache.batik.gvt.flow.GlyphGroupInfo java.lang.System
C:org.apache.batik.gvt.flow.BlockInfo java.lang.Float
C:org.apache.batik.gvt.flow.BlockInfo org.apache.batik.gvt.font.GVTFont
C:org.apache.batik.gvt.flow.BlockInfo org.apache.batik.gvt.flow.BlockInfo
C:org.apache.batik.gvt.flow.BlockInfo java.lang.Object
C:org.apache.batik.gvt.flow.BlockInfo java.lang.Float
C:org.apache.batik.gvt.flow.BlockInfo java.util.Iterator
C:org.apache.batik.gvt.flow.BlockInfo java.awt.font.TextAttribute
C:org.apache.batik.gvt.flow.BlockInfo java.util.Map
C:org.apache.batik.gvt.flow.BlockInfo java.util.List
C:org.apache.batik.gvt.flow.BlockInfo java.util.Iterator
C:org.apache.batik.gvt.flow.BlockInfo org.apache.batik.gvt.font.GVTLineMetrics
C:org.apache.batik.gvt.flow.MarginInfo org.apache.batik.gvt.flow.MarginInfo
C:org.apache.batik.gvt.flow.MarginInfo java.lang.Object
C:org.apache.batik.gvt.flow.FlowRegions$TransitionComp org.apache.batik.gvt.flow.FlowRegions$Transition
C:org.apache.batik.gvt.flow.FlowRegions$TransitionComp org.apache.batik.gvt.flow.FlowRegions$TransitionComp
C:org.apache.batik.gvt.flow.FlowRegions$TransitionComp java.lang.Object
C:org.apache.batik.gvt.flow.FlowRegions$TransitionComp java.util.Comparator
C:org.apache.batik.gvt.flow.FlowRegions$TransitionComp org.apache.batik.gvt.flow.FlowRegions$Transition
C:org.apache.batik.gvt.flow.FlowRegions$TransitionComp org.apache.batik.gvt.flow.FlowRegions
C:org.apache.batik.gvt.flow.FlowRegions org.apache.batik.ext.awt.geom.SegmentList
C:org.apache.batik.gvt.flow.FlowRegions java.lang.IllegalArgumentException
C:org.apache.batik.gvt.flow.FlowRegions java.lang.StringBuilder
C:org.apache.batik.gvt.flow.FlowRegions [D
C:org.apache.batik.gvt.flow.FlowRegions org.apache.batik.gvt.flow.FlowRegions$Transition
C:org.apache.batik.gvt.flow.FlowRegions org.apache.batik.ext.awt.geom.Segment
C:org.apache.batik.gvt.flow.FlowRegions java.util.ArrayList
C:org.apache.batik.gvt.flow.FlowRegions org.apache.batik.gvt.flow.FlowRegions
C:org.apache.batik.gvt.flow.FlowRegions java.lang.Object
C:org.apache.batik.gvt.flow.FlowRegions org.apache.batik.gvt.flow.FlowRegions$TransitionComp
C:org.apache.batik.gvt.flow.FlowRegions org.apache.batik.ext.awt.geom.SegmentList$SplitResults
C:org.apache.batik.gvt.flow.FlowRegions [Lorg.apache.batik.gvt.flow.FlowRegions$Transition;
C:org.apache.batik.gvt.flow.FlowRegions java.util.Iterator
C:org.apache.batik.gvt.flow.FlowRegions org.apache.batik.gvt.flow.FlowRegions$Transition
C:org.apache.batik.gvt.flow.FlowRegions java.awt.Shape
C:org.apache.batik.gvt.flow.FlowRegions java.awt.geom.Rectangle2D
C:org.apache.batik.gvt.flow.FlowRegions java.util.List
C:org.apache.batik.gvt.flow.FlowRegions java.util.Iterator
C:org.apache.batik.gvt.flow.FlowRegions java.util.Arrays
C:org.apache.batik.gvt.flow.RegionInfo org.apache.batik.gvt.flow.RegionInfo
C:org.apache.batik.gvt.flow.RegionInfo java.lang.Object
C:org.apache.batik.gvt.flow.LineInfo org.apache.batik.gvt.flow.GlyphGroupInfo
C:org.apache.batik.gvt.flow.LineInfo org.apache.batik.gvt.flow.LineInfo
C:org.apache.batik.gvt.flow.LineInfo org.apache.batik.gvt.flow.BlockInfo
C:org.apache.batik.gvt.flow.LineInfo java.lang.Object
C:org.apache.batik.gvt.flow.LineInfo org.apache.batik.gvt.flow.LineInfo
C:org.apache.batik.gvt.flow.LineInfo org.apache.batik.gvt.flow.FlowRegions
C:org.apache.batik.gvt.flow.LineInfo org.apache.batik.gvt.flow.BlockInfo
C:org.apache.batik.gvt.flow.LineInfo org.apache.batik.gvt.flow.GlyphGroupInfo
C:org.apache.batik.gvt.flow.LineInfo [Lorg.apache.batik.gvt.flow.GlyphGroupInfo;
C:org.apache.batik.gvt.flow.LineInfo [D
C:org.apache.batik.gvt.flow.LineInfo org.apache.batik.gvt.flow.WordInfo
C:org.apache.batik.gvt.flow.LineInfo org.apache.batik.gvt.font.GVTGlyphVector
C:org.apache.batik.gvt.flow.LineInfo [I
C:org.apache.batik.gvt.flow.LineInfo [Z
C:org.apache.batik.gvt.flow.LineInfo java.awt.geom.Point2D
C:org.apache.batik.gvt.flow.LineInfo org.apache.batik.gvt.flow.FlowRegions
C:org.apache.batik.gvt.flow.LineInfo org.apache.batik.gvt.flow.WordInfo
C:org.apache.batik.gvt.flow.LineInfo org.apache.batik.gvt.font.GVTGlyphVector
C:org.apache.batik.gvt.flow.LineInfo java.awt.geom.Point2D
C:org.apache.batik.gvt.flow.WordInfo org.apache.batik.gvt.flow.WordInfo
C:org.apache.batik.gvt.flow.WordInfo java.lang.Object
C:org.apache.batik.gvt.flow.WordInfo org.apache.batik.gvt.font.GVTLineMetrics
C:org.apache.batik.gvt.flow.FlowRegions$Transition org.apache.batik.gvt.flow.FlowRegions$Transition
C:org.apache.batik.gvt.flow.FlowRegions$Transition java.lang.Object
C:org.apache.batik.gvt.flow.FlowRegions$Transition org.apache.batik.gvt.flow.FlowRegions
C:org.apache.batik.gvt.renderer.Renderer org.apache.batik.gvt.renderer.Renderer
C:org.apache.batik.gvt.renderer.Renderer java.lang.Object
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.RenderingHints
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.geom.AffineTransform
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.image.BufferedImage
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.ext.awt.geom.RectListManager
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.ext.awt.image.rendered.PadRed
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.ext.awt.image.rendered.TileCacheRed
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.Shape
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.Rectangle
C:org.apache.batik.gvt.renderer.StaticRenderer java.lang.ref.SoftReference
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.ext.awt.image.rendered.CachableRed
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.image.renderable.RenderContext
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.ext.awt.image.rendered.TranslateRed
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.Point
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.gvt.renderer.StaticRenderer
C:org.apache.batik.gvt.renderer.StaticRenderer java.lang.Object
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.gvt.renderer.ImageRenderer
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.gvt.renderer.StaticRenderer
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.image.ColorModel
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.image.WritableRaster
C:org.apache.batik.gvt.renderer.StaticRenderer java.lang.Object
C:org.apache.batik.gvt.renderer.StaticRenderer java.lang.Throwable
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.ext.awt.geom.RectListManager
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.ext.awt.image.rendered.CachableRed
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.Rectangle
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.geom.AffineTransform
C:org.apache.batik.gvt.renderer.StaticRenderer java.util.Iterator
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.image.renderable.RenderContext
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.image.RenderedImage
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.image.SampleModel
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.image.ColorModel
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.AlphaComposite
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.Graphics2D
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.image.WritableRaster
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.ext.awt.image.PadMode
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.util.HaltingThread
C:org.apache.batik.gvt.renderer.StaticRenderer java.util.Collection
C:org.apache.batik.gvt.renderer.StaticRenderer java.util.Iterator
C:org.apache.batik.gvt.renderer.StaticRenderer java.lang.Math
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.ext.awt.image.GraphicsUtil
C:org.apache.batik.gvt.renderer.StaticRenderer org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.image.SampleModel
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.image.Raster
C:org.apache.batik.gvt.renderer.StaticRenderer java.awt.RenderingHints$Key
C:org.apache.batik.gvt.renderer.RendererFactory org.apache.batik.gvt.renderer.RendererFactory
C:org.apache.batik.gvt.renderer.RendererFactory java.lang.Object
C:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory org.apache.batik.gvt.renderer.MacRenderer
C:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory org.apache.batik.gvt.renderer.StaticRenderer
C:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory org.apache.batik.gvt.renderer.DynamicRenderer
C:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory org.apache.batik.gvt.renderer.ConcreteImageRendererFactory
C:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory java.lang.Object
C:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory org.apache.batik.gvt.renderer.ImageRendererFactory
C:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory org.apache.batik.util.Platform
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.Point
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.image.BufferedImage
C:org.apache.batik.gvt.renderer.DynamicRenderer org.apache.batik.ext.awt.image.rendered.PadRed
C:org.apache.batik.gvt.renderer.DynamicRenderer org.apache.batik.gvt.renderer.DynamicRenderer
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.Color
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.Rectangle
C:org.apache.batik.gvt.renderer.DynamicRenderer org.apache.batik.gvt.renderer.StaticRenderer
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.image.SampleModel
C:org.apache.batik.gvt.renderer.DynamicRenderer org.apache.batik.gvt.renderer.DynamicRenderer
C:org.apache.batik.gvt.renderer.DynamicRenderer org.apache.batik.ext.awt.geom.RectListManager
C:org.apache.batik.gvt.renderer.DynamicRenderer org.apache.batik.ext.awt.image.rendered.CachableRed
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.image.WritableRaster
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.Rectangle
C:org.apache.batik.gvt.renderer.DynamicRenderer java.lang.Object
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.Graphics2D
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.Color
C:org.apache.batik.gvt.renderer.DynamicRenderer java.util.Iterator
C:org.apache.batik.gvt.renderer.DynamicRenderer java.lang.Throwable
C:org.apache.batik.gvt.renderer.DynamicRenderer org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.renderer.DynamicRenderer org.apache.batik.ext.awt.image.rendered.CachableRed
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.image.WritableRaster
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.image.SampleModel
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.image.Raster
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.image.ColorModel
C:org.apache.batik.gvt.renderer.DynamicRenderer org.apache.batik.ext.awt.image.PadMode
C:org.apache.batik.gvt.renderer.DynamicRenderer org.apache.batik.ext.awt.geom.RectListManager
C:org.apache.batik.gvt.renderer.DynamicRenderer java.util.Iterator
C:org.apache.batik.gvt.renderer.DynamicRenderer org.apache.batik.ext.awt.image.GraphicsUtil
C:org.apache.batik.gvt.renderer.DynamicRenderer java.awt.Graphics2D
C:org.apache.batik.gvt.renderer.DynamicRenderer org.apache.batik.util.HaltingThread
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.RenderingHints
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.geom.AffineTransform
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.image.BufferedImage
C:org.apache.batik.gvt.renderer.MacRenderer org.apache.batik.ext.awt.geom.RectListManager
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.Rectangle
C:org.apache.batik.gvt.renderer.MacRenderer org.apache.batik.gvt.renderer.MacRenderer
C:org.apache.batik.gvt.renderer.MacRenderer java.lang.Throwable
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.Color
C:org.apache.batik.gvt.renderer.MacRenderer java.lang.Object
C:org.apache.batik.gvt.renderer.MacRenderer org.apache.batik.gvt.renderer.ImageRenderer
C:org.apache.batik.gvt.renderer.MacRenderer org.apache.batik.gvt.renderer.MacRenderer
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.RenderingHints
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.geom.AffineTransform
C:org.apache.batik.gvt.renderer.MacRenderer java.lang.Object
C:org.apache.batik.gvt.renderer.MacRenderer java.lang.Throwable
C:org.apache.batik.gvt.renderer.MacRenderer org.apache.batik.ext.awt.geom.RectListManager
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.Graphics2D
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.Rectangle
C:org.apache.batik.gvt.renderer.MacRenderer java.util.Iterator
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.AlphaComposite
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.Graphics2D
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.Shape
C:org.apache.batik.gvt.renderer.MacRenderer org.apache.batik.ext.awt.image.GraphicsUtil
C:org.apache.batik.gvt.renderer.MacRenderer java.util.Iterator
C:org.apache.batik.gvt.renderer.MacRenderer org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.gvt.renderer.MacRenderer org.apache.batik.util.HaltingThread
C:org.apache.batik.gvt.renderer.MacRenderer java.awt.RenderingHints$Key
C:org.apache.batik.gvt.renderer.ImageRenderer org.apache.batik.gvt.renderer.ImageRenderer
C:org.apache.batik.gvt.renderer.ImageRenderer java.lang.Object
C:org.apache.batik.gvt.renderer.ImageRenderer org.apache.batik.gvt.renderer.Renderer
C:org.apache.batik.gvt.renderer.ImageRendererFactory org.apache.batik.gvt.renderer.ImageRendererFactory
C:org.apache.batik.gvt.renderer.ImageRendererFactory java.lang.Object
C:org.apache.batik.gvt.renderer.ImageRendererFactory org.apache.batik.gvt.renderer.RendererFactory
M:org.apache.batik.gvt.PatternPaint:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,boolean,java.awt.geom.AffineTransform) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.PatternPaint:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,boolean,java.awt.geom.AffineTransform) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.PatternPaint:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,boolean,java.awt.geom.AffineTransform) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.PatternPaint:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,boolean,java.awt.geom.AffineTransform) (O)org.apache.batik.gvt.CompositeGraphicsNode:<init>()
M:org.apache.batik.gvt.PatternPaint:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,boolean,java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CompositeGraphicsNode:getChildren()
M:org.apache.batik.gvt.PatternPaint:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,boolean,java.awt.geom.AffineTransform) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.gvt.PatternPaint:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,boolean,java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CompositeGraphicsNode:getGraphicsNodeRable(boolean)
M:org.apache.batik.gvt.PatternPaint:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,boolean,java.awt.geom.AffineTransform) (M)java.awt.geom.Rectangle2D:clone()
M:org.apache.batik.gvt.PatternPaint:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,boolean,java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CompositeGraphicsNode:getBounds()
M:org.apache.batik.gvt.PatternPaint:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,boolean,java.awt.geom.AffineTransform) (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.PatternPaint:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,boolean,java.awt.geom.AffineTransform) (O)org.apache.batik.ext.awt.image.renderable.PadRable8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
M:org.apache.batik.gvt.PatternPaint:getPatternRect() (M)java.awt.geom.Rectangle2D:clone()
M:org.apache.batik.gvt.PatternPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.PatternPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.PatternPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints) (M)org.apache.batik.gvt.PatternPaintContext:getColorModel()
M:org.apache.batik.gvt.PatternPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints) (M)java.awt.image.ColorModel:equals(java.lang.Object)
M:org.apache.batik.gvt.PatternPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints) (M)java.awt.geom.AffineTransform:getMatrix(double[])
M:org.apache.batik.gvt.PatternPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints) (M)org.apache.batik.gvt.PatternPaintContext:getUsr2Dev()
M:org.apache.batik.gvt.PatternPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints) (M)java.awt.geom.AffineTransform:getMatrix(double[])
M:org.apache.batik.gvt.PatternPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints) (O)org.apache.batik.gvt.PatternPaint$PatternPaintContextWrapper:<init>(org.apache.batik.gvt.PatternPaintContext,int,int)
M:org.apache.batik.gvt.PatternPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints) (O)org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:setGraphicsNode(org.apache.batik.gvt.GraphicsNode) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:<init>(org.apache.batik.gvt.GraphicsNode) (O)org.apache.batik.ext.awt.image.renderable.AbstractRable:<init>()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:<init>(org.apache.batik.gvt.GraphicsNode) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.util.Map) (O)org.apache.batik.ext.awt.image.renderable.AbstractRable:<init>(org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.util.Map) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:<init>(org.apache.batik.gvt.GraphicsNode,boolean) (O)org.apache.batik.ext.awt.image.renderable.AbstractRable:<init>()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:<init>(org.apache.batik.gvt.GraphicsNode,boolean) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:getBounds2D() (I)org.apache.batik.gvt.GraphicsNode:getPrimitiveBounds()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:getBounds2D() (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:getBounds2D() (M)java.awt.geom.Rectangle2D:clone()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:getBounds2D() (I)org.apache.batik.gvt.GraphicsNode:getBounds()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:getBounds2D() (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:getBounds2D() (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:getBounds2D() (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:getBounds2D() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:paintRable(java.awt.Graphics2D) (M)java.awt.Graphics2D:getComposite()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:paintRable(java.awt.Graphics2D) (M)org.apache.batik.ext.awt.image.SVGComposite:equals(java.lang.Object)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:paintRable(java.awt.Graphics2D) (S)org.apache.batik.ext.awt.image.GraphicsUtil:getDestinationColorSpace(java.awt.Graphics2D)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:paintRable(java.awt.Graphics2D) (S)java.awt.color.ColorSpace:getInstance(int)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:paintRable(java.awt.Graphics2D) (M)org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:getGraphicsNode()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:paintRable(java.awt.Graphics2D) (M)org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:getUsePrimitivePaint()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:paintRable(java.awt.Graphics2D) (I)org.apache.batik.gvt.GraphicsNode:primitivePaint(java.awt.Graphics2D)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:paintRable(java.awt.Graphics2D) (I)org.apache.batik.gvt.GraphicsNode:paint(java.awt.Graphics2D)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.image.renderable.RenderContext:getTransform()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:clone()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:getBounds2D()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.Rectangle2D:equals(java.lang.Object)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:getScaleX()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:getScaleX()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:getScaleY()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:getScaleY()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:getShearX()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:getShearX()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:getShearY()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:getShearY()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:getTranslateX()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:getTranslateX()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:getTranslateY()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:getTranslateY()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getMinX()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (S)java.lang.Math:round(double)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getMinY()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (S)java.lang.Math:round(double)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (O)org.apache.batik.ext.awt.image.rendered.TranslateRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed,int,int)
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.AffineTransform:clone()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.image.renderable.RenderContext:getRenderingHints()
M:org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (O)org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints)
M:org.apache.batik.gvt.filter.ConcreteGraphicsNodeRableFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.filter.ConcreteGraphicsNodeRableFactory:createGraphicsNodeRable(org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getGraphicsNodeRable(boolean)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:setGraphicsNode(org.apache.batik.gvt.GraphicsNode) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:<init>(org.apache.batik.gvt.GraphicsNode) (O)org.apache.batik.ext.awt.image.renderable.AbstractRable:<init>()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:<init>(org.apache.batik.gvt.GraphicsNode) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)org.apache.batik.gvt.CompositeGraphicsNode:getChildren()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.util.List:iterator()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)org.apache.batik.gvt.GraphicsNode:getBounds()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:clone()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.CompositeGraphicsNode:getBackgroundEnable()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (S)org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getPrimitiveBounds()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (M)java.awt.geom.Rectangle2D:clone()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (S)org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (M)java.awt.geom.AffineTransform:createInverse()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (S)org.apache.batik.gvt.filter.BackgroundRable8Bit:addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getPrimitiveBounds()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBoundsRecursive(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.CompositeGraphicsNode:getBackgroundEnable()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBoundsRecursive(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBoundsRecursive(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (S)org.apache.batik.gvt.filter.BackgroundRable8Bit:getBoundsRecursive(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBoundsRecursive(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (O)java.awt.geom.Rectangle2D$Float:<init>(float,float,float,float)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBoundsRecursive(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBoundsRecursive(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (M)java.awt.geom.AffineTransform:createInverse()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBoundsRecursive(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBoundsRecursive(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBounds2D() (S)org.apache.batik.gvt.filter.BackgroundRable8Bit:getBoundsRecursive(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBounds2D() (S)org.apache.batik.gvt.filter.BackgroundRable8Bit:getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)org.apache.batik.gvt.CompositeGraphicsNode:getBackgroundEnable()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (O)java.util.ArrayList:<init>()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:intersects(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)org.apache.batik.gvt.CompositeGraphicsNode:getChildren()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.util.List:iterator()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)org.apache.batik.gvt.GraphicsNode:getBounds()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:intersects(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)org.apache.batik.gvt.GraphicsNode:getEnableBackgroundGraphicsNodeRable(boolean)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.util.List:size()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.util.List:size()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)java.util.List:get(int)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (O)org.apache.batik.ext.awt.image.renderable.CompositeRable8Bit:<init>(java.util.List,org.apache.batik.ext.awt.image.CompositeRule,boolean)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)java.awt.geom.AffineTransform:createInverse()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (O)org.apache.batik.ext.awt.image.renderable.AffineRable8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)org.apache.batik.gvt.filter.BackgroundRable8Bit:getBounds2D()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.image.renderable.RenderContext:getAreaOfInterest()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.geom.Rectangle2D:intersects(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (S)java.awt.geom.Rectangle2D:intersect(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)org.apache.batik.gvt.filter.BackgroundRable8Bit:getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (O)org.apache.batik.ext.awt.image.renderable.PadRable8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.image.renderable.RenderContext:getTransform()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.image.renderable.RenderContext:getRenderingHints()
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (O)java.awt.image.renderable.RenderContext:<init>(java.awt.geom.AffineTransform,java.awt.Shape,java.awt.RenderingHints)
M:org.apache.batik.gvt.filter.BackgroundRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (I)org.apache.batik.ext.awt.image.renderable.Filter:createRendering(java.awt.image.renderable.RenderContext)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (O)org.apache.batik.ext.awt.image.rendered.AbstractRed:<init>()
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (I)org.apache.batik.gvt.GraphicsNode:getPrimitiveBounds()
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (O)java.awt.geom.Rectangle2D$Float:<init>(float,float,float,float)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (M)java.awt.geom.AffineTransform:clone()
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (I)java.awt.Shape:getBounds()
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (M)org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:createColorModel()
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (S)org.apache.batik.ext.awt.image.rendered.AbstractTiledRed:getDefaultTileSize()
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (S)java.lang.Math:floor(double)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (S)java.lang.Math:floor(double)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (M)java.awt.image.ColorModel:createCompatibleSampleModel(int,int)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform,boolean,java.awt.RenderingHints) (M)org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:init(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.Rectangle,java.awt.image.ColorModel,java.awt.image.SampleModel,int,int,java.util.Map)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:copyData(java.awt.image.WritableRaster) (M)org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (M)java.awt.image.WritableRaster:createWritableTranslatedChild(int,int)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (M)java.awt.image.ColorModel:isAlphaPremultiplied()
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (O)java.awt.image.BufferedImage:<init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (S)org.apache.batik.ext.awt.image.GraphicsUtil:createGraphics(java.awt.image.BufferedImage,java.awt.RenderingHints)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (M)java.awt.image.WritableRaster:getWidth()
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (M)java.awt.image.WritableRaster:getHeight()
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (M)java.awt.Graphics2D:fillRect(int,int,int,int)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (M)java.awt.image.WritableRaster:getMinX()
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (M)java.awt.image.WritableRaster:getMinY()
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (M)java.awt.Graphics2D:translate(int,int)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (M)java.awt.Graphics2D:transform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (I)org.apache.batik.gvt.GraphicsNode:primitivePaint(java.awt.Graphics2D)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (I)org.apache.batik.gvt.GraphicsNode:paint(java.awt.Graphics2D)
M:org.apache.batik.gvt.filter.GraphicsNodeRed8Bit:genRect(java.awt.image.WritableRaster) (M)java.awt.Graphics2D:dispose()
M:org.apache.batik.gvt.filter.MaskRable8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (O)org.apache.batik.ext.awt.image.renderable.AbstractRable:<init>(org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
M:org.apache.batik.gvt.filter.MaskRable8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)org.apache.batik.gvt.filter.MaskRable8Bit:setMaskNode(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.filter.MaskRable8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D) (M)org.apache.batik.gvt.filter.MaskRable8Bit:setFilterRegion(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.filter.MaskRable8Bit:setSource(org.apache.batik.ext.awt.image.renderable.Filter) (M)org.apache.batik.gvt.filter.MaskRable8Bit:init(org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
M:org.apache.batik.gvt.filter.MaskRable8Bit:getSource() (M)org.apache.batik.gvt.filter.MaskRable8Bit:getSources()
M:org.apache.batik.gvt.filter.MaskRable8Bit:getSource() (M)java.util.Vector:get(int)
M:org.apache.batik.gvt.filter.MaskRable8Bit:getFilterRegion() (M)java.awt.geom.Rectangle2D:clone()
M:org.apache.batik.gvt.filter.MaskRable8Bit:setFilterRegion(java.awt.geom.Rectangle2D) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.filter.MaskRable8Bit:setMaskNode(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.filter.MaskRable8Bit:touch()
M:org.apache.batik.gvt.filter.MaskRable8Bit:getBounds2D() (M)java.awt.geom.Rectangle2D:clone()
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)org.apache.batik.gvt.filter.MaskRable8Bit:getMaskNode()
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (I)org.apache.batik.gvt.GraphicsNode:getGraphicsNodeRable(boolean)
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)org.apache.batik.gvt.filter.MaskRable8Bit:getBounds2D()
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (O)org.apache.batik.ext.awt.image.renderable.PadRable8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (O)org.apache.batik.ext.awt.image.renderable.FilterAsAlphaRable:<init>(org.apache.batik.ext.awt.image.renderable.Filter)
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (I)org.apache.batik.ext.awt.image.renderable.Filter:createRendering(java.awt.image.renderable.RenderContext)
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (S)org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed:wrap(java.awt.image.RenderedImage)
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)org.apache.batik.gvt.filter.MaskRable8Bit:getSource()
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)org.apache.batik.gvt.filter.MaskRable8Bit:getBounds2D()
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (O)org.apache.batik.ext.awt.image.renderable.PadRable8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (I)org.apache.batik.ext.awt.image.renderable.PadRable:createRendering(java.awt.image.renderable.RenderContext)
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (S)org.apache.batik.ext.awt.image.GraphicsUtil:wrap(java.awt.image.RenderedImage)
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (S)org.apache.batik.ext.awt.image.GraphicsUtil:convertToLsRGB(org.apache.batik.ext.awt.image.rendered.CachableRed)
M:org.apache.batik.gvt.filter.MaskRable8Bit:createRendering(java.awt.image.renderable.RenderContext) (O)org.apache.batik.ext.awt.image.rendered.MultiplyAlphaRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed,org.apache.batik.ext.awt.image.rendered.CachableRed)
M:org.apache.batik.gvt.RootGraphicsNode:<init>() (O)org.apache.batik.gvt.CompositeGraphicsNode:<init>()
M:org.apache.batik.gvt.RootGraphicsNode:getTreeGraphicsNodeChangeListeners() (O)java.util.LinkedList:<init>()
M:org.apache.batik.gvt.RootGraphicsNode:addTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener) (M)org.apache.batik.gvt.RootGraphicsNode:getTreeGraphicsNodeChangeListeners()
M:org.apache.batik.gvt.RootGraphicsNode:addTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.gvt.RootGraphicsNode:removeTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener) (M)org.apache.batik.gvt.RootGraphicsNode:getTreeGraphicsNodeChangeListeners()
M:org.apache.batik.gvt.RootGraphicsNode:removeTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener) (I)java.util.List:remove(java.lang.Object)
M:org.apache.batik.gvt.ImageNode:<init>() (O)org.apache.batik.gvt.CompositeGraphicsNode:<init>()
M:org.apache.batik.gvt.ImageNode:setVisible(boolean) (M)org.apache.batik.gvt.ImageNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.ImageNode:setVisible(boolean) (M)org.apache.batik.gvt.ImageNode:invalidateGeometryCache()
M:org.apache.batik.gvt.ImageNode:setVisible(boolean) (M)org.apache.batik.gvt.ImageNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.ImageNode:getPrimitiveBounds() (O)org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds()
M:org.apache.batik.gvt.ImageNode:paint(java.awt.Graphics2D) (O)org.apache.batik.gvt.CompositeGraphicsNode:paint(java.awt.Graphics2D)
M:org.apache.batik.gvt.ImageNode:contains(java.awt.geom.Point2D) (O)org.apache.batik.gvt.CompositeGraphicsNode:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.ImageNode:contains(java.awt.geom.Point2D) (O)org.apache.batik.gvt.CompositeGraphicsNode:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.ImageNode:nodeHitAt(java.awt.geom.Point2D) (O)org.apache.batik.gvt.CompositeGraphicsNode:nodeHitAt(java.awt.geom.Point2D)
M:org.apache.batik.gvt.ImageNode:nodeHitAt(java.awt.geom.Point2D) (M)org.apache.batik.gvt.ImageNode:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.ImageNode:setImage(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.ImageNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.ImageNode:setImage(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.ImageNode:invalidateGeometryCache()
M:org.apache.batik.gvt.ImageNode:setImage(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.ImageNode:ensureCapacity(int)
M:org.apache.batik.gvt.ImageNode:setImage(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.AbstractGraphicsNode:setParent(org.apache.batik.gvt.CompositeGraphicsNode)
M:org.apache.batik.gvt.ImageNode:setImage(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.ImageNode:getRoot()
M:org.apache.batik.gvt.ImageNode:setImage(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.AbstractGraphicsNode:setRoot(org.apache.batik.gvt.RootGraphicsNode)
M:org.apache.batik.gvt.ImageNode:setImage(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.ImageNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.UpdateTracker:<init>() (O)org.apache.batik.gvt.event.GraphicsNodeChangeAdapter:<init>()
M:org.apache.batik.gvt.UpdateTracker:<init>() (O)java.util.HashMap:<init>()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (O)java.util.LinkedList:<init>()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)java.util.Map:keySet()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)java.util.Set:iterator()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)java.util.Iterator:next()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (M)java.lang.ref.WeakReference:get()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)java.util.Map:remove(java.lang.Object)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)org.apache.batik.gvt.GraphicsNode:getBounds()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)org.apache.batik.gvt.GraphicsNode:getFilter()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)org.apache.batik.gvt.GraphicsNode:getWeakReference()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (M)java.awt.geom.AffineTransform:preConcatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (M)java.awt.geom.AffineTransform:preConcatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)java.util.Map:clear()
M:org.apache.batik.gvt.UpdateTracker:getDirtyAreas() (I)java.util.Map:clear()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.GraphicsNode:getWeakReference()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.GraphicsNode:getFilter()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CompositeGraphicsNode:iterator()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (I)java.util.Map:remove(java.lang.Object)
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.GraphicsNode:getBounds()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode) (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode,java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (M)org.apache.batik.gvt.event.GraphicsNodeChangeEvent:getGraphicsNode()
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (I)org.apache.batik.gvt.GraphicsNode:getWeakReference()
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (O)java.util.HashMap:<init>()
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (I)java.util.Map:containsKey(java.lang.Object)
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (M)java.awt.geom.AffineTransform:clone()
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (M)org.apache.batik.gvt.event.GraphicsNodeChangeEvent:getChangeSrc()
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (M)org.apache.batik.gvt.UpdateTracker:getNodeDirtyRegion(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (O)org.apache.batik.gvt.UpdateTracker$ChngSrcRect:<init>(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (I)org.apache.batik.gvt.GraphicsNode:getBounds()
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (I)java.util.Map:remove(java.lang.Object)
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.UpdateTracker:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.UpdateTracker:<clinit>() (O)java.awt.Rectangle:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode$Itr:<init>(org.apache.batik.gvt.CompositeGraphicsNode) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode$Itr:next() (M)org.apache.batik.gvt.CompositeGraphicsNode:get(int)
M:org.apache.batik.gvt.CompositeGraphicsNode$Itr:next() (M)org.apache.batik.gvt.CompositeGraphicsNode$Itr:checkForComodification()
M:org.apache.batik.gvt.CompositeGraphicsNode$Itr:next() (M)org.apache.batik.gvt.CompositeGraphicsNode$Itr:checkForComodification()
M:org.apache.batik.gvt.CompositeGraphicsNode$Itr:next() (O)java.util.NoSuchElementException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode$Itr:remove() (O)java.lang.IllegalStateException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode$Itr:remove() (M)org.apache.batik.gvt.CompositeGraphicsNode$Itr:checkForComodification()
M:org.apache.batik.gvt.CompositeGraphicsNode$Itr:remove() (M)org.apache.batik.gvt.CompositeGraphicsNode:remove(int)
M:org.apache.batik.gvt.CompositeGraphicsNode$Itr:remove() (O)java.util.ConcurrentModificationException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode$Itr:checkForComodification() (O)java.util.ConcurrentModificationException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode$Itr:<init>(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.CompositeGraphicsNode$1) (O)org.apache.batik.gvt.CompositeGraphicsNode$Itr:<init>(org.apache.batik.gvt.CompositeGraphicsNode)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (O)java.awt.RenderingHints:<init>(java.util.Map)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (O)org.apache.batik.ext.awt.image.renderable.TileRable8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (M)java.awt.image.ColorModel:getColorSpace()
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (S)java.awt.color.ColorSpace:getInstance(int)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (I)org.apache.batik.ext.awt.image.renderable.TileRable:setColorSpaceLinear(boolean)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (S)java.awt.color.ColorSpace:getInstance(int)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (I)org.apache.batik.ext.awt.image.renderable.TileRable:setColorSpaceLinear(boolean)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (O)java.awt.image.renderable.RenderContext:<init>(java.awt.geom.AffineTransform,java.awt.Shape,java.awt.RenderingHints)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (I)org.apache.batik.ext.awt.image.renderable.TileRable:createRendering(java.awt.image.renderable.RenderContext)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (I)java.awt.Shape:getBounds()
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (S)org.apache.batik.ext.awt.image.GraphicsUtil:wrap(java.awt.image.RenderedImage)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (O)org.apache.batik.ext.awt.image.rendered.TileCacheRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed,int,int)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (S)java.awt.image.ColorModel:getRGBdefault()
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (M)java.awt.image.ColorModel:createCompatibleWritableRaster(int,int)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (O)java.awt.image.BufferedImage:<init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (S)org.apache.batik.ext.awt.image.GraphicsUtil:wrap(java.awt.image.RenderedImage)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (I)java.awt.image.RenderedImage:getColorModel()
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (M)java.awt.image.ColorModel:hasAlpha()
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (M)java.awt.image.ColorModel:hasAlpha()
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (M)java.awt.image.ColorModel:isAlphaPremultiplied()
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (S)org.apache.batik.ext.awt.image.GraphicsUtil:coerceColorModel(java.awt.image.ColorModel,boolean)
M:org.apache.batik.gvt.PatternPaintContext:<init>(java.awt.image.ColorModel,java.awt.geom.AffineTransform,java.awt.RenderingHints,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,boolean) (S)org.apache.batik.ext.awt.image.GraphicsUtil:coerceColorModel(java.awt.image.ColorModel,boolean)
M:org.apache.batik.gvt.PatternPaintContext:getRaster(int,int,int,int) (M)java.awt.image.WritableRaster:getWidth()
M:org.apache.batik.gvt.PatternPaintContext:getRaster(int,int,int,int) (M)java.awt.image.WritableRaster:getHeight()
M:org.apache.batik.gvt.PatternPaintContext:getRaster(int,int,int,int) (M)java.awt.image.ColorModel:createCompatibleWritableRaster(int,int)
M:org.apache.batik.gvt.PatternPaintContext:getRaster(int,int,int,int) (M)java.awt.image.WritableRaster:createWritableChild(int,int,int,int,int,int,int[])
M:org.apache.batik.gvt.PatternPaintContext:getRaster(int,int,int,int) (I)java.awt.image.RenderedImage:copyData(java.awt.image.WritableRaster)
M:org.apache.batik.gvt.PatternPaintContext:getRaster(int,int,int,int) (I)java.awt.image.RenderedImage:getColorModel()
M:org.apache.batik.gvt.PatternPaintContext:getRaster(int,int,int,int) (M)java.awt.image.ColorModel:isAlphaPremultiplied()
M:org.apache.batik.gvt.PatternPaintContext:getRaster(int,int,int,int) (S)org.apache.batik.ext.awt.image.GraphicsUtil:coerceData(java.awt.image.WritableRaster,java.awt.image.ColorModel,boolean)
M:org.apache.batik.gvt.PatternPaintContext:getRaster(int,int,int,int) (M)java.awt.image.WritableRaster:getWidth()
M:org.apache.batik.gvt.PatternPaintContext:getRaster(int,int,int,int) (M)java.awt.image.WritableRaster:getHeight()
M:org.apache.batik.gvt.PatternPaintContext:getRaster(int,int,int,int) (M)java.awt.image.WritableRaster:createTranslatedChild(int,int)
M:org.apache.batik.gvt.PatternPaintContext:<clinit>() (O)java.awt.Rectangle:<init>(int,int,int,int)
M:org.apache.batik.gvt.text.TextPath:<init>(java.awt.geom.GeneralPath) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.text.TextPath:<init>(java.awt.geom.GeneralPath) (O)org.apache.batik.ext.awt.geom.PathLength:<init>(java.awt.Shape)
M:org.apache.batik.gvt.text.TextPath:lengthOfPath() (M)org.apache.batik.ext.awt.geom.PathLength:lengthOfPath()
M:org.apache.batik.gvt.text.TextPath:angleAtLength(float) (M)org.apache.batik.ext.awt.geom.PathLength:angleAtLength(float)
M:org.apache.batik.gvt.text.TextPath:pointAtLength(float) (M)org.apache.batik.ext.awt.geom.PathLength:pointAtLength(float)
M:org.apache.batik.gvt.text.TextPaintInfo:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.text.TextPaintInfo:<init>(org.apache.batik.gvt.text.TextPaintInfo) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.text.TextPaintInfo:<init>(org.apache.batik.gvt.text.TextPaintInfo) (M)org.apache.batik.gvt.text.TextPaintInfo:set(org.apache.batik.gvt.text.TextPaintInfo)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String) (O)java.text.AttributedCharacterIterator$Attribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<clinit>() (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.GVTACIImpl$TransformAttributeFilter:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:<init>(java.text.AttributedCharacterIterator,int,int) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:<init>(java.text.AttributedCharacterIterator,int,int) (I)java.text.AttributedCharacterIterator:getEndIndex()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:<init>(java.text.AttributedCharacterIterator,int,int) (S)java.lang.Math:min(int,int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:<init>(java.text.AttributedCharacterIterator,int,int) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:<init>(java.text.AttributedCharacterIterator,int,int) (S)java.lang.Math:max(int,int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:<init>(java.text.AttributedCharacterIterator,int,int) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getAllAttributeKeys() (I)java.text.AttributedCharacterIterator:getAllAttributeKeys()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getAttributes() (I)java.text.AttributedCharacterIterator:getAttributes()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getRunLimit() (I)java.text.AttributedCharacterIterator:getRunLimit()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getRunLimit() (S)java.lang.Math:min(int,int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getRunLimit(java.text.AttributedCharacterIterator$Attribute) (I)java.text.AttributedCharacterIterator:getRunLimit(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getRunLimit(java.text.AttributedCharacterIterator$Attribute) (S)java.lang.Math:min(int,int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getRunLimit(java.util.Set) (I)java.text.AttributedCharacterIterator:getRunLimit(java.util.Set)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getRunLimit(java.util.Set) (S)java.lang.Math:min(int,int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getRunStart() (I)java.text.AttributedCharacterIterator:getRunStart()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getRunStart() (S)java.lang.Math:max(int,int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getRunStart(java.text.AttributedCharacterIterator$Attribute) (I)java.text.AttributedCharacterIterator:getRunStart(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getRunStart(java.text.AttributedCharacterIterator$Attribute) (S)java.lang.Math:max(int,int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getRunStart(java.util.Set) (I)java.text.AttributedCharacterIterator:getRunStart(java.util.Set)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getRunStart(java.util.Set) (S)java.lang.Math:max(int,int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:clone() (I)java.text.AttributedCharacterIterator:clone()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:clone() (O)org.apache.batik.gvt.text.AttributedCharacterSpanIterator:<init>(java.text.AttributedCharacterIterator,int,int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:current() (I)java.text.AttributedCharacterIterator:current()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:first() (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getIndex() (I)java.text.AttributedCharacterIterator:getIndex()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:last() (M)org.apache.batik.gvt.text.AttributedCharacterSpanIterator:setIndex(int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:next() (M)org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getIndex()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:next() (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:next() (M)org.apache.batik.gvt.text.AttributedCharacterSpanIterator:setIndex(int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:previous() (M)org.apache.batik.gvt.text.AttributedCharacterSpanIterator:getIndex()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:previous() (I)java.text.AttributedCharacterIterator:previous()
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:setIndex(int) (S)java.lang.Math:max(int,int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:setIndex(int) (S)java.lang.Math:min(int,int)
M:org.apache.batik.gvt.text.AttributedCharacterSpanIterator:setIndex(int) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int,int[]) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getEndIndex()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (O)java.lang.StringBuffer:<init>(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.lang.StringBuffer:append(char)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.lang.StringBuffer:toString()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (O)java.text.AttributedString:<init>(java.lang.String)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getEndIndex()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getAttributes()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getRunLimit()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.util.Map:size()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (O)java.util.HashMap:<init>(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.util.Map:entrySet()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.util.Set:iterator()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.util.Map$Entry:getKey()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.util.Map$Entry:getValue()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttributes(java.util.Map,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:getIterator()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (O)java.awt.font.TextLayout:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.awt.font.TextLayout:getCharacterLevel(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.awt.font.TextLayout:getCharacterLevel(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:getIterator()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (O)org.apache.batik.gvt.text.BidiAttributedCharacterIterator:doBidiReorder(int[],int[],int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (O)java.lang.StringBuffer:<init>(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.awt.font.TextLayout:getCharacterLevel(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (S)org.apache.batik.gvt.text.BidiAttributedCharacterIterator:mirrorChar(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.lang.StringBuffer:append(char)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.lang.StringBuffer:toString()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (O)java.text.AttributedString:<init>(java.lang.String)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getEndIndex()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getAttributes()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getRunLimit()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttributes(java.util.Map,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttributes(java.util.Map,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.lang.Float:isNaN()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.lang.Float:isNaN()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.lang.Float:isNaN()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.lang.Float:isNaN()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (S)org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int) (M)java.text.AttributedString:getIterator()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:doBidiReorder(int[],int[],int,int) (O)org.apache.batik.gvt.text.BidiAttributedCharacterIterator:doBidiReorder(int[],int[],int,int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:getAllAttributeKeys() (I)java.text.AttributedCharacterIterator:getAllAttributeKeys()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:getAttributes() (I)java.text.AttributedCharacterIterator:getAttributes()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:getRunLimit() (I)java.text.AttributedCharacterIterator:getRunLimit()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:getRunLimit(java.text.AttributedCharacterIterator$Attribute) (I)java.text.AttributedCharacterIterator:getRunLimit(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:getRunLimit(java.util.Set) (I)java.text.AttributedCharacterIterator:getRunLimit(java.util.Set)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:getRunStart() (I)java.text.AttributedCharacterIterator:getRunStart()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:getRunStart(java.text.AttributedCharacterIterator$Attribute) (I)java.text.AttributedCharacterIterator:getRunStart(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:getRunStart(java.util.Set) (I)java.text.AttributedCharacterIterator:getRunStart(java.util.Set)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:clone() (I)java.text.AttributedCharacterIterator:clone()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:clone() (M)int[]:clone()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:clone() (O)org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext,int,int[])
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:current() (I)java.text.AttributedCharacterIterator:current()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:first() (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:getBeginIndex() (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:getEndIndex() (I)java.text.AttributedCharacterIterator:getEndIndex()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:getIndex() (I)java.text.AttributedCharacterIterator:getIndex()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:last() (I)java.text.AttributedCharacterIterator:last()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:next() (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:previous() (I)java.text.AttributedCharacterIterator:previous()
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:setIndex(int) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.BidiAttributedCharacterIterator:<clinit>() (S)java.lang.Float:valueOf(float)
M:org.apache.batik.gvt.text.GVTACIImpl:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.text.GVTACIImpl:<init>() (O)org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables()
M:org.apache.batik.gvt.text.GVTACIImpl:<init>(java.text.AttributedCharacterIterator) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.text.GVTACIImpl:<init>(java.text.AttributedCharacterIterator) (O)org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables(java.text.AttributedCharacterIterator)
M:org.apache.batik.gvt.text.GVTACIImpl:setString(java.lang.String) (O)java.text.StringCharacterIterator:<init>(java.lang.String)
M:org.apache.batik.gvt.text.GVTACIImpl:setString(java.lang.String) (O)org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables()
M:org.apache.batik.gvt.text.GVTACIImpl:setString(java.text.AttributedString) (M)java.text.AttributedString:getIterator()
M:org.apache.batik.gvt.text.GVTACIImpl:setString(java.text.AttributedString) (O)org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables(java.text.AttributedCharacterIterator)
M:org.apache.batik.gvt.text.GVTACIImpl:setAttributeArray(org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute,java.lang.Object[],int,int) (S)java.lang.Math:max(int,int)
M:org.apache.batik.gvt.text.GVTACIImpl:setAttributeArray(org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute,java.lang.Object[],int,int) (M)java.lang.String:length()
M:org.apache.batik.gvt.text.GVTACIImpl:setAttributeArray(org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute,java.lang.Object[],int,int) (S)java.lang.Math:min(int,int)
M:org.apache.batik.gvt.text.GVTACIImpl:setAttributeArray(org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute,java.lang.Object[],int,int) (S)java.lang.Math:min(int,int)
M:org.apache.batik.gvt.text.GVTACIImpl:setAttributeArray(org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute,java.lang.Object[],int,int) (M)java.util.ArrayList:get(int)
M:org.apache.batik.gvt.text.GVTACIImpl:setAttributeArray(org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute,java.lang.Object[],int,int) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:getAttribute(java.text.AttributedCharacterIterator$Attribute) (M)org.apache.batik.gvt.text.GVTACIImpl:getAttributes()
M:org.apache.batik.gvt.text.GVTACIImpl:getAttribute(java.text.AttributedCharacterIterator$Attribute) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:getAttributes() (M)java.util.ArrayList:get(int)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunLimit(java.text.AttributedCharacterIterator$Attribute) (M)org.apache.batik.gvt.text.GVTACIImpl:getAttributes()
M:org.apache.batik.gvt.text.GVTACIImpl:getRunLimit(java.text.AttributedCharacterIterator$Attribute) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunLimit(java.text.AttributedCharacterIterator$Attribute) (M)java.util.ArrayList:get(int)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunLimit(java.text.AttributedCharacterIterator$Attribute) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunLimit(java.text.AttributedCharacterIterator$Attribute) (M)java.util.ArrayList:get(int)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunLimit(java.text.AttributedCharacterIterator$Attribute) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunLimit(java.text.AttributedCharacterIterator$Attribute) (M)java.lang.Object:equals(java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunLimit(java.util.Set) (M)java.util.ArrayList:get(int)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunLimit(java.util.Set) (I)java.util.Set:equals(java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunStart(java.text.AttributedCharacterIterator$Attribute) (M)org.apache.batik.gvt.text.GVTACIImpl:getAttributes()
M:org.apache.batik.gvt.text.GVTACIImpl:getRunStart(java.text.AttributedCharacterIterator$Attribute) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunStart(java.text.AttributedCharacterIterator$Attribute) (M)java.util.ArrayList:get(int)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunStart(java.text.AttributedCharacterIterator$Attribute) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunStart(java.text.AttributedCharacterIterator$Attribute) (M)java.util.ArrayList:get(int)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunStart(java.text.AttributedCharacterIterator$Attribute) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunStart(java.text.AttributedCharacterIterator$Attribute) (M)java.lang.Object:equals(java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunStart(java.util.Set) (M)java.util.ArrayList:get(int)
M:org.apache.batik.gvt.text.GVTACIImpl:getRunStart(java.util.Set) (I)java.util.Set:equals(java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:clone() (O)org.apache.batik.gvt.text.GVTACIImpl:<init>(java.text.AttributedCharacterIterator)
M:org.apache.batik.gvt.text.GVTACIImpl:current() (I)java.text.CharacterIterator:current()
M:org.apache.batik.gvt.text.GVTACIImpl:first() (I)java.text.CharacterIterator:first()
M:org.apache.batik.gvt.text.GVTACIImpl:getBeginIndex() (I)java.text.CharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.GVTACIImpl:getEndIndex() (I)java.text.CharacterIterator:getEndIndex()
M:org.apache.batik.gvt.text.GVTACIImpl:getIndex() (I)java.text.CharacterIterator:getIndex()
M:org.apache.batik.gvt.text.GVTACIImpl:last() (I)java.text.CharacterIterator:last()
M:org.apache.batik.gvt.text.GVTACIImpl:next() (I)java.text.CharacterIterator:next()
M:org.apache.batik.gvt.text.GVTACIImpl:previous() (I)java.text.CharacterIterator:previous()
M:org.apache.batik.gvt.text.GVTACIImpl:setIndex(int) (I)java.text.CharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables() (O)java.util.HashSet:<init>()
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables() (M)java.lang.String:length()
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables() (O)java.util.ArrayList:<init>(int)
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables() (M)java.lang.String:length()
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables() (O)java.util.HashMap:<init>()
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables() (M)java.util.ArrayList:set(int,java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getAllAttributeKeys()
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getEndIndex()
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables(java.text.AttributedCharacterIterator) (O)java.util.ArrayList:<init>(int)
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getAttributes()
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables(java.text.AttributedCharacterIterator) (O)java.util.HashMap:<init>(java.util.Map)
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables(java.text.AttributedCharacterIterator) (M)java.util.ArrayList:set(int,java.lang.Object)
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.text.GVTACIImpl:buildAttributeTables(java.text.AttributedCharacterIterator) (O)java.lang.String:<init>(char[])
M:org.apache.batik.gvt.text.ArabicTextHandler:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (S)org.apache.batik.gvt.text.ArabicTextHandler:containsArabic(java.text.AttributedString)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.text.AttributedString:getIterator()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getEndIndex()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicCharTransparent(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (S)org.apache.batik.gvt.text.ArabicTextHandler:hasSubstitute(char,char)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (O)java.lang.StringBuffer:<init>(int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.lang.StringBuffer:append(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.lang.StringBuffer:toString()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (O)java.text.AttributedString:<init>(java.lang.String)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getAttributes()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.text.AttributedString:addAttributes(java.util.Map,int,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.lang.Float:isNaN()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (S)java.lang.Float:valueOf(float)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.lang.Float:isNaN()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (S)java.lang.Float:valueOf(float)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.text.AttributedString:getIterator()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.text.AttributedString:getIterator()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getRunStart(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getRunLimit(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicCharTransparent(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicCharShapesRight(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicCharShapesLeft(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.lang.Integer:intValue()
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicCharShaped(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicCharShaped(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:assignArabicForms(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:containsArabic(java.text.AttributedString) (M)java.text.AttributedString:getIterator()
M:org.apache.batik.gvt.text.ArabicTextHandler:containsArabic(java.text.AttributedString) (S)org.apache.batik.gvt.text.ArabicTextHandler:containsArabic(java.text.AttributedCharacterIterator)
M:org.apache.batik.gvt.text.ArabicTextHandler:containsArabic(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.gvt.text.ArabicTextHandler:containsArabic(java.text.AttributedCharacterIterator) (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicChar(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:containsArabic(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.text.ArabicTextHandler:arabicCharShapesRight(char) (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicCharShapesDuel(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:arabicCharShapesLeft(char) (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicCharShapesDuel(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:arabicCharShaped(char) (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicCharShapesRight(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getEndIndex()
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (O)java.lang.StringBuffer:<init>(int)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicChar(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.StringBuffer:append(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (S)org.apache.batik.gvt.text.ArabicTextHandler:charStartsLigature(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.Integer:equals(java.lang.Object)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.Integer:equals(java.lang.Object)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.Integer:intValue()
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (S)org.apache.batik.gvt.text.ArabicTextHandler:getSubstituteChar(char,char,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.StringBuffer:append(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.Integer:equals(java.lang.Object)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.Integer:intValue()
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (S)org.apache.batik.gvt.text.ArabicTextHandler:getSubstituteChar(char,char,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.StringBuffer:append(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.Integer:equals(java.lang.Object)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.Integer:equals(java.lang.Object)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.Integer:intValue()
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (S)org.apache.batik.gvt.text.ArabicTextHandler:getSubstituteChar(char,char,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.StringBuffer:append(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.Integer:intValue()
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.Integer:intValue()
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (S)org.apache.batik.gvt.text.ArabicTextHandler:getSubstituteChar(char,int)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.StringBuffer:append(char)
M:org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator) (M)java.lang.StringBuffer:toString()
M:org.apache.batik.gvt.text.ArabicTextHandler:getNumChars(char) (S)org.apache.batik.gvt.text.ArabicTextHandler:isLigature(char)
M:org.apache.batik.gvt.StrokeShapePainter:<init>(java.awt.Shape) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.StrokeShapePainter:<init>(java.awt.Shape) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.StrokeShapePainter:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:setPaint(java.awt.Paint)
M:org.apache.batik.gvt.StrokeShapePainter:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:setStroke(java.awt.Stroke)
M:org.apache.batik.gvt.StrokeShapePainter:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:draw(java.awt.Shape)
M:org.apache.batik.gvt.StrokeShapePainter:getPaintedArea() (I)java.awt.Stroke:createStrokedShape(java.awt.Shape)
M:org.apache.batik.gvt.StrokeShapePainter:getPaintedBounds2D() (M)org.apache.batik.gvt.StrokeShapePainter:getPaintedArea()
M:org.apache.batik.gvt.StrokeShapePainter:getPaintedBounds2D() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.StrokeShapePainter:inPaintedArea(java.awt.geom.Point2D) (M)org.apache.batik.gvt.StrokeShapePainter:getPaintedArea()
M:org.apache.batik.gvt.StrokeShapePainter:inPaintedArea(java.awt.geom.Point2D) (I)java.awt.Shape:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.StrokeShapePainter:getSensitiveArea() (I)java.awt.Stroke:createStrokedShape(java.awt.Shape)
M:org.apache.batik.gvt.StrokeShapePainter:getSensitiveBounds2D() (M)org.apache.batik.gvt.StrokeShapePainter:getSensitiveArea()
M:org.apache.batik.gvt.StrokeShapePainter:getSensitiveBounds2D() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.StrokeShapePainter:inSensitiveArea(java.awt.geom.Point2D) (M)org.apache.batik.gvt.StrokeShapePainter:getSensitiveArea()
M:org.apache.batik.gvt.StrokeShapePainter:inSensitiveArea(java.awt.geom.Point2D) (I)java.awt.Shape:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.StrokeShapePainter:setShape(java.awt.Shape) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.PatternPaint$PatternPaintContextWrapper:<init>(org.apache.batik.gvt.PatternPaintContext,int,int) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.PatternPaint$PatternPaintContextWrapper:getColorModel() (M)org.apache.batik.gvt.PatternPaintContext:getColorModel()
M:org.apache.batik.gvt.PatternPaint$PatternPaintContextWrapper:getRaster(int,int,int,int) (M)org.apache.batik.gvt.PatternPaintContext:getRaster(int,int,int,int)
M:org.apache.batik.gvt.font.AWTFontFamily:<init>(org.apache.batik.gvt.font.GVTFontFace) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.AWTFontFamily:<init>(java.lang.String) (O)org.apache.batik.gvt.font.GVTFontFace:<init>(java.lang.String)
M:org.apache.batik.gvt.font.AWTFontFamily:<init>(java.lang.String) (O)org.apache.batik.gvt.font.AWTFontFamily:<init>(org.apache.batik.gvt.font.GVTFontFace)
M:org.apache.batik.gvt.font.AWTFontFamily:<init>(org.apache.batik.gvt.font.GVTFontFace,java.awt.Font) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.AWTFontFamily:getFamilyName() (M)org.apache.batik.gvt.font.GVTFontFace:getFamilyName()
M:org.apache.batik.gvt.font.AWTFontFamily:deriveFont(float,java.text.AttributedCharacterIterator) (O)org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font,double)
M:org.apache.batik.gvt.font.AWTFontFamily:deriveFont(float,java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getAttributes()
M:org.apache.batik.gvt.font.AWTFontFamily:deriveFont(float,java.text.AttributedCharacterIterator) (M)org.apache.batik.gvt.font.AWTFontFamily:deriveFont(float,java.util.Map)
M:org.apache.batik.gvt.font.AWTFontFamily:deriveFont(float,java.util.Map) (O)org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font,double)
M:org.apache.batik.gvt.font.AWTFontFamily:deriveFont(float,java.util.Map) (O)java.util.HashMap:<init>(java.util.Map)
M:org.apache.batik.gvt.font.AWTFontFamily:deriveFont(float,java.util.Map) (S)java.lang.Float:valueOf(float)
M:org.apache.batik.gvt.font.AWTFontFamily:deriveFont(float,java.util.Map) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.font.AWTFontFamily:deriveFont(float,java.util.Map) (M)org.apache.batik.gvt.font.GVTFontFace:getFamilyName()
M:org.apache.batik.gvt.font.AWTFontFamily:deriveFont(float,java.util.Map) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.font.AWTFontFamily:deriveFont(float,java.util.Map) (I)java.util.Map:remove(java.lang.Object)
M:org.apache.batik.gvt.font.AWTFontFamily:deriveFont(float,java.util.Map) (O)org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map)
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:<init>() (O)java.lang.ref.ReferenceQueue:<init>()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:<init>(int) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:<init>(int) (O)java.lang.ref.ReferenceQueue:<init>()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:get(char) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache:hashCode(char)
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:get(char) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry:match(char)
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:get(char) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry:get()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:put(char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache:removeClearedEntries()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:put(char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache:hashCode(char)
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:put(char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry:match(char)
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:put(char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry:get()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:put(char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value) (O)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry:<init>(org.apache.batik.gvt.font.AWTGlyphGeometryCache,int,char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry)
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:put(char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry:match(char)
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:put(char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry:get()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:put(char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value) (O)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry:<init>(org.apache.batik.gvt.font.AWTGlyphGeometryCache,int,char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry)
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:put(char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache:rehash()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:put(char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value) (O)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry:<init>(org.apache.batik.gvt.font.AWTGlyphGeometryCache,int,char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry)
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:clear() (O)java.lang.ref.ReferenceQueue:<init>()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache:removeClearedEntries() (M)java.lang.ref.ReferenceQueue:poll()
M:org.apache.batik.gvt.font.KerningTable:<init>(org.apache.batik.gvt.font.Kern[]) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.KerningTable:getKerningValue(int,int,java.lang.String,java.lang.String) (M)org.apache.batik.gvt.font.Kern:matchesFirstGlyph(int,java.lang.String)
M:org.apache.batik.gvt.font.KerningTable:getKerningValue(int,int,java.lang.String,java.lang.String) (M)org.apache.batik.gvt.font.Kern:matchesSecondGlyph(int,java.lang.String)
M:org.apache.batik.gvt.font.KerningTable:getKerningValue(int,int,java.lang.String,java.lang.String) (M)org.apache.batik.gvt.font.Kern:getAdjustValue()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:<init>(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.Glyph[],java.awt.font.FontRenderContext) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:<init>(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.Glyph[],java.awt.font.FontRenderContext) (M)org.apache.batik.gvt.font.Glyph:getPosition()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:<init>(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.Glyph[],java.awt.font.FontRenderContext) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:<init>(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.Glyph[],java.awt.font.FontRenderContext) (M)org.apache.batik.gvt.font.Glyph:getHorizAdvX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:<init>(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.Glyph[],java.awt.font.FontRenderContext) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:<init>(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.Glyph[],java.awt.font.FontRenderContext) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCode(int) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCode(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCode(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCode(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCode(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCode(int) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCode(int) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCode(int) (M)org.apache.batik.gvt.font.Glyph:getGlyphCode()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)org.apache.batik.gvt.font.Glyph:getGlyphCode()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphJustificationInfo(int) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphJustificationInfo(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphJustificationInfo(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphJustificationInfo(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphJustificationInfo(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphJustificationInfo(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphJustificationInfo(int) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphJustificationInfo(int) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphLogicalBounds(int) (O)org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (I)org.apache.batik.gvt.font.GVTFont:getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.GVTLineMetrics:getAscent()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.GVTLineMetrics:getDescent()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.GVTGlyphMetrics:getBounds2D()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphTransform(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.GVTGlyphMetrics:getHorizontalAdvance()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:isEmpty()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMaxX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMaxY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPosition(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (S)java.awt.geom.AffineTransform:getTranslateInstance(double,double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Point2D$Double:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Point2D$Double:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Point2D$Double:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.AffineTransform:transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.AffineTransform:transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.AffineTransform:transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (S)java.lang.Math:abs(double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (S)java.lang.Math:abs(double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (S)java.lang.Math:abs(double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (S)java.lang.Math:abs(double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.GeneralPath:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.GeneralPath:append(java.awt.Shape,boolean)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.GeneralPath:getBounds2D()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:setRect(double,double,double,double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:setRect(double,double,double,double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:computeGlyphLogicalBounds() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (M)java.lang.StringBuilder:append(char)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (M)org.apache.batik.gvt.font.Glyph:getGlyphCode()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (M)org.apache.batik.gvt.font.Glyph:getGlyphCode()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (I)org.apache.batik.gvt.font.GVTFont:getHKern(int,int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (M)org.apache.batik.gvt.font.Glyph:getGlyphCode()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (M)org.apache.batik.gvt.font.Glyph:getGlyphCode()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (I)org.apache.batik.gvt.font.GVTFont:getVKern(int,int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (M)org.apache.batik.gvt.font.Glyph:getGlyphMetrics(float,float)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphMetrics(int) (M)org.apache.batik.gvt.font.Glyph:getGlyphMetrics()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphOutline(int) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphOutline(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphOutline(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphOutline(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphOutline(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphOutline(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphOutline(int) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphOutline(int) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphOutline(int) (M)org.apache.batik.gvt.font.Glyph:getOutline()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCellBounds(int) (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphLogicalBounds(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphCellBounds(int) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPosition(int) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPosition(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPosition(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPosition(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPosition(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPosition(int) (M)java.lang.StringBuilder:append(char)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPosition(int) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPosition(int) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPosition(int) (M)org.apache.batik.gvt.font.Glyph:getPosition()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:append(char)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)org.apache.batik.gvt.font.Glyph:getPosition()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphTransform(int) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphTransform(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphTransform(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphTransform(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphTransform(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphTransform(int) (M)java.lang.StringBuilder:append(char)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphTransform(int) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphTransform(int) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphTransform(int) (M)org.apache.batik.gvt.font.Glyph:getTransform()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphVisualBounds(int) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphVisualBounds(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphVisualBounds(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphVisualBounds(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphVisualBounds(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphVisualBounds(int) (M)java.lang.StringBuilder:append(char)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphVisualBounds(int) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphVisualBounds(int) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphVisualBounds(int) (M)org.apache.batik.gvt.font.Glyph:getOutline()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (S)org.apache.batik.gvt.text.TextPaintInfo:equivilent(org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.gvt.text.TextPaintInfo)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (M)org.apache.batik.gvt.font.Glyph:getBounds2D()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (O)java.awt.geom.Rectangle2D$Float:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (O)org.apache.batik.gvt.text.TextPaintInfo:<init>(org.apache.batik.gvt.text.TextPaintInfo)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getLogicalBounds() (O)java.awt.geom.GeneralPath:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getLogicalBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getGlyphLogicalBounds(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getLogicalBounds() (M)java.awt.geom.GeneralPath:append(java.awt.Shape,boolean)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getLogicalBounds() (M)java.awt.geom.GeneralPath:getBounds2D()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getOutline() (O)java.awt.geom.GeneralPath:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getOutline() (M)org.apache.batik.gvt.font.Glyph:getOutline()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getOutline() (M)java.awt.geom.GeneralPath:append(java.awt.Shape,boolean)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getOutline(float,float) (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getOutline()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getOutline(float,float) (S)java.awt.geom.AffineTransform:getTranslateInstance(double,double)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getOutline(float,float) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGeometricBounds() (M)org.apache.batik.gvt.font.SVGGVTGlyphVector:getOutline()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getGeometricBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)org.apache.batik.gvt.font.Glyph:setTransform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)org.apache.batik.gvt.font.Glyph:getUnicode()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)java.lang.String:length()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)java.lang.String:charAt(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicCharTransparent(char)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)org.apache.batik.gvt.font.Glyph:getUnicode()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)java.lang.String:length()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)java.lang.String:charAt(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (S)org.apache.batik.gvt.text.ArabicTextHandler:arabicCharTransparent(char)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)org.apache.batik.gvt.font.Glyph:getHorizAdvX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)org.apache.batik.gvt.font.Glyph:setTransform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)org.apache.batik.gvt.font.Glyph:getHorizAdvX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)org.apache.batik.gvt.font.Glyph:setPosition(java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)org.apache.batik.gvt.font.Glyph:setPosition(java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (M)org.apache.batik.gvt.font.Glyph:getHorizAdvX()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:performDefaultLayout() (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (M)java.awt.geom.Point2D:clone()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (M)java.lang.StringBuilder:append(char)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (M)org.apache.batik.gvt.font.Glyph:setPosition(java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform) (M)java.lang.StringBuilder:append(char)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.font.Glyph:setTransform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getCharacterCount(int,int) (M)org.apache.batik.gvt.font.Glyph:getGlyphCode()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getCharacterCount(int,int) (M)org.apache.batik.gvt.font.Glyph:getUnicode()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:getCharacterCount(int,int) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.font.SVGGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D)
M:org.apache.batik.gvt.font.GVTFontFace:<init>(java.lang.String,float,java.lang.String,java.lang.String,java.lang.String,java.lang.String,float,java.lang.String,float,float,float,float,float,float,float,float) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.GVTFontFace:<init>(java.lang.String) (O)org.apache.batik.gvt.font.GVTFontFace:<init>(java.lang.String,float,java.lang.String,java.lang.String,java.lang.String,java.lang.String,float,java.lang.String,float,float,float,float,float,float,float,float)
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:toLowerCase()
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:toLowerCase()
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:indexOf(java.lang.String)
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:charAt(int)
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:charAt(int)
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:charAt(int)
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.GVTFontFace:hasFamilyName(java.lang.String) (M)java.lang.String:charAt(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:<init>(java.util.List) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.MultiGlyphVector:<init>(java.util.List) (I)java.util.List:size()
M:org.apache.batik.gvt.font.MultiGlyphVector:<init>(java.util.List) (I)java.util.List:iterator()
M:org.apache.batik.gvt.font.MultiGlyphVector:<init>(java.util.List) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.font.MultiGlyphVector:<init>(java.util.List) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.font.MultiGlyphVector:<init>(java.util.List) (I)org.apache.batik.gvt.font.GVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.MultiGlyphVector:getFont() (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.font.MultiGlyphVector:getFontRenderContext() (I)org.apache.batik.gvt.font.GVTGlyphVector:getFontRenderContext()
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphCode(int) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphCode(int) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphCode(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphJustificationInfo(int) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphJustificationInfo(int) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphJustificationInfo(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphLogicalBounds(int) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphLogicalBounds(int) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphLogicalBounds(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphMetrics(int) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphMetrics(int) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphMetrics(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphOutline(int) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphOutline(int) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphOutline(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphCellBounds(int) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGlyphLogicalBounds(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphCellBounds(int) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphPosition(int) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphPosition(int) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphPosition(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphTransform(int) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphTransform(int) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphTransform(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphVisualBounds(int) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphVisualBounds(int) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphVisualBounds(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.MultiGlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.MultiGlyphVector:setGlyphVisible(int,boolean) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:setGlyphVisible(int,boolean) (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphVisible(int,boolean)
M:org.apache.batik.gvt.font.MultiGlyphVector:isGlyphVisible(int) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:isGlyphVisible(int) (I)org.apache.batik.gvt.font.GVTGlyphVector:isGlyphVisible(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphCodes(int,int,int[]) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphCodes(int,int,int[]) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphCodes(int,int,int[])
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphCodes(int,int,int[]) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphCodes(int,int,int[])
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphCodes(int,int,int[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphPositions(int,int,float[]) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphPositions(int,int,float[]) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphPositions(int,int,float[])
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphPositions(int,int,float[]) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphPositions(int,int,float[])
M:org.apache.batik.gvt.font.MultiGlyphVector:getGlyphPositions(int,int,float[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getLogicalBounds() (I)org.apache.batik.gvt.font.GVTGlyphVector:getLogicalBounds()
M:org.apache.batik.gvt.font.MultiGlyphVector:getLogicalBounds() (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.font.MultiGlyphVector:getOutline() (I)org.apache.batik.gvt.font.GVTGlyphVector:getOutline()
M:org.apache.batik.gvt.font.MultiGlyphVector:getOutline() (O)java.awt.geom.GeneralPath:<init>(java.awt.Shape)
M:org.apache.batik.gvt.font.MultiGlyphVector:getOutline() (M)java.awt.geom.GeneralPath:append(java.awt.Shape,boolean)
M:org.apache.batik.gvt.font.MultiGlyphVector:getOutline(float,float) (M)org.apache.batik.gvt.font.MultiGlyphVector:getOutline()
M:org.apache.batik.gvt.font.MultiGlyphVector:getOutline(float,float) (S)java.awt.geom.AffineTransform:getTranslateInstance(double,double)
M:org.apache.batik.gvt.font.MultiGlyphVector:getOutline(float,float) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.MultiGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.font.MultiGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (I)org.apache.batik.gvt.font.GVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.MultiGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (I)org.apache.batik.gvt.font.GVTGlyphVector:getCharacterCount(int,int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (O)org.apache.batik.gvt.text.AttributedCharacterSpanIterator:<init>(java.text.AttributedCharacterIterator,int,int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (I)org.apache.batik.gvt.font.GVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator)
M:org.apache.batik.gvt.font.MultiGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.font.MultiGlyphVector:getGeometricBounds() (I)org.apache.batik.gvt.font.GVTGlyphVector:getGeometricBounds()
M:org.apache.batik.gvt.font.MultiGlyphVector:getGeometricBounds() (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.font.MultiGlyphVector:performDefaultLayout() (I)org.apache.batik.gvt.font.GVTGlyphVector:performDefaultLayout()
M:org.apache.batik.gvt.font.MultiGlyphVector:getCharacterCount(int,int) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getCharacterCount(int,int) (M)org.apache.batik.gvt.font.MultiGlyphVector:getGVIdx(int)
M:org.apache.batik.gvt.font.MultiGlyphVector:getCharacterCount(int,int) (I)org.apache.batik.gvt.font.GVTGlyphVector:getCharacterCount(int,int)
M:org.apache.batik.gvt.font.MultiGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.font.MultiGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (I)org.apache.batik.gvt.font.GVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.MultiGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (I)org.apache.batik.gvt.font.GVTGlyphVector:getCharacterCount(int,int)
M:org.apache.batik.gvt.font.MultiGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (O)org.apache.batik.gvt.text.AttributedCharacterSpanIterator:<init>(java.text.AttributedCharacterIterator,int,int)
M:org.apache.batik.gvt.font.MultiGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (I)org.apache.batik.gvt.font.GVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator)
M:org.apache.batik.gvt.font.Kern:<init>(int[],int[],org.apache.batik.gvt.font.UnicodeRange[],org.apache.batik.gvt.font.UnicodeRange[],float) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.Kern:<init>(int[],int[],org.apache.batik.gvt.font.UnicodeRange[],org.apache.batik.gvt.font.UnicodeRange[],float) (S)java.util.Arrays:sort(int[])
M:org.apache.batik.gvt.font.Kern:<init>(int[],int[],org.apache.batik.gvt.font.UnicodeRange[],org.apache.batik.gvt.font.UnicodeRange[],float) (S)java.util.Arrays:sort(int[])
M:org.apache.batik.gvt.font.Kern:matchesFirstGlyph(int,java.lang.String) (S)java.util.Arrays:binarySearch(int[],int)
M:org.apache.batik.gvt.font.Kern:matchesFirstGlyph(int,java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.Kern:matchesFirstGlyph(int,java.lang.String) (M)java.lang.String:charAt(int)
M:org.apache.batik.gvt.font.Kern:matchesFirstGlyph(int,java.lang.String) (M)org.apache.batik.gvt.font.UnicodeRange:contains(int)
M:org.apache.batik.gvt.font.Kern:matchesFirstGlyph(int,char) (S)java.util.Arrays:binarySearch(int[],int)
M:org.apache.batik.gvt.font.Kern:matchesFirstGlyph(int,char) (M)org.apache.batik.gvt.font.UnicodeRange:contains(int)
M:org.apache.batik.gvt.font.Kern:matchesSecondGlyph(int,java.lang.String) (S)java.util.Arrays:binarySearch(int[],int)
M:org.apache.batik.gvt.font.Kern:matchesSecondGlyph(int,java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.Kern:matchesSecondGlyph(int,java.lang.String) (M)java.lang.String:charAt(int)
M:org.apache.batik.gvt.font.Kern:matchesSecondGlyph(int,java.lang.String) (M)org.apache.batik.gvt.font.UnicodeRange:contains(int)
M:org.apache.batik.gvt.font.Kern:matchesSecondGlyph(int,char) (S)java.util.Arrays:binarySearch(int[],int)
M:org.apache.batik.gvt.font.Kern:matchesSecondGlyph(int,char) (M)org.apache.batik.gvt.font.UnicodeRange:contains(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:<init>(java.awt.font.GlyphVector,org.apache.batik.gvt.font.AWTGVTFont,double,java.text.CharacterIterator) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:<init>(java.awt.font.GlyphVector,org.apache.batik.gvt.font.AWTGVTFont,double,java.text.CharacterIterator) (M)java.awt.font.GlyphVector:getFontRenderContext()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:<init>(java.awt.font.GlyphVector,org.apache.batik.gvt.font.AWTGVTFont,double,java.text.CharacterIterator) (M)org.apache.batik.gvt.font.AWTGVTFont:getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:<init>(java.awt.font.GlyphVector,org.apache.batik.gvt.font.AWTGVTFont,double,java.text.CharacterIterator) (M)org.apache.batik.gvt.font.GVTLineMetrics:getAscent()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:<init>(java.awt.font.GlyphVector,org.apache.batik.gvt.font.AWTGVTFont,double,java.text.CharacterIterator) (M)org.apache.batik.gvt.font.GVTLineMetrics:getDescent()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:<init>(java.awt.font.GlyphVector,org.apache.batik.gvt.font.AWTGVTFont,double,java.text.CharacterIterator) (M)java.awt.font.GlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getFontRenderContext() (M)java.awt.font.GlyphVector:getFontRenderContext()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphCode(int) (M)java.awt.font.GlyphVector:getGlyphCode(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphCodes(int,int,int[]) (M)java.awt.font.GlyphVector:getGlyphCodes(int,int,int[])
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphJustificationInfo(int) (M)java.awt.font.GlyphVector:getGlyphJustificationInfo(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (S)org.apache.batik.gvt.text.TextPaintInfo:equivilent(org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.gvt.text.TextPaintInfo)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (O)org.apache.batik.gvt.text.TextPaintInfo:<init>(org.apache.batik.gvt.text.TextPaintInfo)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getOutline()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getOutline()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (I)java.awt.Stroke:createStrokedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getBounds2D(java.text.AttributedCharacterIterator) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getLogicalBounds() (O)org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphLogicalBounds(int) (O)org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphTransform(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.GVTGlyphMetrics:getHorizontalAdvance()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.GVTGlyphMetrics:getVerticalAdvance()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:isEmpty()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMaxX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMaxY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphPosition(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (S)java.awt.geom.AffineTransform:getTranslateInstance(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.AffineTransform:scale(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Point2D$Double:<init>()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Point2D$Double:<init>()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Point2D$Double:<init>()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.AffineTransform:transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.AffineTransform:transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.AffineTransform:transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (S)java.lang.Math:abs(double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (S)java.lang.Math:abs(double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (S)java.lang.Math:abs(double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (S)java.lang.Math:abs(double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.GeneralPath:<init>()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.GeneralPath:append(java.awt.Shape,boolean)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.GeneralPath:getBounds2D()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:setRect(double,double,double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:setRect(double,double,double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getMinX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:computeGlyphLogicalBounds() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (I)java.text.CharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (I)java.text.CharacterIterator:setIndex(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (I)java.text.CharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (I)java.text.CharacterIterator:setIndex(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (S)org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value:getBounds2D()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphMetrics(int) (O)org.apache.batik.gvt.font.GVTGlyphMetrics:<init>(float,float,java.awt.geom.Rectangle2D,byte)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (I)java.text.CharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (I)java.text.CharacterIterator:setIndex(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (I)java.text.CharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (I)java.text.CharacterIterator:setIndex(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (S)org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value:getOutline()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphPosition(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphPosition(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (S)java.awt.geom.AffineTransform:getTranslateInstance(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphTransform(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (M)java.awt.geom.AffineTransform:scale(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphCellBounds(int) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphLogicalBounds(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphCellBounds(int) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphPosition(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphPositions(int,int,float[]) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (I)java.text.CharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (I)java.text.CharacterIterator:setIndex(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (I)java.text.CharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (I)java.text.CharacterIterator:setIndex(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (S)org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value:getOutlineBounds2D()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphPosition(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphPosition(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (S)java.awt.geom.AffineTransform:getTranslateInstance(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphTransform(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (M)java.awt.geom.AffineTransform:scale(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphVisualBounds(int) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs() (M)java.awt.font.GlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getOutline() (O)java.awt.geom.GeneralPath:<init>()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getOutline() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getOutline() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getGlyphOutline(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getOutline() (M)java.awt.geom.GeneralPath:append(java.awt.Shape,boolean)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getOutline(float,float) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getOutline()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getOutline(float,float) (S)java.awt.geom.AffineTransform:getTranslateInstance(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getOutline(float,float) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGeometricBounds() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getOutline()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getGeometricBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (M)java.awt.font.GlyphVector:performDefaultLayout()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (M)java.awt.font.GlyphVector:getGlyphPosition(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (I)java.text.CharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (I)java.text.CharacterIterator:setIndex(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:performDefaultLayout() (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getCharacterCount(int,int) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getCharacterCount(int,int) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getCharacterCount(int,int) (I)java.text.CharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getCharacterCount(int,int) (I)java.text.CharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getCharacterCount(int,int) (I)java.text.CharacterIterator:setIndex(int)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getCharacterCount(int,int) (I)java.text.CharacterIterator:getIndex()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getCharacterCount(int,int) (S)org.apache.batik.gvt.text.ArabicTextHandler:getNumChars(char)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:getCharacterCount(int,int) (I)java.text.CharacterIterator:next()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getNumGlyphs()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.Graphics2D:getRenderingHint(java.awt.RenderingHints$Key)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.Graphics2D:getRenderingHint(java.awt.RenderingHints$Key)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.Graphics2D:getTransform()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.geom.AffineTransform:getType()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.geom.AffineTransform:getType()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.geom.AffineTransform:getMatrix(double[])
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (O)java.awt.geom.AffineTransform:<init>(double[])
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.font.GlyphVector:setGlyphPosition(int,java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.font.GlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.Graphics2D:scale(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.Graphics2D:setPaint(java.awt.Paint)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.Graphics2D:drawGlyphVector(java.awt.font.GlyphVector,float,float)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.Graphics2D:scale(double,double)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.font.GlyphVector:setGlyphPosition(int,java.awt.geom.Point2D)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.font.GlyphVector:setGlyphTransform(int,java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)org.apache.batik.gvt.font.AWTGVTGlyphVector:getOutline()
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.Graphics2D:setPaint(java.awt.Paint)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.Graphics2D:fill(java.awt.Shape)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.Graphics2D:setStroke(java.awt.Stroke)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.Graphics2D:setPaint(java.awt.Paint)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:draw(java.awt.Graphics2D,java.text.AttributedCharacterIterator) (M)java.awt.Graphics2D:draw(java.awt.Shape)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:<clinit>() (S)java.lang.System:getProperty(java.lang.String)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:<clinit>() (M)java.lang.String:compareTo(java.lang.String)
M:org.apache.batik.gvt.font.AWTGVTGlyphVector:<clinit>() (M)java.lang.String:compareTo(java.lang.String)
M:org.apache.batik.gvt.font.GVTGlyphMetrics:<init>(java.awt.font.GlyphMetrics,float) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.GVTGlyphMetrics:<init>(float,float,java.awt.geom.Rectangle2D,byte) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.GVTGlyphMetrics:<init>(float,float,java.awt.geom.Rectangle2D,byte) (O)java.awt.font.GlyphMetrics:<init>(float,java.awt.geom.Rectangle2D,byte)
M:org.apache.batik.gvt.font.GVTGlyphMetrics:getHorizontalAdvance() (M)java.awt.font.GlyphMetrics:getAdvance()
M:org.apache.batik.gvt.font.GVTGlyphMetrics:getBounds2D() (M)java.awt.font.GlyphMetrics:getBounds2D()
M:org.apache.batik.gvt.font.GVTGlyphMetrics:getLSB() (M)java.awt.font.GlyphMetrics:getLSB()
M:org.apache.batik.gvt.font.GVTGlyphMetrics:getRSB() (M)java.awt.font.GlyphMetrics:getRSB()
M:org.apache.batik.gvt.font.GVTGlyphMetrics:getType() (M)java.awt.font.GlyphMetrics:getType()
M:org.apache.batik.gvt.font.GVTGlyphMetrics:isCombining() (M)java.awt.font.GlyphMetrics:isCombining()
M:org.apache.batik.gvt.font.GVTGlyphMetrics:isComponent() (M)java.awt.font.GlyphMetrics:isComponent()
M:org.apache.batik.gvt.font.GVTGlyphMetrics:isLigature() (M)java.awt.font.GlyphMetrics:isLigature()
M:org.apache.batik.gvt.font.GVTGlyphMetrics:isStandard() (M)java.awt.font.GlyphMetrics:isStandard()
M:org.apache.batik.gvt.font.GVTGlyphMetrics:isWhitespace() (M)java.awt.font.GlyphMetrics:isWhitespace()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics) (M)java.awt.font.LineMetrics:getAscent()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics) (M)java.awt.font.LineMetrics:getBaselineIndex()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics) (M)java.awt.font.LineMetrics:getBaselineOffsets()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics) (M)java.awt.font.LineMetrics:getDescent()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics) (M)java.awt.font.LineMetrics:getHeight()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics) (M)java.awt.font.LineMetrics:getLeading()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics) (M)java.awt.font.LineMetrics:getNumChars()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics) (M)java.awt.font.LineMetrics:getStrikethroughOffset()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics) (M)java.awt.font.LineMetrics:getStrikethroughThickness()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics) (M)java.awt.font.LineMetrics:getUnderlineOffset()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics) (M)java.awt.font.LineMetrics:getUnderlineThickness()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float) (M)java.awt.font.LineMetrics:getAscent()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float) (M)java.awt.font.LineMetrics:getBaselineIndex()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float) (M)java.awt.font.LineMetrics:getBaselineOffsets()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float) (M)java.awt.font.LineMetrics:getDescent()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float) (M)java.awt.font.LineMetrics:getHeight()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float) (M)java.awt.font.LineMetrics:getLeading()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float) (M)java.awt.font.LineMetrics:getNumChars()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float) (M)java.awt.font.LineMetrics:getStrikethroughOffset()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float) (M)java.awt.font.LineMetrics:getStrikethroughThickness()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float) (M)java.awt.font.LineMetrics:getUnderlineOffset()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float) (M)java.awt.font.LineMetrics:getUnderlineThickness()
M:org.apache.batik.gvt.font.GVTLineMetrics:<init>(float,int,float[],float,float,float,int,float,float,float,float,float,float) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value:<init>(java.awt.Shape,java.awt.geom.Rectangle2D) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value:<init>(java.awt.Shape,java.awt.geom.Rectangle2D) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.UnresolvedFontFamily:<init>(org.apache.batik.gvt.font.GVTFontFace) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.UnresolvedFontFamily:<init>(java.lang.String) (O)org.apache.batik.gvt.font.GVTFontFace:<init>(java.lang.String)
M:org.apache.batik.gvt.font.UnresolvedFontFamily:<init>(java.lang.String) (O)org.apache.batik.gvt.font.UnresolvedFontFamily:<init>(org.apache.batik.gvt.font.GVTFontFace)
M:org.apache.batik.gvt.font.UnresolvedFontFamily:getFamilyName() (M)org.apache.batik.gvt.font.GVTFontFace:getFamilyName()
M:org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry:<init>(org.apache.batik.gvt.font.AWTGlyphGeometryCache,int,char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Entry) (O)java.lang.ref.SoftReference:<init>(java.lang.Object,java.lang.ref.ReferenceQueue)
M:org.apache.batik.gvt.font.UnicodeRange:<init>(java.lang.String) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.UnicodeRange:<init>(java.lang.String) (M)java.lang.String:startsWith(java.lang.String)
M:org.apache.batik.gvt.font.UnicodeRange:<init>(java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.UnicodeRange:<init>(java.lang.String) (M)java.lang.String:substring(int)
M:org.apache.batik.gvt.font.UnicodeRange:<init>(java.lang.String) (M)java.lang.String:indexOf(int)
M:org.apache.batik.gvt.font.UnicodeRange:<init>(java.lang.String) (M)java.lang.String:substring(int,int)
M:org.apache.batik.gvt.font.UnicodeRange:<init>(java.lang.String) (M)java.lang.String:substring(int)
M:org.apache.batik.gvt.font.UnicodeRange:<init>(java.lang.String) (M)java.lang.String:indexOf(int)
M:org.apache.batik.gvt.font.UnicodeRange:<init>(java.lang.String) (M)java.lang.String:replace(char,char)
M:org.apache.batik.gvt.font.UnicodeRange:<init>(java.lang.String) (M)java.lang.String:replace(char,char)
M:org.apache.batik.gvt.font.UnicodeRange:<init>(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String,int)
M:org.apache.batik.gvt.font.UnicodeRange:<init>(java.lang.String) (S)java.lang.Integer:parseInt(java.lang.String,int)
M:org.apache.batik.gvt.font.UnicodeRange:contains(java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.font.UnicodeRange:contains(java.lang.String) (M)java.lang.String:charAt(int)
M:org.apache.batik.gvt.font.UnicodeRange:contains(java.lang.String) (M)org.apache.batik.gvt.font.UnicodeRange:contains(int)
M:org.apache.batik.gvt.font.Glyph:<init>(java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.awt.geom.Point2D,java.awt.geom.Point2D,float,float,int,org.apache.batik.gvt.text.TextPaintInfo,java.awt.Shape,org.apache.batik.gvt.GraphicsNode) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.Glyph:<init>(java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.awt.geom.Point2D,java.awt.geom.Point2D,float,float,int,org.apache.batik.gvt.text.TextPaintInfo,java.awt.Shape,org.apache.batik.gvt.GraphicsNode) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.font.Glyph:<init>(java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.awt.geom.Point2D,java.awt.geom.Point2D,float,float,int,org.apache.batik.gvt.text.TextPaintInfo,java.awt.Shape,org.apache.batik.gvt.GraphicsNode) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.font.Glyph:<init>(java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.awt.geom.Point2D,java.awt.geom.Point2D,float,float,int,org.apache.batik.gvt.text.TextPaintInfo,java.awt.Shape,org.apache.batik.gvt.GraphicsNode) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.font.Glyph:<init>(java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.awt.geom.Point2D,java.awt.geom.Point2D,float,float,int,org.apache.batik.gvt.text.TextPaintInfo,java.awt.Shape,org.apache.batik.gvt.GraphicsNode) (O)java.util.Vector:<init>(java.util.Collection)
M:org.apache.batik.gvt.font.Glyph:<init>(java.lang.String,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.awt.geom.Point2D,java.awt.geom.Point2D,float,float,int,org.apache.batik.gvt.text.TextPaintInfo,java.awt.Shape,org.apache.batik.gvt.GraphicsNode) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.gvt.font.Glyph:setPosition(java.awt.geom.Point2D) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.Glyph:setPosition(java.awt.geom.Point2D) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics() (M)org.apache.batik.gvt.font.Glyph:getGeometryBounds()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics() (M)org.apache.batik.gvt.font.Glyph:getHorizAdvX()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics() (M)org.apache.batik.gvt.font.Glyph:getVertAdvY()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics() (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics() (M)java.awt.geom.Point2D$Float:getX()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics() (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics() (M)java.awt.geom.Point2D$Float:getY()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics() (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics() (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics() (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics() (O)org.apache.batik.gvt.font.GVTGlyphMetrics:<init>(float,float,java.awt.geom.Rectangle2D,byte)
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics(float,float) (M)org.apache.batik.gvt.font.Glyph:getHorizAdvX()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics(float,float) (M)org.apache.batik.gvt.font.Glyph:getVertAdvY()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics(float,float) (M)org.apache.batik.gvt.font.Glyph:getGeometryBounds()
M:org.apache.batik.gvt.font.Glyph:getGlyphMetrics(float,float) (O)org.apache.batik.gvt.font.GVTGlyphMetrics:<init>(float,float,java.awt.geom.Rectangle2D,byte)
M:org.apache.batik.gvt.font.Glyph:getGeometryBounds() (M)org.apache.batik.gvt.font.Glyph:getOutline()
M:org.apache.batik.gvt.font.Glyph:getGeometryBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (S)org.apache.batik.gvt.text.TextPaintInfo:equivilent(org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.gvt.text.TextPaintInfo)
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (M)java.awt.geom.Point2D$Float:getX()
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (M)java.awt.geom.Point2D$Float:getY()
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (S)java.awt.geom.AffineTransform:getTranslateInstance(double,double)
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (I)java.awt.Stroke:createStrokedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (I)org.apache.batik.gvt.GraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (M)java.awt.geom.Point2D$Float:getX()
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (M)java.awt.geom.Point2D$Float:getY()
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.font.Glyph:getBounds2D() (O)org.apache.batik.gvt.text.TextPaintInfo:<init>(org.apache.batik.gvt.text.TextPaintInfo)
M:org.apache.batik.gvt.font.Glyph:getOutline() (M)java.awt.geom.Point2D$Float:getX()
M:org.apache.batik.gvt.font.Glyph:getOutline() (M)java.awt.geom.Point2D$Float:getY()
M:org.apache.batik.gvt.font.Glyph:getOutline() (S)java.awt.geom.AffineTransform:getTranslateInstance(double,double)
M:org.apache.batik.gvt.font.Glyph:getOutline() (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.Glyph:getOutline() (I)org.apache.batik.gvt.GraphicsNode:getOutline()
M:org.apache.batik.gvt.font.Glyph:getOutline() (O)java.awt.geom.GeneralPath:<init>(java.awt.Shape)
M:org.apache.batik.gvt.font.Glyph:getOutline() (M)java.awt.geom.GeneralPath:append(java.awt.Shape,boolean)
M:org.apache.batik.gvt.font.Glyph:getOutline() (O)java.awt.geom.GeneralPath:<init>(java.awt.Shape)
M:org.apache.batik.gvt.font.Glyph:getOutline() (O)java.awt.geom.GeneralPath:<init>(java.awt.Shape)
M:org.apache.batik.gvt.font.Glyph:getOutline() (O)java.awt.geom.GeneralPath:<init>()
M:org.apache.batik.gvt.font.Glyph:getOutline() (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D) (M)java.awt.geom.Point2D$Float:getX()
M:org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D) (M)java.awt.geom.Point2D$Float:getY()
M:org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D) (S)java.awt.geom.AffineTransform:getTranslateInstance(double,double)
M:org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D) (M)java.awt.Graphics2D:setPaint(java.awt.Paint)
M:org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D) (M)java.awt.Graphics2D:fill(java.awt.Shape)
M:org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D) (M)java.awt.Graphics2D:setStroke(java.awt.Stroke)
M:org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D) (M)java.awt.Graphics2D:setPaint(java.awt.Paint)
M:org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D) (M)java.awt.Graphics2D:draw(java.awt.Shape)
M:org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D) (I)org.apache.batik.gvt.GraphicsNode:setTransform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.font.Glyph:draw(java.awt.Graphics2D) (I)org.apache.batik.gvt.GraphicsNode:paint(java.awt.Graphics2D)
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font) (M)java.awt.Font:getSize2D()
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font) (M)java.awt.Font:deriveFont(float)
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font) (M)java.awt.Font:getSize2D()
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font) (S)org.apache.batik.gvt.font.AWTGVTFont:initializeFontCache(java.awt.Font)
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font,double) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font,double) (M)java.awt.Font:getSize2D()
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font,double) (M)java.awt.Font:deriveFont(float)
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font,double) (M)java.awt.Font:getSize2D()
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font,double) (S)org.apache.batik.gvt.font.AWTGVTFont:initializeFontCache(java.awt.Font)
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map) (M)java.lang.Float:floatValue()
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map) (S)java.lang.Float:valueOf(float)
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map) (O)java.awt.Font:<init>(java.util.Map)
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map) (O)java.awt.Font:<init>(java.util.Map)
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map) (M)java.awt.Font:getSize2D()
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map) (M)java.awt.Font:getSize2D()
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map) (S)org.apache.batik.gvt.font.AWTGVTFont:initializeFontCache(java.awt.Font)
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.lang.String,int,int) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.lang.String,int,int) (O)java.awt.Font:<init>(java.lang.String,int,int)
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.lang.String,int,int) (M)java.awt.Font:getSize2D()
M:org.apache.batik.gvt.font.AWTGVTFont:<init>(java.lang.String,int,int) (S)org.apache.batik.gvt.font.AWTGVTFont:initializeFontCache(java.awt.Font)
M:org.apache.batik.gvt.font.AWTGVTFont:canDisplay(char) (M)java.awt.Font:canDisplay(char)
M:org.apache.batik.gvt.font.AWTGVTFont:canDisplayUpTo(char[],int,int) (M)java.awt.Font:canDisplayUpTo(char[],int,int)
M:org.apache.batik.gvt.font.AWTGVTFont:canDisplayUpTo(java.text.CharacterIterator,int,int) (M)java.awt.Font:canDisplayUpTo(java.text.CharacterIterator,int,int)
M:org.apache.batik.gvt.font.AWTGVTFont:canDisplayUpTo(java.lang.String) (M)java.awt.Font:canDisplayUpTo(java.lang.String)
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,char[]) (O)java.lang.String:<init>(char[])
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,char[]) (O)java.text.StringCharacterIterator:<init>(java.lang.String)
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,char[]) (M)java.awt.Font:createGlyphVector(java.awt.font.FontRenderContext,char[])
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,char[]) (O)org.apache.batik.gvt.font.AWTGVTGlyphVector:<init>(java.awt.font.GlyphVector,org.apache.batik.gvt.font.AWTGVTFont,double,java.text.CharacterIterator)
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator) (S)org.apache.batik.gvt.text.ArabicTextHandler:containsArabic(java.text.AttributedCharacterIterator)
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator) (S)org.apache.batik.gvt.text.ArabicTextHandler:createSubstituteString(java.text.AttributedCharacterIterator)
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator) (M)org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator) (M)java.awt.Font:createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator)
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,java.text.CharacterIterator) (O)org.apache.batik.gvt.font.AWTGVTGlyphVector:<init>(java.awt.font.GlyphVector,org.apache.batik.gvt.font.AWTGVTFont,double,java.text.CharacterIterator)
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,int[],java.text.CharacterIterator) (M)java.awt.Font:createGlyphVector(java.awt.font.FontRenderContext,int[])
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,int[],java.text.CharacterIterator) (O)org.apache.batik.gvt.font.AWTGVTGlyphVector:<init>(java.awt.font.GlyphVector,org.apache.batik.gvt.font.AWTGVTFont,double,java.text.CharacterIterator)
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,java.lang.String) (O)java.text.StringCharacterIterator:<init>(java.lang.String)
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,java.lang.String) (M)java.awt.Font:createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)
M:org.apache.batik.gvt.font.AWTGVTFont:createGlyphVector(java.awt.font.FontRenderContext,java.lang.String) (O)org.apache.batik.gvt.font.AWTGVTGlyphVector:<init>(java.awt.font.GlyphVector,org.apache.batik.gvt.font.AWTGVTFont,double,java.text.CharacterIterator)
M:org.apache.batik.gvt.font.AWTGVTFont:deriveFont(float) (O)org.apache.batik.gvt.font.AWTGVTFont:<init>(java.awt.Font,double)
M:org.apache.batik.gvt.font.AWTGVTFont:getFamilyName() (M)java.awt.Font:getFamily()
M:org.apache.batik.gvt.font.AWTGVTFont:getLineMetrics(char[],int,int,java.awt.font.FontRenderContext) (M)java.awt.Font:getLineMetrics(char[],int,int,java.awt.font.FontRenderContext)
M:org.apache.batik.gvt.font.AWTGVTFont:getLineMetrics(char[],int,int,java.awt.font.FontRenderContext) (O)org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float)
M:org.apache.batik.gvt.font.AWTGVTFont:getLineMetrics(java.text.CharacterIterator,int,int,java.awt.font.FontRenderContext) (M)java.awt.Font:getLineMetrics(java.text.CharacterIterator,int,int,java.awt.font.FontRenderContext)
M:org.apache.batik.gvt.font.AWTGVTFont:getLineMetrics(java.text.CharacterIterator,int,int,java.awt.font.FontRenderContext) (O)org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float)
M:org.apache.batik.gvt.font.AWTGVTFont:getLineMetrics(java.lang.String,java.awt.font.FontRenderContext) (M)java.awt.Font:getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)
M:org.apache.batik.gvt.font.AWTGVTFont:getLineMetrics(java.lang.String,java.awt.font.FontRenderContext) (O)org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float)
M:org.apache.batik.gvt.font.AWTGVTFont:getLineMetrics(java.lang.String,int,int,java.awt.font.FontRenderContext) (M)java.awt.Font:getLineMetrics(java.lang.String,int,int,java.awt.font.FontRenderContext)
M:org.apache.batik.gvt.font.AWTGVTFont:getLineMetrics(java.lang.String,int,int,java.awt.font.FontRenderContext) (O)org.apache.batik.gvt.font.GVTLineMetrics:<init>(java.awt.font.LineMetrics,float)
M:org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache:get(char)
M:org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D) (M)java.awt.font.GlyphVector:getGlyphOutline(int)
M:org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D) (M)java.awt.font.GlyphVector:getGlyphMetrics(int)
M:org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D) (M)java.awt.font.GlyphMetrics:getBounds2D()
M:org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D) (S)org.apache.batik.gvt.font.AWTGVTGlyphVector:outlinesPositioned()
M:org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D) (S)java.awt.geom.AffineTransform:getTranslateInstance(double,double)
M:org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D) (O)org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value:<init>(java.awt.Shape,java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.font.AWTGVTFont:getGlyphGeometry(org.apache.batik.gvt.font.AWTGVTFont,char,java.awt.font.GlyphVector,int,java.awt.geom.Point2D) (M)org.apache.batik.gvt.font.AWTGlyphGeometryCache:put(char,org.apache.batik.gvt.font.AWTGlyphGeometryCache$Value)
M:org.apache.batik.gvt.font.AWTGVTFont:initializeFontCache(java.awt.Font) (I)java.util.Map:containsKey(java.lang.Object)
M:org.apache.batik.gvt.font.AWTGVTFont:initializeFontCache(java.awt.Font) (O)org.apache.batik.gvt.font.AWTGlyphGeometryCache:<init>()
M:org.apache.batik.gvt.font.AWTGVTFont:initializeFontCache(java.awt.Font) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.font.AWTGVTFont:putAWTGVTFont(org.apache.batik.gvt.font.AWTGVTFont) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.font.AWTGVTFont:getAWTGVTFont(java.awt.Font) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.font.AWTGVTFont:<clinit>() (O)java.util.HashMap:<init>(int)
M:org.apache.batik.gvt.MarkerShapePainter:<init>(java.awt.Shape) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.MarkerShapePainter:<init>(java.awt.Shape) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.MarkerShapePainter:<init>(java.awt.Shape) (O)org.apache.batik.ext.awt.geom.ShapeExtender:<init>(java.awt.Shape)
M:org.apache.batik.gvt.MarkerShapePainter:paint(java.awt.Graphics2D) (M)org.apache.batik.gvt.MarkerShapePainter:buildMarkerGroup()
M:org.apache.batik.gvt.MarkerShapePainter:paint(java.awt.Graphics2D) (M)org.apache.batik.gvt.CompositeGraphicsNode:getChildren()
M:org.apache.batik.gvt.MarkerShapePainter:paint(java.awt.Graphics2D) (I)java.util.List:size()
M:org.apache.batik.gvt.MarkerShapePainter:paint(java.awt.Graphics2D) (M)org.apache.batik.gvt.CompositeGraphicsNode:paint(java.awt.Graphics2D)
M:org.apache.batik.gvt.MarkerShapePainter:getPaintedArea() (M)org.apache.batik.gvt.MarkerShapePainter:buildMarkerGroup()
M:org.apache.batik.gvt.MarkerShapePainter:getPaintedArea() (M)org.apache.batik.gvt.CompositeGraphicsNode:getOutline()
M:org.apache.batik.gvt.MarkerShapePainter:getPaintedBounds2D() (M)org.apache.batik.gvt.MarkerShapePainter:buildMarkerGroup()
M:org.apache.batik.gvt.MarkerShapePainter:getPaintedBounds2D() (M)org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds()
M:org.apache.batik.gvt.MarkerShapePainter:inPaintedArea(java.awt.geom.Point2D) (M)org.apache.batik.gvt.MarkerShapePainter:buildMarkerGroup()
M:org.apache.batik.gvt.MarkerShapePainter:inPaintedArea(java.awt.geom.Point2D) (M)org.apache.batik.gvt.CompositeGraphicsNode:nodeHitAt(java.awt.geom.Point2D)
M:org.apache.batik.gvt.MarkerShapePainter:setShape(java.awt.Shape) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.MarkerShapePainter:setShape(java.awt.Shape) (O)org.apache.batik.ext.awt.geom.ShapeExtender:<init>(java.awt.Shape)
M:org.apache.batik.gvt.MarkerShapePainter:buildMarkerGroup() (M)org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy()
M:org.apache.batik.gvt.MarkerShapePainter:buildMarkerGroup() (M)org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies()
M:org.apache.batik.gvt.MarkerShapePainter:buildMarkerGroup() (M)org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy()
M:org.apache.batik.gvt.MarkerShapePainter:buildMarkerGroup() (O)org.apache.batik.gvt.CompositeGraphicsNode:<init>()
M:org.apache.batik.gvt.MarkerShapePainter:buildMarkerGroup() (M)org.apache.batik.gvt.CompositeGraphicsNode:getChildren()
M:org.apache.batik.gvt.MarkerShapePainter:buildMarkerGroup() (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.gvt.MarkerShapePainter:buildMarkerGroup() (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.gvt.MarkerShapePainter:buildMarkerGroup() (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (M)org.apache.batik.gvt.MarkerShapePainter:getExtShape()
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedShape:getExtendedPathIterator()
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:isDone()
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:currentSegment(double[])
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:next()
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (M)org.apache.batik.gvt.Marker:getOrient()
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (S)java.lang.Double:isNaN(double)
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:isDone()
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:currentSegment(double[])
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (O)org.apache.batik.gvt.MarkerShapePainter:computeRotation(double[],int,double[],int,double[],int)
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (O)org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double)
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (O)org.apache.batik.gvt.ProxyGraphicsNode:<init>()
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (M)org.apache.batik.gvt.Marker:getMarkerNode()
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (M)org.apache.batik.gvt.ProxyGraphicsNode:setSource(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.MarkerShapePainter:buildStartMarkerProxy() (M)org.apache.batik.gvt.ProxyGraphicsNode:setTransform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (M)org.apache.batik.gvt.MarkerShapePainter:getExtShape()
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedShape:getExtendedPathIterator()
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:isDone()
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:currentSegment(double[])
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:next()
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:isDone()
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:currentSegment(double[])
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:next()
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (M)org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int)
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (M)org.apache.batik.gvt.Marker:getOrient()
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (S)java.lang.Double:isNaN(double)
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (O)org.apache.batik.gvt.MarkerShapePainter:computeRotation(double[],int,double[],int,double[],int)
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (O)org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double)
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (O)org.apache.batik.gvt.ProxyGraphicsNode:<init>()
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (M)org.apache.batik.gvt.Marker:getMarkerNode()
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (M)org.apache.batik.gvt.ProxyGraphicsNode:setSource(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.MarkerShapePainter:buildEndMarkerProxy() (M)org.apache.batik.gvt.ProxyGraphicsNode:setTransform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (M)org.apache.batik.gvt.MarkerShapePainter:getExtShape()
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)org.apache.batik.ext.awt.geom.ExtendedShape:getExtendedPathIterator()
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:isDone()
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:currentSegment(double[])
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:next()
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:isDone()
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:currentSegment(double[])
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:next()
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (O)java.util.ArrayList:<init>()
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:isDone()
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:currentSegment(double[])
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (O)org.apache.batik.gvt.MarkerShapePainter:createMiddleMarker(double[],int,double[],int,double[],int)
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)org.apache.batik.ext.awt.geom.ExtendedPathIterator:next()
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)java.util.List:size()
M:org.apache.batik.gvt.MarkerShapePainter:buildMiddleMarkerProxies() (I)java.util.List:toArray(java.lang.Object[])
M:org.apache.batik.gvt.MarkerShapePainter:createMiddleMarker(double[],int,double[],int,double[],int) (M)org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int)
M:org.apache.batik.gvt.MarkerShapePainter:createMiddleMarker(double[],int,double[],int,double[],int) (M)org.apache.batik.gvt.Marker:getOrient()
M:org.apache.batik.gvt.MarkerShapePainter:createMiddleMarker(double[],int,double[],int,double[],int) (S)java.lang.Double:isNaN(double)
M:org.apache.batik.gvt.MarkerShapePainter:createMiddleMarker(double[],int,double[],int,double[],int) (O)org.apache.batik.gvt.MarkerShapePainter:computeRotation(double[],int,double[],int,double[],int)
M:org.apache.batik.gvt.MarkerShapePainter:createMiddleMarker(double[],int,double[],int,double[],int) (O)org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double)
M:org.apache.batik.gvt.MarkerShapePainter:createMiddleMarker(double[],int,double[],int,double[],int) (O)org.apache.batik.gvt.ProxyGraphicsNode:<init>()
M:org.apache.batik.gvt.MarkerShapePainter:createMiddleMarker(double[],int,double[],int,double[],int) (M)org.apache.batik.gvt.Marker:getMarkerNode()
M:org.apache.batik.gvt.MarkerShapePainter:createMiddleMarker(double[],int,double[],int,double[],int) (M)org.apache.batik.gvt.ProxyGraphicsNode:setSource(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.MarkerShapePainter:createMiddleMarker(double[],int,double[],int,double[],int) (M)org.apache.batik.gvt.ProxyGraphicsNode:setTransform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.MarkerShapePainter:computeRotation(double[],int,double[],int,double[],int) (O)org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int)
M:org.apache.batik.gvt.MarkerShapePainter:computeRotation(double[],int,double[],int,double[],int) (O)org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int)
M:org.apache.batik.gvt.MarkerShapePainter:computeRotation(double[],int,double[],int,double[],int) (S)java.lang.Math:atan2(double,double)
M:org.apache.batik.gvt.MarkerShapePainter:computeRotation(double[],int,double[],int,double[],int) (S)java.lang.Math:toDegrees(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeRotation(double[],int,double[],int,double[],int) (S)java.lang.Math:atan2(double,double)
M:org.apache.batik.gvt.MarkerShapePainter:computeRotation(double[],int,double[],int,double[],int) (S)java.lang.Math:toDegrees(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int)
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int)
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int)
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (S)org.apache.batik.ext.awt.geom.ExtendedGeneralPath:computeArc(double,double,double,double,double,boolean,boolean,double,double)
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Arc2D:getAngleStart()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Arc2D:getAngleExtent()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (S)java.lang.Math:toRadians(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Arc2D:getWidth()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (S)java.lang.Math:sin(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)java.awt.geom.Arc2D:getHeight()
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (S)java.lang.Math:cos(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (S)java.lang.Math:toRadians(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (S)java.lang.Math:sin(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (S)java.lang.Math:cos(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (O)java.lang.RuntimeException:<init>(java.lang.String)
M:org.apache.batik.gvt.MarkerShapePainter:computeInSlope(double[],int,double[],int) (M)org.apache.batik.gvt.MarkerShapePainter:normalize(double[])
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (M)org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int)
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (S)org.apache.batik.ext.awt.geom.ExtendedGeneralPath:computeArc(double,double,double,double,double,boolean,boolean,double,double)
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (M)java.awt.geom.Arc2D:getAngleStart()
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (S)java.lang.Math:toRadians(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (M)java.awt.geom.Arc2D:getWidth()
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (S)java.lang.Math:sin(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (M)java.awt.geom.Arc2D:getHeight()
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (S)java.lang.Math:cos(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (S)java.lang.Math:toRadians(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (S)java.lang.Math:sin(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (S)java.lang.Math:cos(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeOutSlope(double[],int,double[],int) (M)org.apache.batik.gvt.MarkerShapePainter:normalize(double[])
M:org.apache.batik.gvt.MarkerShapePainter:normalize(double[]) (S)java.lang.Math:sqrt(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double) (M)org.apache.batik.gvt.Marker:getRef()
M:org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double) (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double) (M)java.awt.geom.AffineTransform:translate(double,double)
M:org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double) (S)java.lang.Double:isNaN(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double) (S)java.lang.Math:toRadians(double)
M:org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.MarkerShapePainter:computeMarkerTransform(org.apache.batik.gvt.Marker,java.awt.geom.Point2D,double) (M)java.awt.geom.AffineTransform:rotate(double,double,double)
M:org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int) (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int) (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int) (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int) (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int) (O)java.awt.geom.Point2D$Double:<init>(double,double)
M:org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.MarkerShapePainter:getSegmentTerminatingPoint(double[],int) (O)java.lang.RuntimeException:<init>(java.lang.String)
M:org.apache.batik.gvt.Marker:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D,double) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.Marker:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D,double) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.Marker:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D,double) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.Marker:getRef() (M)java.awt.geom.Point2D:clone()
M:org.apache.batik.gvt.CompositeGraphicsNode$ListItr:<init>(org.apache.batik.gvt.CompositeGraphicsNode,int) (O)org.apache.batik.gvt.CompositeGraphicsNode$Itr:<init>(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.CompositeGraphicsNode$1)
M:org.apache.batik.gvt.CompositeGraphicsNode$ListItr:previous() (M)org.apache.batik.gvt.CompositeGraphicsNode:get(int)
M:org.apache.batik.gvt.CompositeGraphicsNode$ListItr:previous() (M)org.apache.batik.gvt.CompositeGraphicsNode$ListItr:checkForComodification()
M:org.apache.batik.gvt.CompositeGraphicsNode$ListItr:previous() (M)org.apache.batik.gvt.CompositeGraphicsNode$ListItr:checkForComodification()
M:org.apache.batik.gvt.CompositeGraphicsNode$ListItr:previous() (O)java.util.NoSuchElementException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode$ListItr:set(java.lang.Object) (O)java.lang.IllegalStateException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode$ListItr:set(java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode$ListItr:checkForComodification()
M:org.apache.batik.gvt.CompositeGraphicsNode$ListItr:set(java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object)
M:org.apache.batik.gvt.CompositeGraphicsNode$ListItr:set(java.lang.Object) (O)java.util.ConcurrentModificationException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode$ListItr:add(java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode$ListItr:checkForComodification()
M:org.apache.batik.gvt.CompositeGraphicsNode$ListItr:add(java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object)
M:org.apache.batik.gvt.CompositeGraphicsNode$ListItr:add(java.lang.Object) (O)java.util.ConcurrentModificationException:<init>()
M:org.apache.batik.gvt.AbstractGraphicsNode:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.AbstractGraphicsNode:getWeakReference() (O)java.lang.ref.WeakReference:<init>(java.lang.Object)
M:org.apache.batik.gvt.AbstractGraphicsNode:setTransform(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getDeterminant()
M:org.apache.batik.gvt.AbstractGraphicsNode:setTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:createInverse()
M:org.apache.batik.gvt.AbstractGraphicsNode:setTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.NoninvertibleTransformException:getMessage()
M:org.apache.batik.gvt.AbstractGraphicsNode:setTransform(java.awt.geom.AffineTransform) (O)java.lang.RuntimeException:<init>(java.lang.String)
M:org.apache.batik.gvt.AbstractGraphicsNode:setTransform(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CompositeGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.AbstractGraphicsNode:setTransform(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.AbstractGraphicsNode:getGlobalTransform() (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.AbstractGraphicsNode:getGlobalTransform() (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.AbstractGraphicsNode:getGlobalTransform() (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.AbstractGraphicsNode:getGlobalTransform() (M)java.awt.geom.AffineTransform:preConcatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:getGlobalTransform() (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.AbstractGraphicsNode:setComposite(java.awt.Composite) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setComposite(java.awt.Composite) (M)org.apache.batik.gvt.AbstractGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.AbstractGraphicsNode:setComposite(java.awt.Composite) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setVisible(boolean) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setVisible(boolean) (M)org.apache.batik.gvt.AbstractGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.AbstractGraphicsNode:setVisible(boolean) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setClip(org.apache.batik.ext.awt.image.renderable.ClipRable) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setClip(org.apache.batik.ext.awt.image.renderable.ClipRable) (M)org.apache.batik.gvt.AbstractGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.AbstractGraphicsNode:setClip(org.apache.batik.ext.awt.image.renderable.ClipRable) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object) (O)java.awt.RenderingHints:<init>(java.awt.RenderingHints$Key,java.lang.Object)
M:org.apache.batik.gvt.AbstractGraphicsNode:setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object) (M)java.awt.RenderingHints:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.AbstractGraphicsNode:setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setRenderingHints(java.util.Map) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setRenderingHints(java.util.Map) (O)java.awt.RenderingHints:<init>(java.util.Map)
M:org.apache.batik.gvt.AbstractGraphicsNode:setRenderingHints(java.util.Map) (M)java.awt.RenderingHints:putAll(java.util.Map)
M:org.apache.batik.gvt.AbstractGraphicsNode:setRenderingHints(java.util.Map) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setRenderingHints(java.awt.RenderingHints) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setRenderingHints(java.awt.RenderingHints) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setMask(org.apache.batik.gvt.filter.Mask) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setMask(org.apache.batik.gvt.filter.Mask) (M)org.apache.batik.gvt.AbstractGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.AbstractGraphicsNode:setMask(org.apache.batik.gvt.filter.Mask) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setFilter(org.apache.batik.ext.awt.image.renderable.Filter) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.AbstractGraphicsNode:setFilter(org.apache.batik.ext.awt.image.renderable.Filter) (M)org.apache.batik.gvt.AbstractGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.AbstractGraphicsNode:setFilter(org.apache.batik.ext.awt.image.renderable.Filter) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.AbstractGraphicsNode:getGraphicsNodeRable(boolean) (M)java.lang.ref.WeakReference:get()
M:org.apache.batik.gvt.AbstractGraphicsNode:getGraphicsNodeRable(boolean) (O)org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:<init>(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.AbstractGraphicsNode:getGraphicsNodeRable(boolean) (O)java.lang.ref.WeakReference:<init>(java.lang.Object)
M:org.apache.batik.gvt.AbstractGraphicsNode:getEnableBackgroundGraphicsNodeRable(boolean) (M)java.lang.ref.WeakReference:get()
M:org.apache.batik.gvt.AbstractGraphicsNode:getEnableBackgroundGraphicsNodeRable(boolean) (O)org.apache.batik.gvt.filter.GraphicsNodeRable8Bit:<init>(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.AbstractGraphicsNode:getEnableBackgroundGraphicsNodeRable(boolean) (I)org.apache.batik.gvt.filter.GraphicsNodeRable:setUsePrimitivePaint(boolean)
M:org.apache.batik.gvt.AbstractGraphicsNode:getEnableBackgroundGraphicsNodeRable(boolean) (O)java.lang.ref.WeakReference:<init>(java.lang.Object)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.AlphaComposite:getAlpha()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)org.apache.batik.gvt.AbstractGraphicsNode:getBounds()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:create()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:addRenderingHints(java.util.Map)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:transform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (I)org.apache.batik.ext.awt.image.renderable.ClipRable:getClipPath()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:clip(java.awt.Shape)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:getRenderingHints()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:addRenderingHints(java.util.Map)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:getTransform()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:transform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:getComposite()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:getClip()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.geom.Rectangle2D:intersects(double,double,double,double)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (I)org.apache.batik.ext.awt.image.renderable.ClipRable:getUseAntialiasedClip()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:getTransform()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:getRenderingHints()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (I)org.apache.batik.ext.awt.image.renderable.ClipRable:getClipPath()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)org.apache.batik.gvt.AbstractGraphicsNode:isAntialiasedClip(java.awt.geom.AffineTransform,java.awt.RenderingHints,java.awt.Shape)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)org.apache.batik.gvt.AbstractGraphicsNode:isOffscreenBufferNeeded()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)org.apache.batik.gvt.AbstractGraphicsNode:primitivePaint(java.awt.Graphics2D)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)org.apache.batik.gvt.AbstractGraphicsNode:getGraphicsNodeRable(boolean)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (I)org.apache.batik.gvt.filter.Mask:getSource()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (I)org.apache.batik.gvt.filter.Mask:setSource(org.apache.batik.ext.awt.image.renderable.Filter)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (I)org.apache.batik.ext.awt.image.renderable.ClipRable:getSource()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (I)org.apache.batik.ext.awt.image.renderable.ClipRable:setSource(org.apache.batik.ext.awt.image.renderable.Filter)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:create()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:setClip(java.awt.Shape)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:clip(java.awt.Shape)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (S)org.apache.batik.ext.awt.image.GraphicsUtil:drawImage(java.awt.Graphics2D,java.awt.image.renderable.RenderableImage)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:dispose()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:dispose()
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:setRenderingHints(java.util.Map)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:setTransform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.lang.Object:getClass()
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.lang.Class:getName()
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.Object)
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (I)org.apache.batik.ext.awt.image.renderable.Filter:getSources()
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (I)java.util.List:size()
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (I)java.util.List:get(int)
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (O)org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String)
M:org.apache.batik.gvt.AbstractGraphicsNode:traceFilter(org.apache.batik.ext.awt.image.renderable.Filter,java.lang.String) (M)java.io.PrintStream:flush()
M:org.apache.batik.gvt.AbstractGraphicsNode:isOffscreenBufferNeeded() (M)java.awt.AlphaComposite:equals(java.lang.Object)
M:org.apache.batik.gvt.AbstractGraphicsNode:isAntialiasedClip(java.awt.geom.AffineTransform,java.awt.RenderingHints,java.awt.Shape) (M)java.awt.RenderingHints:get(java.lang.Object)
M:org.apache.batik.gvt.AbstractGraphicsNode:isAntialiasedClip(java.awt.geom.AffineTransform,java.awt.RenderingHints,java.awt.Shape) (M)java.awt.geom.AffineTransform:getShearX()
M:org.apache.batik.gvt.AbstractGraphicsNode:isAntialiasedClip(java.awt.geom.AffineTransform,java.awt.RenderingHints,java.awt.Shape) (M)java.awt.geom.AffineTransform:getShearY()
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.GraphicsNode) (O)org.apache.batik.gvt.event.GraphicsNodeChangeEvent:<init>(org.apache.batik.gvt.GraphicsNode,int)
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.event.GraphicsNodeChangeEvent:setChangeSrc(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent)
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.event.GraphicsNodeChangeEvent:setChangeSrc(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted() (O)org.apache.batik.gvt.event.GraphicsNodeChangeEvent:<init>(org.apache.batik.gvt.GraphicsNode,int)
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted() (M)org.apache.batik.gvt.event.GraphicsNodeChangeEvent:setChangeSrc(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted() (M)org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent)
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (M)org.apache.batik.gvt.AbstractGraphicsNode:getRoot()
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (M)org.apache.batik.gvt.RootGraphicsNode:getTreeGraphicsNodeChangeListeners()
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (I)java.util.List:iterator()
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent) (I)org.apache.batik.gvt.event.GraphicsNodeChangeListener:changeStarted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent)
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted() (O)org.apache.batik.gvt.event.GraphicsNodeChangeEvent:<init>(org.apache.batik.gvt.GraphicsNode,int)
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted() (M)org.apache.batik.gvt.AbstractGraphicsNode:getRoot()
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted() (M)org.apache.batik.gvt.RootGraphicsNode:getTreeGraphicsNodeChangeListeners()
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted() (I)java.util.List:iterator()
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted() (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted() (I)java.util.Iterator:next()
M:org.apache.batik.gvt.AbstractGraphicsNode:fireGraphicsNodeChangeCompleted() (I)org.apache.batik.gvt.event.GraphicsNodeChangeListener:changeCompleted(org.apache.batik.gvt.event.GraphicsNodeChangeEvent)
M:org.apache.batik.gvt.AbstractGraphicsNode:invalidateGeometryCache() (M)org.apache.batik.gvt.CompositeGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.AbstractGraphicsNode:getBounds() (M)org.apache.batik.gvt.AbstractGraphicsNode:getPrimitiveBounds()
M:org.apache.batik.gvt.AbstractGraphicsNode:getBounds() (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:getBounds() (I)org.apache.batik.ext.awt.image.renderable.ClipRable:getClipPath()
M:org.apache.batik.gvt.AbstractGraphicsNode:getBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:getBounds() (M)java.awt.geom.Rectangle2D:intersects(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.AbstractGraphicsNode:getBounds() (S)java.awt.geom.Rectangle2D:intersect(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.AbstractGraphicsNode:getBounds() (I)org.apache.batik.gvt.filter.Mask:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:getBounds() (M)java.awt.geom.Rectangle2D:intersects(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.AbstractGraphicsNode:getBounds() (S)java.awt.geom.Rectangle2D:intersect(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.AbstractGraphicsNode:getBounds() (M)org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.AbstractGraphicsNode:getBounds() (S)org.apache.batik.util.HaltingThread:hasBeenHalted()
M:org.apache.batik.gvt.AbstractGraphicsNode:getBounds() (M)org.apache.batik.gvt.AbstractGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.AbstractGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (I)org.apache.batik.ext.awt.image.renderable.ClipRable:getClipPath()
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (S)java.awt.geom.Rectangle2D:intersect(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.filter.Mask:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform) (S)java.awt.geom.Rectangle2D:intersect(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.AbstractGraphicsNode:getPrimitiveBounds()
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.AbstractGraphicsNode:getGeometryBounds()
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.AbstractGraphicsNode:getSensitiveBounds()
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.AbstractGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.AbstractGraphicsNode:contains(java.awt.geom.Point2D) (M)org.apache.batik.gvt.AbstractGraphicsNode:getSensitiveBounds()
M:org.apache.batik.gvt.AbstractGraphicsNode:contains(java.awt.geom.Point2D) (M)java.awt.geom.Rectangle2D:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.AbstractGraphicsNode:intersects(java.awt.geom.Rectangle2D) (M)org.apache.batik.gvt.AbstractGraphicsNode:getBounds()
M:org.apache.batik.gvt.AbstractGraphicsNode:intersects(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:intersects(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.AbstractGraphicsNode:nodeHitAt(java.awt.geom.Point2D) (M)org.apache.batik.gvt.AbstractGraphicsNode:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)org.apache.batik.gvt.AbstractGraphicsNode:getGlobalTransform()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.AffineTransform:getDeterminant()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (S)java.lang.Math:sqrt(double)
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.AbstractGraphicsNode:normalizeRectangle(java.awt.geom.Rectangle2D) (O)java.awt.geom.Rectangle2D$Double:<init>(double,double,double,double)
M:org.apache.batik.gvt.ShapeNode:<init>() (O)org.apache.batik.gvt.AbstractGraphicsNode:<init>()
M:org.apache.batik.gvt.ShapeNode:setShape(java.awt.Shape) (M)org.apache.batik.gvt.ShapeNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.ShapeNode:setShape(java.awt.Shape) (M)org.apache.batik.gvt.ShapeNode:invalidateGeometryCache()
M:org.apache.batik.gvt.ShapeNode:setShape(java.awt.Shape) (I)org.apache.batik.gvt.ShapePainter:setShape(java.awt.Shape)
M:org.apache.batik.gvt.ShapeNode:setShape(java.awt.Shape) (M)org.apache.batik.gvt.ShapeNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.ShapeNode:setShapePainter(org.apache.batik.gvt.ShapePainter) (M)org.apache.batik.gvt.ShapeNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.ShapeNode:setShapePainter(org.apache.batik.gvt.ShapePainter) (M)org.apache.batik.gvt.ShapeNode:invalidateGeometryCache()
M:org.apache.batik.gvt.ShapeNode:setShapePainter(org.apache.batik.gvt.ShapePainter) (I)org.apache.batik.gvt.ShapePainter:getShape()
M:org.apache.batik.gvt.ShapeNode:setShapePainter(org.apache.batik.gvt.ShapePainter) (I)org.apache.batik.gvt.ShapePainter:setShape(java.awt.Shape)
M:org.apache.batik.gvt.ShapeNode:setShapePainter(org.apache.batik.gvt.ShapePainter) (M)org.apache.batik.gvt.ShapeNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.ShapeNode:paint(java.awt.Graphics2D) (O)org.apache.batik.gvt.AbstractGraphicsNode:paint(java.awt.Graphics2D)
M:org.apache.batik.gvt.ShapeNode:primitivePaint(java.awt.Graphics2D) (I)org.apache.batik.gvt.ShapePainter:paint(java.awt.Graphics2D)
M:org.apache.batik.gvt.ShapeNode:invalidateGeometryCache() (O)org.apache.batik.gvt.AbstractGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.ShapeNode:setPointerEventType(int) (O)org.apache.batik.gvt.AbstractGraphicsNode:setPointerEventType(int)
M:org.apache.batik.gvt.ShapeNode:contains(java.awt.geom.Point2D) (M)org.apache.batik.gvt.ShapeNode:getSensitiveBounds()
M:org.apache.batik.gvt.ShapeNode:contains(java.awt.geom.Point2D) (M)java.awt.geom.Rectangle2D:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.ShapeNode:contains(java.awt.geom.Point2D) (M)org.apache.batik.gvt.ShapeNode:inSensitiveArea(java.awt.geom.Point2D)
M:org.apache.batik.gvt.ShapeNode:intersects(java.awt.geom.Rectangle2D) (M)org.apache.batik.gvt.ShapeNode:getBounds()
M:org.apache.batik.gvt.ShapeNode:intersects(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:intersects(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.ShapeNode:intersects(java.awt.geom.Rectangle2D) (I)java.awt.Shape:intersects(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.ShapeNode:getPrimitiveBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.ShapeNode:getPrimitiveBounds() (I)org.apache.batik.gvt.ShapePainter:getPaintedBounds2D()
M:org.apache.batik.gvt.ShapeNode:getPrimitiveBounds() (S)org.apache.batik.util.HaltingThread:hasBeenHalted()
M:org.apache.batik.gvt.ShapeNode:getPrimitiveBounds() (M)org.apache.batik.gvt.ShapeNode:invalidateGeometryCache()
M:org.apache.batik.gvt.ShapeNode:inSensitiveArea(java.awt.geom.Point2D) (M)org.apache.batik.gvt.CompositeShapePainter:getShapePainterCount()
M:org.apache.batik.gvt.ShapeNode:inSensitiveArea(java.awt.geom.Point2D) (M)org.apache.batik.gvt.CompositeShapePainter:getShapePainter(int)
M:org.apache.batik.gvt.ShapeNode:inSensitiveArea(java.awt.geom.Point2D) (I)org.apache.batik.gvt.ShapePainter:inPaintedArea(java.awt.geom.Point2D)
M:org.apache.batik.gvt.ShapeNode:inSensitiveArea(java.awt.geom.Point2D) (I)org.apache.batik.gvt.ShapePainter:inSensitiveArea(java.awt.geom.Point2D)
M:org.apache.batik.gvt.ShapeNode:inSensitiveArea(java.awt.geom.Point2D) (I)org.apache.batik.gvt.ShapePainter:inSensitiveArea(java.awt.geom.Point2D)
M:org.apache.batik.gvt.ShapeNode:inSensitiveArea(java.awt.geom.Point2D) (I)org.apache.batik.gvt.ShapePainter:inSensitiveArea(java.awt.geom.Point2D)
M:org.apache.batik.gvt.ShapeNode:getSensitiveBounds() (M)org.apache.batik.gvt.CompositeShapePainter:getShapePainterCount()
M:org.apache.batik.gvt.ShapeNode:getSensitiveBounds() (M)org.apache.batik.gvt.CompositeShapePainter:getShapePainter(int)
M:org.apache.batik.gvt.ShapeNode:getSensitiveBounds() (I)org.apache.batik.gvt.ShapePainter:getPaintedBounds2D()
M:org.apache.batik.gvt.ShapeNode:getSensitiveBounds() (I)org.apache.batik.gvt.ShapePainter:getSensitiveBounds2D()
M:org.apache.batik.gvt.ShapeNode:getSensitiveBounds() (I)org.apache.batik.gvt.ShapePainter:getSensitiveBounds2D()
M:org.apache.batik.gvt.ShapeNode:getSensitiveBounds() (I)org.apache.batik.gvt.ShapePainter:getSensitiveBounds2D()
M:org.apache.batik.gvt.ShapeNode:getSensitiveArea() (M)org.apache.batik.gvt.CompositeShapePainter:getShapePainterCount()
M:org.apache.batik.gvt.ShapeNode:getSensitiveArea() (M)org.apache.batik.gvt.CompositeShapePainter:getShapePainter(int)
M:org.apache.batik.gvt.ShapeNode:getSensitiveArea() (I)org.apache.batik.gvt.ShapePainter:getPaintedArea()
M:org.apache.batik.gvt.ShapeNode:getSensitiveArea() (I)org.apache.batik.gvt.ShapePainter:getSensitiveArea()
M:org.apache.batik.gvt.ShapeNode:getSensitiveArea() (I)org.apache.batik.gvt.ShapePainter:getSensitiveArea()
M:org.apache.batik.gvt.ShapeNode:getSensitiveArea() (I)org.apache.batik.gvt.ShapePainter:getSensitiveArea()
M:org.apache.batik.gvt.ShapeNode:getGeometryBounds() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.ShapeNode:getGeometryBounds() (M)org.apache.batik.gvt.ShapeNode:normalizeRectangle(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:<init>() (O)org.apache.batik.gvt.AbstractGraphicsNode:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:primitivePaint(java.awt.Graphics2D) (S)java.lang.Thread:currentThread()
M:org.apache.batik.gvt.CompositeGraphicsNode:primitivePaint(java.awt.Graphics2D) (S)org.apache.batik.util.HaltingThread:hasBeenHalted(java.lang.Thread)
M:org.apache.batik.gvt.CompositeGraphicsNode:primitivePaint(java.awt.Graphics2D) (I)org.apache.batik.gvt.GraphicsNode:paint(java.awt.Graphics2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:invalidateGeometryCache() (O)org.apache.batik.gvt.AbstractGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds() (S)java.lang.Thread:currentThread()
M:org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds() (I)org.apache.batik.gvt.GraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds() (S)org.apache.batik.util.HaltingThread:hasBeenHalted(java.lang.Thread)
M:org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds() (S)org.apache.batik.util.HaltingThread:hasBeenHalted(java.lang.Thread)
M:org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds() (M)org.apache.batik.gvt.CompositeGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds() (I)org.apache.batik.gvt.GraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds() (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds() (S)org.apache.batik.util.HaltingThread:hasBeenHalted(java.lang.Thread)
M:org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds() (S)org.apache.batik.util.HaltingThread:hasBeenHalted(java.lang.Thread)
M:org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds() (M)org.apache.batik.gvt.CompositeGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform) (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform) (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getScaleX()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getScaleY()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getTranslateX()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getTranslateY()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform) (O)java.awt.geom.Rectangle2D$Float:<init>(float,float,float,float)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getShearX()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getShearY()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CompositeGraphicsNode:getPrimitiveBounds()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (S)org.apache.batik.gvt.CompositeGraphicsNode:getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.GraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.GraphicsNode:getTransformedBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:getGeometryBounds() (I)org.apache.batik.gvt.GraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getGeometryBounds() (I)org.apache.batik.gvt.GraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getGeometryBounds() (M)org.apache.batik.gvt.CompositeGraphicsNode:getGeometryBounds()
M:org.apache.batik.gvt.CompositeGraphicsNode:getGeometryBounds() (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getShearX()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getShearY()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CompositeGraphicsNode:getGeometryBounds()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (S)org.apache.batik.gvt.CompositeGraphicsNode:getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.GraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.GraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:getSensitiveBounds() (I)org.apache.batik.gvt.GraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getSensitiveBounds() (I)org.apache.batik.gvt.GraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getSensitiveBounds() (M)org.apache.batik.gvt.CompositeGraphicsNode:getSensitiveBounds()
M:org.apache.batik.gvt.CompositeGraphicsNode:getSensitiveBounds() (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getShearX()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getShearY()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CompositeGraphicsNode:getSensitiveBounds()
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (S)org.apache.batik.gvt.CompositeGraphicsNode:getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.GraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.GraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CompositeGraphicsNode:getTransformedSensitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:contains(java.awt.geom.Point2D) (M)org.apache.batik.gvt.CompositeGraphicsNode:getSensitiveBounds()
M:org.apache.batik.gvt.CompositeGraphicsNode:contains(java.awt.geom.Point2D) (M)java.awt.geom.Rectangle2D:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:contains(java.awt.geom.Point2D) (I)org.apache.batik.gvt.GraphicsNode:getInverseTransform()
M:org.apache.batik.gvt.CompositeGraphicsNode:contains(java.awt.geom.Point2D) (M)java.awt.geom.AffineTransform:transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:contains(java.awt.geom.Point2D) (I)org.apache.batik.gvt.GraphicsNode:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:nodeHitAt(java.awt.geom.Point2D) (M)org.apache.batik.gvt.CompositeGraphicsNode:getSensitiveBounds()
M:org.apache.batik.gvt.CompositeGraphicsNode:nodeHitAt(java.awt.geom.Point2D) (M)java.awt.geom.Rectangle2D:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:nodeHitAt(java.awt.geom.Point2D) (I)org.apache.batik.gvt.GraphicsNode:getInverseTransform()
M:org.apache.batik.gvt.CompositeGraphicsNode:nodeHitAt(java.awt.geom.Point2D) (M)java.awt.geom.AffineTransform:transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:nodeHitAt(java.awt.geom.Point2D) (I)org.apache.batik.gvt.GraphicsNode:nodeHitAt(java.awt.geom.Point2D)
M:org.apache.batik.gvt.CompositeGraphicsNode:getOutline() (O)java.awt.geom.GeneralPath:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:getOutline() (I)org.apache.batik.gvt.GraphicsNode:getOutline()
M:org.apache.batik.gvt.CompositeGraphicsNode:getOutline() (I)org.apache.batik.gvt.GraphicsNode:getTransform()
M:org.apache.batik.gvt.CompositeGraphicsNode:getOutline() (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.CompositeGraphicsNode:getOutline() (M)java.awt.geom.GeneralPath:append(java.awt.Shape,boolean)
M:org.apache.batik.gvt.CompositeGraphicsNode:getOutline() (M)java.awt.geom.GeneralPath:append(java.awt.Shape,boolean)
M:org.apache.batik.gvt.CompositeGraphicsNode:setRoot(org.apache.batik.gvt.RootGraphicsNode) (O)org.apache.batik.gvt.AbstractGraphicsNode:setRoot(org.apache.batik.gvt.RootGraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:setRoot(org.apache.batik.gvt.RootGraphicsNode) (M)org.apache.batik.gvt.AbstractGraphicsNode:setRoot(org.apache.batik.gvt.RootGraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:contains(java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:indexOf(java.lang.Object)
M:org.apache.batik.gvt.CompositeGraphicsNode:iterator() (O)org.apache.batik.gvt.CompositeGraphicsNode$Itr:<init>(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.CompositeGraphicsNode$1)
M:org.apache.batik.gvt.CompositeGraphicsNode:toArray() (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.gvt.CompositeGraphicsNode:toArray(java.lang.Object[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.gvt.CompositeGraphicsNode:get(int) (O)org.apache.batik.gvt.CompositeGraphicsNode:checkRange(int)
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (M)java.lang.StringBuilder:append(java.lang.Object)
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (O)org.apache.batik.gvt.CompositeGraphicsNode:checkRange(int)
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:getChildren()
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (I)java.util.List:remove(java.lang.Object)
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (M)org.apache.batik.gvt.AbstractGraphicsNode:setParent(org.apache.batik.gvt.CompositeGraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (M)org.apache.batik.gvt.AbstractGraphicsNode:setParent(org.apache.batik.gvt.CompositeGraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:getRoot()
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (M)org.apache.batik.gvt.AbstractGraphicsNode:setRoot(org.apache.batik.gvt.RootGraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (M)org.apache.batik.gvt.AbstractGraphicsNode:setRoot(org.apache.batik.gvt.RootGraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.CompositeGraphicsNode:set(int,java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (M)java.lang.StringBuilder:append(java.lang.Object)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:getChildren()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (I)java.util.List:remove(java.lang.Object)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:ensureCapacity(int)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (M)org.apache.batik.gvt.AbstractGraphicsNode:setParent(org.apache.batik.gvt.CompositeGraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:getRoot()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (M)org.apache.batik.gvt.AbstractGraphicsNode:setRoot(org.apache.batik.gvt.RootGraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)java.lang.StringBuilder:append(java.lang.Object)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:getChildren()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (I)java.util.List:remove(java.lang.Object)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:ensureCapacity(int)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)org.apache.batik.gvt.AbstractGraphicsNode:setParent(org.apache.batik.gvt.CompositeGraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:getRoot()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)org.apache.batik.gvt.AbstractGraphicsNode:setRoot(org.apache.batik.gvt.RootGraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.CompositeGraphicsNode:add(int,java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.CompositeGraphicsNode:addAll(java.util.Collection) (O)java.lang.UnsupportedOperationException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:addAll(int,java.util.Collection) (O)java.lang.UnsupportedOperationException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(java.lang.Object) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(java.lang.Object) (M)java.lang.StringBuilder:append(java.lang.Object)
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(java.lang.Object) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(java.lang.Object) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(java.lang.Object) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(java.lang.Object) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(java.lang.Object) (M)org.apache.batik.gvt.CompositeGraphicsNode:remove(int)
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(int) (O)org.apache.batik.gvt.CompositeGraphicsNode:checkRange(int)
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(int) (M)org.apache.batik.gvt.CompositeGraphicsNode:fireGraphicsNodeChangeStarted(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(int) (M)org.apache.batik.gvt.AbstractGraphicsNode:setParent(org.apache.batik.gvt.CompositeGraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(int) (M)org.apache.batik.gvt.AbstractGraphicsNode:setRoot(org.apache.batik.gvt.RootGraphicsNode)
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(int) (M)org.apache.batik.gvt.CompositeGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.CompositeGraphicsNode:remove(int) (M)org.apache.batik.gvt.CompositeGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.CompositeGraphicsNode:removeAll(java.util.Collection) (O)java.lang.UnsupportedOperationException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:retainAll(java.util.Collection) (O)java.lang.UnsupportedOperationException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:clear() (O)java.lang.UnsupportedOperationException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:containsAll(java.util.Collection) (I)java.util.Collection:iterator()
M:org.apache.batik.gvt.CompositeGraphicsNode:containsAll(java.util.Collection) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.CompositeGraphicsNode:containsAll(java.util.Collection) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.CompositeGraphicsNode:containsAll(java.util.Collection) (M)org.apache.batik.gvt.CompositeGraphicsNode:contains(java.lang.Object)
M:org.apache.batik.gvt.CompositeGraphicsNode:indexOf(java.lang.Object) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.CompositeGraphicsNode:lastIndexOf(java.lang.Object) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.CompositeGraphicsNode:listIterator() (M)org.apache.batik.gvt.CompositeGraphicsNode:listIterator(int)
M:org.apache.batik.gvt.CompositeGraphicsNode:listIterator(int) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:listIterator(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:listIterator(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.CompositeGraphicsNode:listIterator(int) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.CompositeGraphicsNode:listIterator(int) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:listIterator(int) (O)org.apache.batik.gvt.CompositeGraphicsNode$ListItr:<init>(org.apache.batik.gvt.CompositeGraphicsNode,int)
M:org.apache.batik.gvt.CompositeGraphicsNode:subList(int,int) (O)java.lang.UnsupportedOperationException:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:checkRange(int) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:checkRange(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:checkRange(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.CompositeGraphicsNode:checkRange(int) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:checkRange(int) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.CompositeGraphicsNode:checkRange(int) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.CompositeGraphicsNode:checkRange(int) (O)java.lang.IndexOutOfBoundsException:<init>(java.lang.String)
M:org.apache.batik.gvt.CompositeGraphicsNode:ensureCapacity(int) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.gvt.CompositeGraphicsNode:<clinit>() (O)java.awt.Rectangle:<init>()
M:org.apache.batik.gvt.CompositeGraphicsNode:<clinit>() (O)java.awt.Rectangle:<init>()
M:org.apache.batik.gvt.UpdateTracker$ChngSrcRect:<init>(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.gvt.UpdateTracker$ChngSrcRect:<init>(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.UpdateTracker$ChngSrcRect:<init>(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.gvt.UpdateTracker$ChngSrcRect:<init>(java.awt.geom.Rectangle2D) (M)java.awt.geom.Rectangle2D:getHeight()
M:org.apache.batik.gvt.UpdateTracker$ChngSrcRect:<init>(java.awt.geom.Rectangle2D) (O)java.awt.geom.Rectangle2D$Float:<init>(float,float,float,float)
M:org.apache.batik.gvt.FillShapePainter:<init>(java.awt.Shape) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.FillShapePainter:<init>(java.awt.Shape) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.FillShapePainter:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:setPaint(java.awt.Paint)
M:org.apache.batik.gvt.FillShapePainter:paint(java.awt.Graphics2D) (M)java.awt.Graphics2D:fill(java.awt.Shape)
M:org.apache.batik.gvt.FillShapePainter:getPaintedBounds2D() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.FillShapePainter:inPaintedArea(java.awt.geom.Point2D) (I)java.awt.Shape:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.FillShapePainter:getSensitiveBounds2D() (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.FillShapePainter:inSensitiveArea(java.awt.geom.Point2D) (I)java.awt.Shape:contains(java.awt.geom.Point2D)
M:org.apache.batik.gvt.FillShapePainter:setShape(java.awt.Shape) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.CanvasGraphicsNode:<init>() (O)org.apache.batik.gvt.CompositeGraphicsNode:<init>()
M:org.apache.batik.gvt.CanvasGraphicsNode:setPositionTransform(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CanvasGraphicsNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.CanvasGraphicsNode:setPositionTransform(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CanvasGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.CanvasGraphicsNode:setPositionTransform(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CanvasGraphicsNode:setPositionTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CanvasGraphicsNode:setPositionTransform(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CanvasGraphicsNode:setPositionTransform(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.CanvasGraphicsNode:setPositionTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getDeterminant()
M:org.apache.batik.gvt.CanvasGraphicsNode:setPositionTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:createInverse()
M:org.apache.batik.gvt.CanvasGraphicsNode:setPositionTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.NoninvertibleTransformException:getMessage()
M:org.apache.batik.gvt.CanvasGraphicsNode:setPositionTransform(java.awt.geom.AffineTransform) (O)java.lang.RuntimeException:<init>(java.lang.String)
M:org.apache.batik.gvt.CanvasGraphicsNode:setPositionTransform(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CanvasGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.CanvasGraphicsNode:setViewingTransform(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CanvasGraphicsNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.CanvasGraphicsNode:setViewingTransform(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CanvasGraphicsNode:invalidateGeometryCache()
M:org.apache.batik.gvt.CanvasGraphicsNode:setViewingTransform(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CanvasGraphicsNode:setViewingTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CanvasGraphicsNode:setViewingTransform(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.CanvasGraphicsNode:setViewingTransform(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.CanvasGraphicsNode:setViewingTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:getDeterminant()
M:org.apache.batik.gvt.CanvasGraphicsNode:setViewingTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:createInverse()
M:org.apache.batik.gvt.CanvasGraphicsNode:setViewingTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.NoninvertibleTransformException:getMessage()
M:org.apache.batik.gvt.CanvasGraphicsNode:setViewingTransform(java.awt.geom.AffineTransform) (O)java.lang.RuntimeException:<init>(java.lang.String)
M:org.apache.batik.gvt.CanvasGraphicsNode:setViewingTransform(java.awt.geom.AffineTransform) (M)org.apache.batik.gvt.CanvasGraphicsNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.CanvasGraphicsNode:primitivePaint(java.awt.Graphics2D) (M)java.awt.Graphics2D:setPaint(java.awt.Paint)
M:org.apache.batik.gvt.CanvasGraphicsNode:primitivePaint(java.awt.Graphics2D) (M)java.awt.Graphics2D:getClip()
M:org.apache.batik.gvt.CanvasGraphicsNode:primitivePaint(java.awt.Graphics2D) (M)java.awt.Graphics2D:fill(java.awt.Shape)
M:org.apache.batik.gvt.CanvasGraphicsNode:primitivePaint(java.awt.Graphics2D) (O)org.apache.batik.gvt.CompositeGraphicsNode:primitivePaint(java.awt.Graphics2D)
M:org.apache.batik.gvt.RasterImageNode:<init>() (O)org.apache.batik.gvt.AbstractGraphicsNode:<init>()
M:org.apache.batik.gvt.RasterImageNode:setImage(org.apache.batik.ext.awt.image.renderable.Filter) (M)org.apache.batik.gvt.RasterImageNode:fireGraphicsNodeChangeStarted()
M:org.apache.batik.gvt.RasterImageNode:setImage(org.apache.batik.ext.awt.image.renderable.Filter) (M)org.apache.batik.gvt.RasterImageNode:invalidateGeometryCache()
M:org.apache.batik.gvt.RasterImageNode:setImage(org.apache.batik.ext.awt.image.renderable.Filter) (M)org.apache.batik.gvt.RasterImageNode:fireGraphicsNodeChangeCompleted()
M:org.apache.batik.gvt.RasterImageNode:getImageBounds() (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.RasterImageNode:getImageBounds() (M)java.awt.geom.Rectangle2D:clone()
M:org.apache.batik.gvt.RasterImageNode:primitivePaint(java.awt.Graphics2D) (S)org.apache.batik.ext.awt.image.GraphicsUtil:drawImage(java.awt.Graphics2D,java.awt.image.renderable.RenderableImage)
M:org.apache.batik.gvt.RasterImageNode:getPrimitiveBounds() (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.RasterImageNode:getGeometryBounds() (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.RasterImageNode:getSensitiveBounds() (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.RasterImageNode:getOutline() (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.gvt.CompositeShapePainter:<init>(java.awt.Shape) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.CompositeShapePainter:<init>(java.awt.Shape) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.CompositeShapePainter:addShapePainter(org.apache.batik.gvt.ShapePainter) (I)org.apache.batik.gvt.ShapePainter:getShape()
M:org.apache.batik.gvt.CompositeShapePainter:addShapePainter(org.apache.batik.gvt.ShapePainter) (I)org.apache.batik.gvt.ShapePainter:setShape(java.awt.Shape)
M:org.apache.batik.gvt.CompositeShapePainter:addShapePainter(org.apache.batik.gvt.ShapePainter) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.gvt.CompositeShapePainter:paint(java.awt.Graphics2D) (I)org.apache.batik.gvt.ShapePainter:paint(java.awt.Graphics2D)
M:org.apache.batik.gvt.CompositeShapePainter:getPaintedArea() (O)java.awt.geom.Area:<init>()
M:org.apache.batik.gvt.CompositeShapePainter:getPaintedArea() (I)org.apache.batik.gvt.ShapePainter:getPaintedArea()
M:org.apache.batik.gvt.CompositeShapePainter:getPaintedArea() (O)java.awt.geom.Area:<init>(java.awt.Shape)
M:org.apache.batik.gvt.CompositeShapePainter:getPaintedArea() (M)java.awt.geom.Area:add(java.awt.geom.Area)
M:org.apache.batik.gvt.CompositeShapePainter:getPaintedBounds2D() (I)org.apache.batik.gvt.ShapePainter:getPaintedBounds2D()
M:org.apache.batik.gvt.CompositeShapePainter:getPaintedBounds2D() (M)java.awt.geom.Rectangle2D:clone()
M:org.apache.batik.gvt.CompositeShapePainter:getPaintedBounds2D() (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.CompositeShapePainter:inPaintedArea(java.awt.geom.Point2D) (I)org.apache.batik.gvt.ShapePainter:inPaintedArea(java.awt.geom.Point2D)
M:org.apache.batik.gvt.CompositeShapePainter:getSensitiveArea() (O)java.awt.geom.Area:<init>()
M:org.apache.batik.gvt.CompositeShapePainter:getSensitiveArea() (I)org.apache.batik.gvt.ShapePainter:getSensitiveArea()
M:org.apache.batik.gvt.CompositeShapePainter:getSensitiveArea() (O)java.awt.geom.Area:<init>(java.awt.Shape)
M:org.apache.batik.gvt.CompositeShapePainter:getSensitiveArea() (M)java.awt.geom.Area:add(java.awt.geom.Area)
M:org.apache.batik.gvt.CompositeShapePainter:getSensitiveBounds2D() (I)org.apache.batik.gvt.ShapePainter:getSensitiveBounds2D()
M:org.apache.batik.gvt.CompositeShapePainter:getSensitiveBounds2D() (M)java.awt.geom.Rectangle2D:clone()
M:org.apache.batik.gvt.CompositeShapePainter:getSensitiveBounds2D() (M)java.awt.geom.Rectangle2D:add(java.awt.geom.Rectangle2D)
M:org.apache.batik.gvt.CompositeShapePainter:inSensitiveArea(java.awt.geom.Point2D) (I)org.apache.batik.gvt.ShapePainter:inSensitiveArea(java.awt.geom.Point2D)
M:org.apache.batik.gvt.CompositeShapePainter:setShape(java.awt.Shape) (O)java.lang.IllegalArgumentException:<init>()
M:org.apache.batik.gvt.CompositeShapePainter:setShape(java.awt.Shape) (I)org.apache.batik.gvt.ShapePainter:setShape(java.awt.Shape)
M:org.apache.batik.gvt.ProxyGraphicsNode:<init>() (O)org.apache.batik.gvt.AbstractGraphicsNode:<init>()
M:org.apache.batik.gvt.ProxyGraphicsNode:primitivePaint(java.awt.Graphics2D) (I)org.apache.batik.gvt.GraphicsNode:paint(java.awt.Graphics2D)
M:org.apache.batik.gvt.ProxyGraphicsNode:getPrimitiveBounds() (I)org.apache.batik.gvt.GraphicsNode:getBounds()
M:org.apache.batik.gvt.ProxyGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.ProxyGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.ProxyGraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.GraphicsNode:getTransformedPrimitiveBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.ProxyGraphicsNode:getGeometryBounds() (I)org.apache.batik.gvt.GraphicsNode:getGeometryBounds()
M:org.apache.batik.gvt.ProxyGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.ProxyGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:concatenate(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.ProxyGraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform) (I)org.apache.batik.gvt.GraphicsNode:getTransformedGeometryBounds(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.ProxyGraphicsNode:getSensitiveBounds() (I)org.apache.batik.gvt.GraphicsNode:getSensitiveBounds()
M:org.apache.batik.gvt.ProxyGraphicsNode:getOutline() (I)org.apache.batik.gvt.GraphicsNode:getOutline()
M:org.apache.batik.gvt.GVTTreeWalker:<init>(org.apache.batik.gvt.GraphicsNode) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.GVTTreeWalker:<init>(org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getRoot()
M:org.apache.batik.gvt.GVTTreeWalker:setCurrentGraphicsNode(org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getRoot()
M:org.apache.batik.gvt.GVTTreeWalker:setCurrentGraphicsNode(org.apache.batik.gvt.GraphicsNode) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.GVTTreeWalker:setCurrentGraphicsNode(org.apache.batik.gvt.GraphicsNode) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.GVTTreeWalker:setCurrentGraphicsNode(org.apache.batik.gvt.GraphicsNode) (M)java.lang.StringBuilder:append(java.lang.Object)
M:org.apache.batik.gvt.GVTTreeWalker:setCurrentGraphicsNode(org.apache.batik.gvt.GraphicsNode) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.GVTTreeWalker:setCurrentGraphicsNode(org.apache.batik.gvt.GraphicsNode) (M)java.lang.StringBuilder:append(java.lang.Object)
M:org.apache.batik.gvt.GVTTreeWalker:setCurrentGraphicsNode(org.apache.batik.gvt.GraphicsNode) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.GVTTreeWalker:setCurrentGraphicsNode(org.apache.batik.gvt.GraphicsNode) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.GVTTreeWalker:previousGraphicsNode() (M)org.apache.batik.gvt.GVTTreeWalker:getPreviousGraphicsNode(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.GVTTreeWalker:nextGraphicsNode() (M)org.apache.batik.gvt.GVTTreeWalker:getNextGraphicsNode(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.GVTTreeWalker:parentGraphicsNode() (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.GVTTreeWalker:getNextSibling() (S)org.apache.batik.gvt.GVTTreeWalker:getNextSibling(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.GVTTreeWalker:getPreviousSibling() (S)org.apache.batik.gvt.GVTTreeWalker:getPreviousSibling(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.GVTTreeWalker:firstChild() (S)org.apache.batik.gvt.GVTTreeWalker:getFirstChild(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.GVTTreeWalker:lastChild() (S)org.apache.batik.gvt.GVTTreeWalker:getLastChild(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.GVTTreeWalker:getNextGraphicsNode(org.apache.batik.gvt.GraphicsNode) (S)org.apache.batik.gvt.GVTTreeWalker:getFirstChild(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.GVTTreeWalker:getNextGraphicsNode(org.apache.batik.gvt.GraphicsNode) (S)org.apache.batik.gvt.GVTTreeWalker:getNextSibling(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.GVTTreeWalker:getNextGraphicsNode(org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.GVTTreeWalker:getNextGraphicsNode(org.apache.batik.gvt.GraphicsNode) (S)org.apache.batik.gvt.GVTTreeWalker:getNextSibling(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.GVTTreeWalker:getPreviousGraphicsNode(org.apache.batik.gvt.GraphicsNode) (S)org.apache.batik.gvt.GVTTreeWalker:getPreviousSibling(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.GVTTreeWalker:getPreviousGraphicsNode(org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.GVTTreeWalker:getPreviousGraphicsNode(org.apache.batik.gvt.GraphicsNode) (S)org.apache.batik.gvt.GVTTreeWalker:getLastChild(org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.GVTTreeWalker:getLastChild(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.CompositeGraphicsNode:getChildren()
M:org.apache.batik.gvt.GVTTreeWalker:getLastChild(org.apache.batik.gvt.GraphicsNode) (I)java.util.List:size()
M:org.apache.batik.gvt.GVTTreeWalker:getLastChild(org.apache.batik.gvt.GraphicsNode) (I)java.util.List:size()
M:org.apache.batik.gvt.GVTTreeWalker:getLastChild(org.apache.batik.gvt.GraphicsNode) (I)java.util.List:get(int)
M:org.apache.batik.gvt.GVTTreeWalker:getPreviousSibling(org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.GVTTreeWalker:getPreviousSibling(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.CompositeGraphicsNode:getChildren()
M:org.apache.batik.gvt.GVTTreeWalker:getPreviousSibling(org.apache.batik.gvt.GraphicsNode) (I)java.util.List:indexOf(java.lang.Object)
M:org.apache.batik.gvt.GVTTreeWalker:getPreviousSibling(org.apache.batik.gvt.GraphicsNode) (I)java.util.List:get(int)
M:org.apache.batik.gvt.GVTTreeWalker:getFirstChild(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.CompositeGraphicsNode:getChildren()
M:org.apache.batik.gvt.GVTTreeWalker:getFirstChild(org.apache.batik.gvt.GraphicsNode) (I)java.util.List:size()
M:org.apache.batik.gvt.GVTTreeWalker:getFirstChild(org.apache.batik.gvt.GraphicsNode) (I)java.util.List:get(int)
M:org.apache.batik.gvt.GVTTreeWalker:getNextSibling(org.apache.batik.gvt.GraphicsNode) (I)org.apache.batik.gvt.GraphicsNode:getParent()
M:org.apache.batik.gvt.GVTTreeWalker:getNextSibling(org.apache.batik.gvt.GraphicsNode) (M)org.apache.batik.gvt.CompositeGraphicsNode:getChildren()
M:org.apache.batik.gvt.GVTTreeWalker:getNextSibling(org.apache.batik.gvt.GraphicsNode) (I)java.util.List:indexOf(java.lang.Object)
M:org.apache.batik.gvt.GVTTreeWalker:getNextSibling(org.apache.batik.gvt.GraphicsNode) (I)java.util.List:size()
M:org.apache.batik.gvt.GVTTreeWalker:getNextSibling(org.apache.batik.gvt.GraphicsNode) (I)java.util.List:get(int)
M:org.apache.batik.gvt.event.GraphicsNodeMouseEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int,int,float,float,int,int,int,int,int,org.apache.batik.gvt.GraphicsNode) (O)org.apache.batik.gvt.event.GraphicsNodeInputEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int)
M:org.apache.batik.gvt.event.GraphicsNodeMouseEvent:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.event.MouseEvent,int,int) (O)org.apache.batik.gvt.event.GraphicsNodeInputEvent:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.event.InputEvent,int)
M:org.apache.batik.gvt.event.GraphicsNodeMouseEvent:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.event.MouseEvent,int,int) (M)java.awt.event.MouseEvent:getX()
M:org.apache.batik.gvt.event.GraphicsNodeMouseEvent:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.event.MouseEvent,int,int) (M)java.awt.event.MouseEvent:getY()
M:org.apache.batik.gvt.event.GraphicsNodeMouseEvent:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.event.MouseEvent,int,int) (M)java.awt.event.MouseEvent:getClickCount()
M:org.apache.batik.gvt.event.GraphicsNodeMouseEvent:getScreenPoint() (O)java.awt.Point:<init>(int,int)
M:org.apache.batik.gvt.event.GraphicsNodeMouseEvent:getClientPoint() (O)java.awt.Point:<init>(int,int)
M:org.apache.batik.gvt.event.GraphicsNodeMouseEvent:getPoint2D() (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.gvt.event.SelectionAdapter:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.event.GraphicsNodeFocusEvent:<init>(org.apache.batik.gvt.GraphicsNode,int) (O)org.apache.batik.gvt.event.GraphicsNodeEvent:<init>(org.apache.batik.gvt.GraphicsNode,int)
M:org.apache.batik.gvt.event.GraphicsNodeMouseAdapter:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.event.GraphicsNodeMouseWheelEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int,int) (O)org.apache.batik.gvt.event.GraphicsNodeInputEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int)
M:org.apache.batik.gvt.event.GraphicsNodeEvent:<init>(org.apache.batik.gvt.GraphicsNode,int) (O)java.util.EventObject:<init>(java.lang.Object)
M:org.apache.batik.gvt.event.GraphicsNodeChangeEvent:<init>(org.apache.batik.gvt.GraphicsNode,int) (O)org.apache.batik.gvt.event.GraphicsNodeEvent:<init>(org.apache.batik.gvt.GraphicsNode,int)
M:org.apache.batik.gvt.event.GraphicsNodeKeyEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int,int,char,int) (O)org.apache.batik.gvt.event.GraphicsNodeInputEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int)
M:org.apache.batik.gvt.event.GraphicsNodeChangeAdapter:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.event.GraphicsNodeInputEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int) (O)org.apache.batik.gvt.event.GraphicsNodeEvent:<init>(org.apache.batik.gvt.GraphicsNode,int)
M:org.apache.batik.gvt.event.GraphicsNodeInputEvent:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.event.InputEvent,int) (M)java.awt.event.InputEvent:getID()
M:org.apache.batik.gvt.event.GraphicsNodeInputEvent:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.event.InputEvent,int) (O)org.apache.batik.gvt.event.GraphicsNodeEvent:<init>(org.apache.batik.gvt.GraphicsNode,int)
M:org.apache.batik.gvt.event.GraphicsNodeInputEvent:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.event.InputEvent,int) (M)java.awt.event.InputEvent:getWhen()
M:org.apache.batik.gvt.event.GraphicsNodeInputEvent:<init>(org.apache.batik.gvt.GraphicsNode,java.awt.event.InputEvent,int) (M)java.awt.event.InputEvent:getModifiersEx()
M:org.apache.batik.gvt.event.GraphicsNodeInputEvent:isMetaDown() (S)org.apache.batik.gvt.event.AWTEventDispatcher:isMetaDown(int)
M:org.apache.batik.gvt.event.GraphicsNodeKeyAdapter:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.event.SelectionEvent:<init>(java.lang.Object,int,java.awt.Shape) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.event.AWTEventDispatcher:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.event.AWTEventDispatcher:<init>() (O)java.util.LinkedList:<init>()
M:org.apache.batik.gvt.event.AWTEventDispatcher:setRootNode(org.apache.batik.gvt.GraphicsNode) (I)java.util.List:clear()
M:org.apache.batik.gvt.event.AWTEventDispatcher:setBaseTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:equals(java.lang.Object)
M:org.apache.batik.gvt.event.AWTEventDispatcher:setBaseTransform(java.awt.geom.AffineTransform) (I)java.util.List:clear()
M:org.apache.batik.gvt.event.AWTEventDispatcher:getBaseTransform() (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.event.AWTEventDispatcher:mousePressed(java.awt.event.MouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject)
M:org.apache.batik.gvt.event.AWTEventDispatcher:mouseReleased(java.awt.event.MouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject)
M:org.apache.batik.gvt.event.AWTEventDispatcher:mouseEntered(java.awt.event.MouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject)
M:org.apache.batik.gvt.event.AWTEventDispatcher:mouseExited(java.awt.event.MouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject)
M:org.apache.batik.gvt.event.AWTEventDispatcher:mouseClicked(java.awt.event.MouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject)
M:org.apache.batik.gvt.event.AWTEventDispatcher:mouseMoved(java.awt.event.MouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject)
M:org.apache.batik.gvt.event.AWTEventDispatcher:mouseDragged(java.awt.event.MouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject)
M:org.apache.batik.gvt.event.AWTEventDispatcher:mouseWheelMoved(java.awt.event.MouseWheelEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject)
M:org.apache.batik.gvt.event.AWTEventDispatcher:keyPressed(java.awt.event.KeyEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject)
M:org.apache.batik.gvt.event.AWTEventDispatcher:keyReleased(java.awt.event.KeyEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject)
M:org.apache.batik.gvt.event.AWTEventDispatcher:keyTyped(java.awt.event.KeyEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject)
M:org.apache.batik.gvt.event.AWTEventDispatcher:addGraphicsNodeMouseListener(org.apache.batik.gvt.event.GraphicsNodeMouseListener) (O)javax.swing.event.EventListenerList:<init>()
M:org.apache.batik.gvt.event.AWTEventDispatcher:addGraphicsNodeMouseListener(org.apache.batik.gvt.event.GraphicsNodeMouseListener) (M)javax.swing.event.EventListenerList:add(java.lang.Class,java.util.EventListener)
M:org.apache.batik.gvt.event.AWTEventDispatcher:removeGraphicsNodeMouseListener(org.apache.batik.gvt.event.GraphicsNodeMouseListener) (M)javax.swing.event.EventListenerList:remove(java.lang.Class,java.util.EventListener)
M:org.apache.batik.gvt.event.AWTEventDispatcher:addGraphicsNodeMouseWheelListener(org.apache.batik.gvt.event.GraphicsNodeMouseWheelListener) (O)javax.swing.event.EventListenerList:<init>()
M:org.apache.batik.gvt.event.AWTEventDispatcher:addGraphicsNodeMouseWheelListener(org.apache.batik.gvt.event.GraphicsNodeMouseWheelListener) (M)javax.swing.event.EventListenerList:add(java.lang.Class,java.util.EventListener)
M:org.apache.batik.gvt.event.AWTEventDispatcher:removeGraphicsNodeMouseWheelListener(org.apache.batik.gvt.event.GraphicsNodeMouseWheelListener) (M)javax.swing.event.EventListenerList:remove(java.lang.Class,java.util.EventListener)
M:org.apache.batik.gvt.event.AWTEventDispatcher:addGraphicsNodeKeyListener(org.apache.batik.gvt.event.GraphicsNodeKeyListener) (O)javax.swing.event.EventListenerList:<init>()
M:org.apache.batik.gvt.event.AWTEventDispatcher:addGraphicsNodeKeyListener(org.apache.batik.gvt.event.GraphicsNodeKeyListener) (M)javax.swing.event.EventListenerList:add(java.lang.Class,java.util.EventListener)
M:org.apache.batik.gvt.event.AWTEventDispatcher:removeGraphicsNodeKeyListener(org.apache.batik.gvt.event.GraphicsNodeKeyListener) (M)javax.swing.event.EventListenerList:remove(java.lang.Class,java.util.EventListener)
M:org.apache.batik.gvt.event.AWTEventDispatcher:getListeners(java.lang.Class) (M)javax.swing.event.EventListenerList:getListenerCount(java.lang.Class)
M:org.apache.batik.gvt.event.AWTEventDispatcher:getListeners(java.lang.Class) (S)java.lang.reflect.Array:newInstance(java.lang.Class,int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:getListeners(java.lang.Class) (M)javax.swing.event.EventListenerList:getListenerList()
M:org.apache.batik.gvt.event.AWTEventDispatcher:getListeners(java.lang.Class) (M)java.lang.Object:equals(java.lang.Object)
M:org.apache.batik.gvt.event.AWTEventDispatcher:getListeners(java.lang.Class) (S)java.lang.reflect.Array:set(java.lang.Object,int,java.lang.Object)
M:org.apache.batik.gvt.event.AWTEventDispatcher:setEventDispatchEnabled(boolean) (I)java.util.List:size()
M:org.apache.batik.gvt.event.AWTEventDispatcher:setEventDispatchEnabled(boolean) (I)java.util.List:remove(int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:setEventDispatchEnabled(boolean) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject)
M:org.apache.batik.gvt.event.AWTEventDispatcher:setEventQueueMaxSize(int) (I)java.util.List:clear()
M:org.apache.batik.gvt.event.AWTEventDispatcher:setEventQueueMaxSize(int) (I)java.util.List:size()
M:org.apache.batik.gvt.event.AWTEventDispatcher:setEventQueueMaxSize(int) (I)java.util.List:remove(int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject) (I)java.util.List:size()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject) (I)java.util.List:remove(int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseWheelEvent(java.awt.event.MouseWheelEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject) (M)org.apache.batik.gvt.event.AWTEventDispatcher:isNodeIncrementEvent(java.awt.event.InputEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject) (O)org.apache.batik.gvt.event.AWTEventDispatcher:incrementKeyTarget()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject) (M)org.apache.batik.gvt.event.AWTEventDispatcher:isNodeDecrementEvent(java.awt.event.InputEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject) (O)org.apache.batik.gvt.event.AWTEventDispatcher:decrementKeyTarget()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchEvent(java.util.EventObject) (M)org.apache.batik.gvt.event.AWTEventDispatcher:dispatchKeyEvent(java.awt.event.KeyEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:getCurrentLockState() (S)java.awt.Toolkit:getDefaultToolkit()
M:org.apache.batik.gvt.event.AWTEventDispatcher:getCurrentLockState() (M)java.awt.Toolkit:getLockingKeyState(int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:getCurrentLockState() (M)java.awt.Toolkit:getLockingKeyState(int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:getCurrentLockState() (M)java.awt.Toolkit:getLockingKeyState(int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:getCurrentLockState() (M)java.awt.Toolkit:getLockingKeyState(int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getID()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getWhen()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getModifiersEx()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchKeyEvent(java.awt.event.KeyEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:getCurrentLockState()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyChar()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchKeyEvent(java.awt.event.KeyEvent) (M)java.awt.event.KeyEvent:getKeyLocation()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchKeyEvent(java.awt.event.KeyEvent) (O)org.apache.batik.gvt.event.GraphicsNodeKeyEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int,int,char,int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchKeyEvent(java.awt.event.KeyEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.AffineTransform:transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (I)org.apache.batik.gvt.GraphicsNode:nodeHitAt(java.awt.geom.Point2D)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (I)org.apache.batik.gvt.GraphicsNode:getGlobalTransform()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.AffineTransform:createInverse()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.AffineTransform:transform(java.awt.geom.Point2D,java.awt.geom.Point2D)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getComponent()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.Component:isShowing()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (O)java.awt.Point:<init>(int,int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getComponent()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.Component:getLocationOnScreen()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getX()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getY()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:getCurrentLockState()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getWhen()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getModifiersEx()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getButton()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (S)java.lang.Math:floor(double)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (S)java.lang.Math:floor(double)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getClickCount()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (O)org.apache.batik.gvt.event.GraphicsNodeMouseEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int,int,float,float,int,int,int,int,int,org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getWhen()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getModifiersEx()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getButton()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (S)java.lang.Math:floor(double)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (S)java.lang.Math:floor(double)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getClickCount()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (O)org.apache.batik.gvt.event.GraphicsNodeMouseEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int,int,float,float,int,int,int,int,int,org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getID()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getWhen()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getModifiersEx()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getButton()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (S)java.lang.Math:floor(double)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (S)java.lang.Math:floor(double)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getClickCount()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (O)org.apache.batik.gvt.event.GraphicsNodeMouseEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int,int,float,float,int,int,int,int,int,org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getID()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getWhen()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getModifiersEx()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getButton()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (S)java.lang.Math:floor(double)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (S)java.lang.Math:floor(double)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)java.awt.event.MouseEvent:getClickCount()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (O)org.apache.batik.gvt.event.GraphicsNodeMouseEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int,int,float,float,int,int,int,int,int,org.apache.batik.gvt.GraphicsNode)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseEvent(java.awt.event.MouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseWheelEvent(java.awt.event.MouseWheelEvent) (M)java.awt.event.MouseWheelEvent:getID()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseWheelEvent(java.awt.event.MouseWheelEvent) (M)java.awt.event.MouseWheelEvent:getWhen()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseWheelEvent(java.awt.event.MouseWheelEvent) (M)java.awt.event.MouseWheelEvent:getModifiersEx()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseWheelEvent(java.awt.event.MouseWheelEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:getCurrentLockState()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseWheelEvent(java.awt.event.MouseWheelEvent) (M)java.awt.event.MouseWheelEvent:getWheelRotation()
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseWheelEvent(java.awt.event.MouseWheelEvent) (O)org.apache.batik.gvt.event.GraphicsNodeMouseWheelEvent:<init>(org.apache.batik.gvt.GraphicsNode,int,long,int,int,int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:dispatchMouseWheelEvent(java.awt.event.MouseWheelEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:processMouseWheelEvent(org.apache.batik.gvt.event.GraphicsNodeMouseWheelEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:getListeners(java.lang.Class)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (M)org.apache.batik.gvt.event.GraphicsNodeMouseEvent:getID()
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (I)org.apache.batik.gvt.event.GraphicsNodeMouseListener:mouseMoved(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (I)org.apache.batik.gvt.event.GraphicsNodeMouseListener:mouseDragged(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (I)org.apache.batik.gvt.event.GraphicsNodeMouseListener:mouseEntered(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (I)org.apache.batik.gvt.event.GraphicsNodeMouseListener:mouseExited(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (I)org.apache.batik.gvt.event.GraphicsNodeMouseListener:mouseClicked(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (I)org.apache.batik.gvt.event.GraphicsNodeMouseListener:mousePressed(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (I)org.apache.batik.gvt.event.GraphicsNodeMouseListener:mouseReleased(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (M)org.apache.batik.gvt.event.GraphicsNodeMouseEvent:getID()
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseEvent(org.apache.batik.gvt.event.GraphicsNodeMouseEvent) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseWheelEvent(org.apache.batik.gvt.event.GraphicsNodeMouseWheelEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:getListeners(java.lang.Class)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processMouseWheelEvent(org.apache.batik.gvt.event.GraphicsNodeMouseWheelEvent) (I)org.apache.batik.gvt.event.GraphicsNodeMouseWheelListener:mouseWheelMoved(org.apache.batik.gvt.event.GraphicsNodeMouseWheelEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent) (M)org.apache.batik.gvt.event.AWTEventDispatcher:getListeners(java.lang.Class)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent) (M)org.apache.batik.gvt.event.GraphicsNodeKeyEvent:getID()
M:org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent) (I)org.apache.batik.gvt.event.GraphicsNodeKeyListener:keyPressed(org.apache.batik.gvt.event.GraphicsNodeKeyEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent) (I)org.apache.batik.gvt.event.GraphicsNodeKeyListener:keyReleased(org.apache.batik.gvt.event.GraphicsNodeKeyEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent) (I)org.apache.batik.gvt.event.GraphicsNodeKeyListener:keyTyped(org.apache.batik.gvt.event.GraphicsNodeKeyEvent)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent) (M)org.apache.batik.gvt.event.GraphicsNodeKeyEvent:getID()
M:org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent) (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.event.AWTEventDispatcher:processKeyEvent(org.apache.batik.gvt.event.GraphicsNodeKeyEvent) (M)org.apache.batik.gvt.event.GraphicsNodeKeyEvent:consume()
M:org.apache.batik.gvt.event.AWTEventDispatcher:incrementKeyTarget() (O)java.lang.UnsupportedOperationException:<init>(java.lang.String)
M:org.apache.batik.gvt.event.AWTEventDispatcher:decrementKeyTarget() (O)java.lang.UnsupportedOperationException:<init>(java.lang.String)
M:org.apache.batik.gvt.event.AWTEventDispatcher:setNodeIncrementEvent(java.awt.event.InputEvent) (M)java.awt.event.InputEvent:getID()
M:org.apache.batik.gvt.event.AWTEventDispatcher:setNodeIncrementEvent(java.awt.event.InputEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.apache.batik.gvt.event.AWTEventDispatcher:setNodeIncrementEvent(java.awt.event.InputEvent) (M)java.awt.event.InputEvent:getModifiersEx()
M:org.apache.batik.gvt.event.AWTEventDispatcher:setNodeDecrementEvent(java.awt.event.InputEvent) (M)java.awt.event.InputEvent:getID()
M:org.apache.batik.gvt.event.AWTEventDispatcher:setNodeDecrementEvent(java.awt.event.InputEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.apache.batik.gvt.event.AWTEventDispatcher:setNodeDecrementEvent(java.awt.event.InputEvent) (M)java.awt.event.InputEvent:getModifiersEx()
M:org.apache.batik.gvt.event.AWTEventDispatcher:isNodeIncrementEvent(java.awt.event.InputEvent) (M)java.awt.event.InputEvent:getID()
M:org.apache.batik.gvt.event.AWTEventDispatcher:isNodeIncrementEvent(java.awt.event.InputEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.apache.batik.gvt.event.AWTEventDispatcher:isNodeIncrementEvent(java.awt.event.InputEvent) (M)java.awt.event.InputEvent:getModifiersEx()
M:org.apache.batik.gvt.event.AWTEventDispatcher:isNodeDecrementEvent(java.awt.event.InputEvent) (M)java.awt.event.InputEvent:getID()
M:org.apache.batik.gvt.event.AWTEventDispatcher:isNodeDecrementEvent(java.awt.event.InputEvent) (M)java.awt.event.KeyEvent:getKeyCode()
M:org.apache.batik.gvt.event.AWTEventDispatcher:isNodeDecrementEvent(java.awt.event.InputEvent) (M)java.awt.event.InputEvent:getModifiersEx()
M:org.apache.batik.gvt.GraphicsNode:<clinit>() (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.flow.TextLineBreaks:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.flow.TextLineBreaks:findComplexBreak(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:current()
M:org.apache.batik.gvt.flow.TextLineBreaks:findComplexBreak(java.text.AttributedCharacterIterator) (S)org.apache.batik.gvt.flow.TextLineBreaks:getCharCharClass(char)
M:org.apache.batik.gvt.flow.TextLineBreaks:findComplexBreak(java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (M)java.text.AttributedString:getIterator()
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getEndIndex()
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:current()
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)org.apache.batik.gvt.flow.TextLineBreaks:getCharCharClass(char)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getRunLimit(java.util.Set)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)org.apache.batik.gvt.flow.TextLineBreaks:getCharCharClass(char)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:getRunLimit(java.util.Set)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)org.apache.batik.gvt.flow.TextLineBreaks:getCharCharClass(char)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)org.apache.batik.gvt.flow.TextLineBreaks:findComplexBreak(java.text.AttributedCharacterIterator)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:previous()
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)org.apache.batik.gvt.flow.TextLineBreaks:getCharCharClass(char)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)org.apache.batik.gvt.flow.TextLineBreaks:getCharCharClass(char)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (I)java.text.AttributedCharacterIterator:next()
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.gvt.flow.TextLineBreaks:findLineBrk(java.text.AttributedString) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.gvt.flow.TextLineBreaks:stringToLineBreakClasses(java.lang.String) (M)java.lang.String:length()
M:org.apache.batik.gvt.flow.TextLineBreaks:stringToLineBreakClasses(java.lang.String) (M)java.lang.String:charAt(int)
M:org.apache.batik.gvt.flow.TextLineBreaks:stringToLineBreakClasses(java.lang.String) (S)org.apache.batik.gvt.flow.TextLineBreaks:getCharCharClass(char)
M:org.apache.batik.gvt.flow.TextLineBreaks:getCharCharClass(char) (S)org.apache.batik.gvt.flow.TextLineBreaks:buildQuickLut()
M:org.apache.batik.gvt.flow.TextLineBreaks:<clinit>() (O)org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute:<init>(java.lang.String)
M:org.apache.batik.gvt.flow.TextLineBreaks:<clinit>() (O)java.util.HashSet:<init>()
M:org.apache.batik.gvt.flow.TextLineBreaks:<clinit>() (I)java.util.Set:add(java.lang.Object)
M:org.apache.batik.gvt.flow.TextLineBreaks:<clinit>() (I)java.util.Set:add(java.lang.Object)
M:org.apache.batik.gvt.flow.GlyphGroupInfo:<init>(org.apache.batik.gvt.font.GVTGlyphVector,int,int,boolean[],boolean,float[],float[],float[],boolean[]) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.flow.GlyphGroupInfo:<init>(org.apache.batik.gvt.font.GVTGlyphVector,int,int,boolean[],boolean,float[],float[],float[],boolean[]) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.gvt.flow.BlockInfo:<init>(float,float,float,float,float,int,float,java.util.List,java.util.Map,boolean) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.flow.BlockInfo:<init>(float,int) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.flow.BlockInfo:<init>(float,int) (M)org.apache.batik.gvt.flow.BlockInfo:setMargin(float)
M:org.apache.batik.gvt.flow.BlockInfo:initLineInfo(java.awt.font.FontRenderContext) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.gvt.flow.BlockInfo:initLineInfo(java.awt.font.FontRenderContext) (M)java.lang.Float:floatValue()
M:org.apache.batik.gvt.flow.BlockInfo:initLineInfo(java.awt.font.FontRenderContext) (I)java.util.List:iterator()
M:org.apache.batik.gvt.flow.BlockInfo:initLineInfo(java.awt.font.FontRenderContext) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.flow.BlockInfo:initLineInfo(java.awt.font.FontRenderContext) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.flow.BlockInfo:initLineInfo(java.awt.font.FontRenderContext) (I)org.apache.batik.gvt.font.GVTFont:getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)
M:org.apache.batik.gvt.flow.BlockInfo:initLineInfo(java.awt.font.FontRenderContext) (M)org.apache.batik.gvt.font.GVTLineMetrics:getAscent()
M:org.apache.batik.gvt.flow.BlockInfo:initLineInfo(java.awt.font.FontRenderContext) (M)org.apache.batik.gvt.font.GVTLineMetrics:getDescent()
M:org.apache.batik.gvt.flow.MarginInfo:<init>(float,float,float,float,float,int,float,boolean,boolean) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.flow.MarginInfo:<init>(float,int) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.flow.MarginInfo:<init>(float,int) (M)org.apache.batik.gvt.flow.MarginInfo:setMargin(float)
M:org.apache.batik.gvt.flow.FlowRegions$TransitionComp:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.flow.FlowRegions$TransitionComp:<clinit>() (O)org.apache.batik.gvt.flow.FlowRegions$TransitionComp:<init>()
M:org.apache.batik.gvt.flow.FlowRegions:<init>(java.awt.Shape) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.gvt.flow.FlowRegions:<init>(java.awt.Shape) (M)java.awt.geom.Rectangle2D:getY()
M:org.apache.batik.gvt.flow.FlowRegions:<init>(java.awt.Shape) (O)org.apache.batik.gvt.flow.FlowRegions:<init>(java.awt.Shape,double)
M:org.apache.batik.gvt.flow.FlowRegions:<init>(java.awt.Shape,double) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.flow.FlowRegions:<init>(java.awt.Shape,double) (O)org.apache.batik.ext.awt.geom.SegmentList:<init>(java.awt.Shape)
M:org.apache.batik.gvt.flow.FlowRegions:<init>(java.awt.Shape,double) (M)org.apache.batik.gvt.flow.FlowRegions:gotoY(double)
M:org.apache.batik.gvt.flow.FlowRegions:gotoY(double) (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.gvt.flow.FlowRegions:gotoY(double) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.flow.FlowRegions:gotoY(double) (M)java.lang.StringBuilder:append(double)
M:org.apache.batik.gvt.flow.FlowRegions:gotoY(double) (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.gvt.flow.FlowRegions:gotoY(double) (M)java.lang.StringBuilder:append(double)
M:org.apache.batik.gvt.flow.FlowRegions:gotoY(double) (M)java.lang.StringBuilder:toString()
M:org.apache.batik.gvt.flow.FlowRegions:gotoY(double) (O)java.lang.IllegalArgumentException:<init>(java.lang.String)
M:org.apache.batik.gvt.flow.FlowRegions:gotoY(double) (M)org.apache.batik.ext.awt.geom.SegmentList:split(double)
M:org.apache.batik.gvt.flow.FlowRegions:gotoY(double) (M)org.apache.batik.ext.awt.geom.SegmentList$SplitResults:getBelow()
M:org.apache.batik.gvt.flow.FlowRegions:gotoY(double) (M)org.apache.batik.gvt.flow.FlowRegions:newLineHeight(double)
M:org.apache.batik.gvt.flow.FlowRegions:newLineHeight(double) (M)org.apache.batik.ext.awt.geom.SegmentList:split(double)
M:org.apache.batik.gvt.flow.FlowRegions:newLineHeight(double) (M)org.apache.batik.ext.awt.geom.SegmentList$SplitResults:getAbove()
M:org.apache.batik.gvt.flow.FlowRegions:newLineHeight(double) (M)org.apache.batik.ext.awt.geom.SegmentList$SplitResults:getAbove()
M:org.apache.batik.gvt.flow.FlowRegions:newLineHeight(double) (M)org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList)
M:org.apache.batik.gvt.flow.FlowRegions:getNumRangeOnLine() (I)java.util.List:size()
M:org.apache.batik.gvt.flow.FlowRegions:nextRange() (I)java.util.List:size()
M:org.apache.batik.gvt.flow.FlowRegions:nextRange() (I)java.util.List:get(int)
M:org.apache.batik.gvt.flow.FlowRegions:endLine() (M)org.apache.batik.ext.awt.geom.SegmentList$SplitResults:getBelow()
M:org.apache.batik.gvt.flow.FlowRegions:newLine() (M)org.apache.batik.gvt.flow.FlowRegions:newLine(double)
M:org.apache.batik.gvt.flow.FlowRegions:newLine(double) (M)org.apache.batik.ext.awt.geom.SegmentList$SplitResults:getBelow()
M:org.apache.batik.gvt.flow.FlowRegions:newLine(double) (M)org.apache.batik.gvt.flow.FlowRegions:newLineHeight(double)
M:org.apache.batik.gvt.flow.FlowRegions:newLineAt(double,double) (M)org.apache.batik.ext.awt.geom.SegmentList$SplitResults:getBelow()
M:org.apache.batik.gvt.flow.FlowRegions:newLineAt(double,double) (M)org.apache.batik.gvt.flow.FlowRegions:newLineHeight(double)
M:org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList) (M)org.apache.batik.ext.awt.geom.SegmentList:size()
M:org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList) (M)org.apache.batik.ext.awt.geom.SegmentList:iterator()
M:org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList) (I)org.apache.batik.ext.awt.geom.Segment:minX()
M:org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList) (O)org.apache.batik.gvt.flow.FlowRegions$Transition:<init>(double,boolean)
M:org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList) (I)org.apache.batik.ext.awt.geom.Segment:maxX()
M:org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList) (O)org.apache.batik.gvt.flow.FlowRegions$Transition:<init>(double,boolean)
M:org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList) (S)java.util.Arrays:sort(java.lang.Object[],java.util.Comparator)
M:org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList) (O)java.util.ArrayList:<init>()
M:org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList) (I)java.awt.Shape:contains(double,double)
M:org.apache.batik.gvt.flow.FlowRegions:sortRow(org.apache.batik.ext.awt.geom.SegmentList) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.gvt.flow.RegionInfo:<init>(java.awt.Shape,float) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.flow.LineInfo:<init>(org.apache.batik.gvt.flow.FlowRegions,org.apache.batik.gvt.flow.BlockInfo,boolean) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.flow.LineInfo:<init>(org.apache.batik.gvt.flow.FlowRegions,org.apache.batik.gvt.flow.BlockInfo,boolean) (M)org.apache.batik.gvt.flow.BlockInfo:getLineHeight()
M:org.apache.batik.gvt.flow.LineInfo:<init>(org.apache.batik.gvt.flow.FlowRegions,org.apache.batik.gvt.flow.BlockInfo,boolean) (M)org.apache.batik.gvt.flow.BlockInfo:getAscent()
M:org.apache.batik.gvt.flow.LineInfo:<init>(org.apache.batik.gvt.flow.FlowRegions,org.apache.batik.gvt.flow.BlockInfo,boolean) (M)org.apache.batik.gvt.flow.BlockInfo:getDescent()
M:org.apache.batik.gvt.flow.LineInfo:<init>(org.apache.batik.gvt.flow.FlowRegions,org.apache.batik.gvt.flow.BlockInfo,boolean) (M)org.apache.batik.gvt.flow.FlowRegions:getCurrentY()
M:org.apache.batik.gvt.flow.LineInfo:<init>(org.apache.batik.gvt.flow.FlowRegions,org.apache.batik.gvt.flow.BlockInfo,boolean) (M)org.apache.batik.gvt.flow.FlowRegions:newLineHeight(double)
M:org.apache.batik.gvt.flow.LineInfo:<init>(org.apache.batik.gvt.flow.FlowRegions,org.apache.batik.gvt.flow.BlockInfo,boolean) (M)org.apache.batik.gvt.flow.LineInfo:updateRangeInfo()
M:org.apache.batik.gvt.flow.LineInfo:addWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.WordInfo:getLineHeight()
M:org.apache.batik.gvt.flow.LineInfo:addWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.LineInfo:insertWord(org.apache.batik.gvt.flow.WordInfo)
M:org.apache.batik.gvt.flow.LineInfo:addWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.FlowRegions:newLineHeight(double)
M:org.apache.batik.gvt.flow.LineInfo:addWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.LineInfo:updateRangeInfo()
M:org.apache.batik.gvt.flow.LineInfo:addWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.FlowRegions:newLineHeight(double)
M:org.apache.batik.gvt.flow.LineInfo:addWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.LineInfo:insertWord(org.apache.batik.gvt.flow.WordInfo)
M:org.apache.batik.gvt.flow.LineInfo:addWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.LineInfo:setLineHeight(double)
M:org.apache.batik.gvt.flow.LineInfo:addWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.WordInfo:getAscent()
M:org.apache.batik.gvt.flow.LineInfo:addWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.WordInfo:getAscent()
M:org.apache.batik.gvt.flow.LineInfo:addWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.WordInfo:getDescent()
M:org.apache.batik.gvt.flow.LineInfo:addWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.WordInfo:getDescent()
M:org.apache.batik.gvt.flow.LineInfo:addWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.FlowRegions:getCurrentY()
M:org.apache.batik.gvt.flow.LineInfo:insertWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.LineInfo:mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo)
M:org.apache.batik.gvt.flow.LineInfo:insertWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.LineInfo:assignGlyphGroupRanges(int,org.apache.batik.gvt.flow.GlyphGroupInfo[])
M:org.apache.batik.gvt.flow.LineInfo:insertWord(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.LineInfo:swapGlyphGroupInfo()
M:org.apache.batik.gvt.flow.LineInfo:assignGlyphGroupRanges(int,org.apache.batik.gvt.flow.GlyphGroupInfo[]) (M)org.apache.batik.gvt.flow.GlyphGroupInfo:setRange(int)
M:org.apache.batik.gvt.flow.LineInfo:assignGlyphGroupRanges(int,org.apache.batik.gvt.flow.GlyphGroupInfo[]) (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getAdvance()
M:org.apache.batik.gvt.flow.LineInfo:assignGlyphGroupRanges(int,org.apache.batik.gvt.flow.GlyphGroupInfo[]) (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getLastAdvance()
M:org.apache.batik.gvt.flow.LineInfo:assignGlyphGroupRanges(int,org.apache.batik.gvt.flow.GlyphGroupInfo[]) (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getRange()
M:org.apache.batik.gvt.flow.LineInfo:assignGlyphGroupRanges(int,org.apache.batik.gvt.flow.GlyphGroupInfo[]) (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getAdvance()
M:org.apache.batik.gvt.flow.LineInfo:assignGlyphGroupRanges(int,org.apache.batik.gvt.flow.GlyphGroupInfo[]) (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getLastAdvance()
M:org.apache.batik.gvt.flow.LineInfo:setLineHeight(double) (M)org.apache.batik.gvt.flow.FlowRegions:newLineHeight(double)
M:org.apache.batik.gvt.flow.LineInfo:setLineHeight(double) (M)org.apache.batik.gvt.flow.LineInfo:updateRangeInfo()
M:org.apache.batik.gvt.flow.LineInfo:setLineHeight(double) (M)org.apache.batik.gvt.flow.FlowRegions:newLineHeight(double)
M:org.apache.batik.gvt.flow.LineInfo:getCurrentY() (M)org.apache.batik.gvt.flow.FlowRegions:getCurrentY()
M:org.apache.batik.gvt.flow.LineInfo:gotoY(double) (M)org.apache.batik.gvt.flow.FlowRegions:gotoY(double)
M:org.apache.batik.gvt.flow.LineInfo:gotoY(double) (M)org.apache.batik.gvt.flow.LineInfo:updateRangeInfo()
M:org.apache.batik.gvt.flow.LineInfo:gotoY(double) (M)org.apache.batik.gvt.flow.FlowRegions:getCurrentY()
M:org.apache.batik.gvt.flow.LineInfo:updateRangeInfo() (M)org.apache.batik.gvt.flow.FlowRegions:resetRange()
M:org.apache.batik.gvt.flow.LineInfo:updateRangeInfo() (M)org.apache.batik.gvt.flow.FlowRegions:getNumRangeOnLine()
M:org.apache.batik.gvt.flow.LineInfo:updateRangeInfo() (M)org.apache.batik.gvt.flow.FlowRegions:nextRange()
M:org.apache.batik.gvt.flow.LineInfo:updateRangeInfo() (M)org.apache.batik.gvt.flow.BlockInfo:getLeftMargin()
M:org.apache.batik.gvt.flow.LineInfo:updateRangeInfo() (M)org.apache.batik.gvt.flow.BlockInfo:getIndent()
M:org.apache.batik.gvt.flow.LineInfo:updateRangeInfo() (M)org.apache.batik.gvt.flow.BlockInfo:getRightMargin()
M:org.apache.batik.gvt.flow.LineInfo:mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.WordInfo:getNumGlyphGroups()
M:org.apache.batik.gvt.flow.LineInfo:mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.WordInfo:getGlyphGroup(int)
M:org.apache.batik.gvt.flow.LineInfo:mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.WordInfo:getGlyphGroup(int)
M:org.apache.batik.gvt.flow.LineInfo:mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getStart()
M:org.apache.batik.gvt.flow.LineInfo:mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getStart()
M:org.apache.batik.gvt.flow.LineInfo:mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo) (S)org.apache.batik.gvt.flow.LineInfo:assureSize(org.apache.batik.gvt.flow.GlyphGroupInfo[],int)
M:org.apache.batik.gvt.flow.LineInfo:mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getStart()
M:org.apache.batik.gvt.flow.LineInfo:mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.WordInfo:getGlyphGroup(int)
M:org.apache.batik.gvt.flow.LineInfo:mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getStart()
M:org.apache.batik.gvt.flow.LineInfo:mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getStart()
M:org.apache.batik.gvt.flow.LineInfo:mergeGlyphGroups(org.apache.batik.gvt.flow.WordInfo) (M)org.apache.batik.gvt.flow.WordInfo:getGlyphGroup(int)
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.LineInfo:assignGlyphGroupRanges(int,org.apache.batik.gvt.flow.GlyphGroupInfo[])
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getGlyphVector()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getRange()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getGlyphCount()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getRange()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getHideLast()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getGlyphCount()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getRange()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getLastGlyphCount()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getGlyphCount()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getLastGlyphCount()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getGlyphCount()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getRange()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.BlockInfo:getTextAlignment()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getHideLast()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getEnd()
M:org.apache.batik.gvt.flow.LineInfo:layout() (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphVisible(int,boolean)
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getStart()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getEnd()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getHide()
M:org.apache.batik.gvt.flow.LineInfo:layout() (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphPosition(int)
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.flow.LineInfo:layout() (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphPosition(int)
M:org.apache.batik.gvt.flow.LineInfo:layout() (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphVisible(int,boolean)
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.flow.LineInfo:layout() (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphVisible(int,boolean)
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)java.awt.geom.Point2D:setLocation(double,double)
M:org.apache.batik.gvt.flow.LineInfo:layout() (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D)
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getHideLast()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getAdvance()
M:org.apache.batik.gvt.flow.LineInfo:layout() (M)org.apache.batik.gvt.flow.GlyphGroupInfo:getAdvance()
M:org.apache.batik.gvt.flow.WordInfo:<init>(int) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.flow.WordInfo:<init>(int,float,float,float,org.apache.batik.gvt.flow.GlyphGroupInfo[]) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.flow.WordInfo:addLineMetrics(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.GVTLineMetrics) (M)org.apache.batik.gvt.font.GVTLineMetrics:getAscent()
M:org.apache.batik.gvt.flow.WordInfo:addLineMetrics(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.GVTLineMetrics) (M)org.apache.batik.gvt.font.GVTLineMetrics:getAscent()
M:org.apache.batik.gvt.flow.WordInfo:addLineMetrics(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.GVTLineMetrics) (M)org.apache.batik.gvt.font.GVTLineMetrics:getDescent()
M:org.apache.batik.gvt.flow.WordInfo:addLineMetrics(org.apache.batik.gvt.font.GVTFont,org.apache.batik.gvt.font.GVTLineMetrics) (M)org.apache.batik.gvt.font.GVTLineMetrics:getDescent()
M:org.apache.batik.gvt.flow.FlowRegions$Transition:<init>(double,boolean) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.renderer.StaticRenderer:<init>(java.awt.RenderingHints,java.awt.geom.AffineTransform) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.renderer.StaticRenderer:<init>(java.awt.RenderingHints,java.awt.geom.AffineTransform) (O)java.awt.RenderingHints:<init>(java.util.Map)
M:org.apache.batik.gvt.renderer.StaticRenderer:<init>(java.awt.RenderingHints,java.awt.geom.AffineTransform) (M)java.awt.RenderingHints:add(java.awt.RenderingHints)
M:org.apache.batik.gvt.renderer.StaticRenderer:<init>(java.awt.RenderingHints,java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.renderer.StaticRenderer:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.renderer.StaticRenderer:<init>() (O)java.awt.RenderingHints:<init>(java.util.Map)
M:org.apache.batik.gvt.renderer.StaticRenderer:<init>() (M)java.awt.RenderingHints:add(java.awt.RenderingHints)
M:org.apache.batik.gvt.renderer.StaticRenderer:<init>() (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.renderer.StaticRenderer:setRenderingHints(java.awt.RenderingHints) (O)java.awt.RenderingHints:<init>(java.util.Map)
M:org.apache.batik.gvt.renderer.StaticRenderer:setRenderingHints(java.awt.RenderingHints) (M)java.awt.RenderingHints:add(java.awt.RenderingHints)
M:org.apache.batik.gvt.renderer.StaticRenderer:setTransform(java.awt.geom.AffineTransform) (M)java.awt.geom.AffineTransform:equals(java.lang.Object)
M:org.apache.batik.gvt.renderer.StaticRenderer:setTransform(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.renderer.StaticRenderer:setTransform(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.renderer.StaticRenderer:clearOffScreen() (M)org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers()
M:org.apache.batik.gvt.renderer.StaticRenderer:clearOffScreen() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getColorModel()
M:org.apache.batik.gvt.renderer.StaticRenderer:clearOffScreen() (M)java.awt.image.ColorModel:isAlphaPremultiplied()
M:org.apache.batik.gvt.renderer.StaticRenderer:clearOffScreen() (O)java.awt.image.BufferedImage:<init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)
M:org.apache.batik.gvt.renderer.StaticRenderer:clearOffScreen() (M)java.awt.image.BufferedImage:createGraphics()
M:org.apache.batik.gvt.renderer.StaticRenderer:clearOffScreen() (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.renderer.StaticRenderer:clearOffScreen() (M)java.awt.image.BufferedImage:getWidth()
M:org.apache.batik.gvt.renderer.StaticRenderer:clearOffScreen() (M)java.awt.image.BufferedImage:getHeight()
M:org.apache.batik.gvt.renderer.StaticRenderer:clearOffScreen() (M)java.awt.Graphics2D:fillRect(int,int,int,int)
M:org.apache.batik.gvt.renderer.StaticRenderer:clearOffScreen() (M)java.awt.Graphics2D:dispose()
M:org.apache.batik.gvt.renderer.StaticRenderer:repaint(java.awt.Shape) (O)org.apache.batik.ext.awt.geom.RectListManager:<init>()
M:org.apache.batik.gvt.renderer.StaticRenderer:repaint(java.awt.Shape) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.renderer.StaticRenderer:repaint(java.awt.Shape) (I)java.awt.Shape:getBounds()
M:org.apache.batik.gvt.renderer.StaticRenderer:repaint(java.awt.Shape) (M)org.apache.batik.ext.awt.geom.RectListManager:add(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.StaticRenderer:repaint(java.awt.Shape) (M)org.apache.batik.gvt.renderer.StaticRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager)
M:org.apache.batik.gvt.renderer.StaticRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers()
M:org.apache.batik.gvt.renderer.StaticRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getBounds()
M:org.apache.batik.gvt.renderer.StaticRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.image.WritableRaster:getBounds()
M:org.apache.batik.gvt.renderer.StaticRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (O)org.apache.batik.ext.awt.image.rendered.PadRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.Rectangle,org.apache.batik.ext.awt.image.PadMode,java.awt.RenderingHints)
M:org.apache.batik.gvt.renderer.StaticRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)org.apache.batik.ext.awt.image.rendered.CachableRed:copyData(java.awt.image.WritableRaster)
M:org.apache.batik.gvt.renderer.StaticRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (S)org.apache.batik.util.HaltingThread:hasBeenHalted()
M:org.apache.batik.gvt.renderer.StaticRenderer:flush() (M)java.lang.ref.SoftReference:get()
M:org.apache.batik.gvt.renderer.StaticRenderer:flush() (M)org.apache.batik.ext.awt.image.rendered.TileCacheRed:getBounds()
M:org.apache.batik.gvt.renderer.StaticRenderer:flush() (M)org.apache.batik.ext.awt.image.rendered.TileCacheRed:flushCache(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.util.Collection) (M)org.apache.batik.gvt.renderer.StaticRenderer:getTransform()
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.util.Collection) (I)java.util.Collection:iterator()
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.util.Collection) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.util.Collection) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.util.Collection) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.util.Collection) (I)java.awt.Shape:getBounds()
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.util.Collection) (M)org.apache.batik.gvt.renderer.StaticRenderer:flush(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.awt.Rectangle) (M)java.lang.ref.SoftReference:get()
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.awt.Rectangle) (M)java.awt.Rectangle:clone()
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.awt.Rectangle) (M)java.awt.geom.AffineTransform:getTranslateX()
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.awt.Rectangle) (S)java.lang.Math:round(float)
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.awt.Rectangle) (M)java.awt.geom.AffineTransform:getTranslateY()
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.awt.Rectangle) (S)java.lang.Math:round(float)
M:org.apache.batik.gvt.renderer.StaticRenderer:flush(java.awt.Rectangle) (M)org.apache.batik.ext.awt.image.rendered.TileCacheRed:flushCache(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.StaticRenderer:setupCache(org.apache.batik.ext.awt.image.rendered.CachableRed) (M)java.lang.ref.SoftReference:get()
M:org.apache.batik.gvt.renderer.StaticRenderer:setupCache(org.apache.batik.ext.awt.image.rendered.CachableRed) (O)java.lang.ref.SoftReference:<init>(java.lang.Object)
M:org.apache.batik.gvt.renderer.StaticRenderer:setupCache(org.apache.batik.ext.awt.image.rendered.CachableRed) (M)java.lang.ref.SoftReference:get()
M:org.apache.batik.gvt.renderer.StaticRenderer:setupCache(org.apache.batik.ext.awt.image.rendered.CachableRed) (O)org.apache.batik.ext.awt.image.rendered.TileCacheRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed)
M:org.apache.batik.gvt.renderer.StaticRenderer:setupCache(org.apache.batik.ext.awt.image.rendered.CachableRed) (O)java.lang.ref.SoftReference:<init>(java.lang.Object)
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (M)java.awt.geom.AffineTransform:getScaleX()
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (M)java.awt.geom.AffineTransform:getShearY()
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (M)java.awt.geom.AffineTransform:getShearX()
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (M)java.awt.geom.AffineTransform:getScaleY()
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (O)java.awt.geom.AffineTransform:<init>(double,double,double,double,double,double)
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (O)java.awt.image.renderable.RenderContext:<init>(java.awt.geom.AffineTransform,java.awt.Shape,java.awt.RenderingHints)
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (I)org.apache.batik.ext.awt.image.renderable.Filter:createRendering(java.awt.image.renderable.RenderContext)
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (S)org.apache.batik.ext.awt.image.GraphicsUtil:wrap(java.awt.image.RenderedImage)
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (M)org.apache.batik.gvt.renderer.StaticRenderer:setupCache(org.apache.batik.ext.awt.image.rendered.CachableRed)
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (M)java.awt.geom.AffineTransform:getTranslateX()
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (S)java.lang.Math:round(float)
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (M)java.awt.geom.AffineTransform:getTranslateY()
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (S)java.lang.Math:round(float)
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getMinX()
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getMinY()
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (O)org.apache.batik.ext.awt.image.rendered.TranslateRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed,int,int)
M:org.apache.batik.gvt.renderer.StaticRenderer:renderGNR() (S)org.apache.batik.ext.awt.image.GraphicsUtil:convertTosRGB(org.apache.batik.ext.awt.image.rendered.CachableRed)
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (I)org.apache.batik.gvt.GraphicsNode:getGraphicsNodeRable(boolean)
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (M)org.apache.batik.gvt.renderer.StaticRenderer:renderGNR()
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getSampleModel()
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (M)java.awt.image.SampleModel:getWidth()
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (M)java.awt.image.SampleModel:getHeight()
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (M)java.awt.image.WritableRaster:getWidth()
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (M)java.awt.image.WritableRaster:getHeight()
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (M)java.awt.image.SampleModel:createCompatibleSampleModel(int,int)
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (O)java.awt.Point:<init>(int,int)
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (S)java.awt.image.Raster:createWritableRaster(java.awt.image.SampleModel,java.awt.Point)
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getTileGridXOffset()
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getTileGridYOffset()
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (M)java.awt.image.WritableRaster:createWritableChild(int,int,int,int,int,int,int[])
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getColorModel()
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (M)java.awt.image.WritableRaster:createWritableChild(int,int,int,int,int,int,int[])
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getColorModel()
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (M)java.awt.image.ColorModel:isAlphaPremultiplied()
M:org.apache.batik.gvt.renderer.StaticRenderer:updateWorkingBuffers() (O)java.awt.image.BufferedImage:<init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)
M:org.apache.batik.gvt.renderer.StaticRenderer:<clinit>() (O)java.awt.RenderingHints:<init>(java.util.Map)
M:org.apache.batik.gvt.renderer.StaticRenderer:<clinit>() (M)java.awt.RenderingHints:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.renderer.StaticRenderer:<clinit>() (M)java.awt.RenderingHints:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory:createRenderer() (M)org.apache.batik.gvt.renderer.ConcreteImageRendererFactory:createStaticImageRenderer()
M:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory:createStaticImageRenderer() (O)org.apache.batik.gvt.renderer.MacRenderer:<init>()
M:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory:createStaticImageRenderer() (O)org.apache.batik.gvt.renderer.StaticRenderer:<init>()
M:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory:createDynamicImageRenderer() (O)org.apache.batik.gvt.renderer.MacRenderer:<init>()
M:org.apache.batik.gvt.renderer.ConcreteImageRendererFactory:createDynamicImageRenderer() (O)org.apache.batik.gvt.renderer.DynamicRenderer:<init>()
M:org.apache.batik.gvt.renderer.DynamicRenderer:<init>() (O)org.apache.batik.gvt.renderer.StaticRenderer:<init>()
M:org.apache.batik.gvt.renderer.DynamicRenderer:<init>(java.awt.RenderingHints,java.awt.geom.AffineTransform) (O)org.apache.batik.gvt.renderer.StaticRenderer:<init>(java.awt.RenderingHints,java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (I)org.apache.batik.gvt.GraphicsNode:getGraphicsNodeRable(boolean)
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (M)org.apache.batik.gvt.renderer.DynamicRenderer:renderGNR()
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getSampleModel()
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (M)java.awt.image.WritableRaster:getWidth()
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (M)java.awt.image.WritableRaster:getHeight()
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (M)java.awt.image.SampleModel:createCompatibleSampleModel(int,int)
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (O)java.awt.Point:<init>(int,int)
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (S)java.awt.image.Raster:createWritableRaster(java.awt.image.SampleModel,java.awt.Point)
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (M)java.awt.image.WritableRaster:createWritableChild(int,int,int,int,int,int,int[])
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getColorModel()
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getColorModel()
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (M)java.awt.image.ColorModel:isAlphaPremultiplied()
M:org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers() (O)java.awt.image.BufferedImage:<init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)org.apache.batik.gvt.renderer.DynamicRenderer:updateWorkingBuffers()
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getBounds()
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.image.WritableRaster:getBounds()
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (O)org.apache.batik.ext.awt.image.rendered.PadRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.Rectangle,org.apache.batik.ext.awt.image.PadMode,java.awt.RenderingHints)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.image.WritableRaster:getBounds()
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.image.WritableRaster:getBounds()
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)org.apache.batik.ext.awt.image.rendered.CachableRed:copyData(java.awt.image.WritableRaster)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)org.apache.batik.ext.awt.geom.RectListManager:subtract(org.apache.batik.ext.awt.geom.RectListManager,int,int)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)org.apache.batik.ext.awt.geom.RectListManager:mergeRects(int,int)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (O)java.awt.Color:<init>(int,int,int,int)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (O)java.awt.Color:<init>(int,int,int,int)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)org.apache.batik.ext.awt.geom.RectListManager:iterator()
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Rectangle:intersects(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Rectangle:intersection(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Rectangle:intersects(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Rectangle:intersection(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.image.WritableRaster:createWritableChild(int,int,int,int,int,int,int[])
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (S)org.apache.batik.ext.awt.image.GraphicsUtil:copyData(java.awt.image.Raster,java.awt.image.WritableRaster)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:setPaint(java.awt.Paint)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:fill(java.awt.Shape)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:setPaint(java.awt.Paint)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:draw(java.awt.Shape)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (O)java.awt.Color:<init>(int,int,int,int)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (O)java.awt.Color:<init>(int,int,int,int)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)org.apache.batik.ext.awt.geom.RectListManager:iterator()
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Rectangle:intersects(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Rectangle:intersection(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.image.WritableRaster:createWritableChild(int,int,int,int,int,int,int[])
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)org.apache.batik.ext.awt.image.rendered.CachableRed:copyData(java.awt.image.WritableRaster)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:setPaint(java.awt.Paint)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:fill(java.awt.Shape)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:setPaint(java.awt.Paint)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:draw(java.awt.Shape)
M:org.apache.batik.gvt.renderer.DynamicRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (S)org.apache.batik.util.HaltingThread:hasBeenHalted()
M:org.apache.batik.gvt.renderer.MacRenderer:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.renderer.MacRenderer:<init>() (O)java.awt.RenderingHints:<init>(java.util.Map)
M:org.apache.batik.gvt.renderer.MacRenderer:<init>() (M)java.awt.RenderingHints:add(java.awt.RenderingHints)
M:org.apache.batik.gvt.renderer.MacRenderer:<init>() (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.renderer.MacRenderer:<init>(java.awt.RenderingHints,java.awt.geom.AffineTransform) (O)java.lang.Object:<init>()
M:org.apache.batik.gvt.renderer.MacRenderer:<init>(java.awt.RenderingHints,java.awt.geom.AffineTransform) (O)java.awt.RenderingHints:<init>(java.util.Map)
M:org.apache.batik.gvt.renderer.MacRenderer:<init>(java.awt.RenderingHints,java.awt.geom.AffineTransform) (M)java.awt.RenderingHints:add(java.awt.RenderingHints)
M:org.apache.batik.gvt.renderer.MacRenderer:<init>(java.awt.RenderingHints,java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.renderer.MacRenderer:<init>(java.awt.RenderingHints,java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.renderer.MacRenderer:dispose() (M)org.apache.batik.ext.awt.geom.RectListManager:clear()
M:org.apache.batik.gvt.renderer.MacRenderer:setTransform(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.renderer.MacRenderer:setTransform(java.awt.geom.AffineTransform) (O)java.awt.geom.AffineTransform:<init>(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.renderer.MacRenderer:setTransform(java.awt.geom.AffineTransform) (M)java.awt.image.BufferedImage:createGraphics()
M:org.apache.batik.gvt.renderer.MacRenderer:setTransform(java.awt.geom.AffineTransform) (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.renderer.MacRenderer:setTransform(java.awt.geom.AffineTransform) (M)java.awt.image.BufferedImage:getWidth()
M:org.apache.batik.gvt.renderer.MacRenderer:setTransform(java.awt.geom.AffineTransform) (M)java.awt.image.BufferedImage:getHeight()
M:org.apache.batik.gvt.renderer.MacRenderer:setTransform(java.awt.geom.AffineTransform) (M)java.awt.Graphics2D:fillRect(int,int,int,int)
M:org.apache.batik.gvt.renderer.MacRenderer:setTransform(java.awt.geom.AffineTransform) (M)java.awt.Graphics2D:dispose()
M:org.apache.batik.gvt.renderer.MacRenderer:setRenderingHints(java.awt.RenderingHints) (O)java.awt.RenderingHints:<init>(java.util.Map)
M:org.apache.batik.gvt.renderer.MacRenderer:setRenderingHints(java.awt.RenderingHints) (M)java.awt.RenderingHints:add(java.awt.RenderingHints)
M:org.apache.batik.gvt.renderer.MacRenderer:clearOffScreen() (M)org.apache.batik.gvt.renderer.MacRenderer:updateWorkingBuffers()
M:org.apache.batik.gvt.renderer.MacRenderer:clearOffScreen() (M)java.awt.image.BufferedImage:createGraphics()
M:org.apache.batik.gvt.renderer.MacRenderer:clearOffScreen() (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.renderer.MacRenderer:clearOffScreen() (M)java.awt.image.BufferedImage:getWidth()
M:org.apache.batik.gvt.renderer.MacRenderer:clearOffScreen() (M)java.awt.image.BufferedImage:getHeight()
M:org.apache.batik.gvt.renderer.MacRenderer:clearOffScreen() (M)java.awt.Graphics2D:fillRect(int,int,int,int)
M:org.apache.batik.gvt.renderer.MacRenderer:clearOffScreen() (M)java.awt.Graphics2D:dispose()
M:org.apache.batik.gvt.renderer.MacRenderer:updateWorkingBuffers() (M)java.awt.image.BufferedImage:getWidth()
M:org.apache.batik.gvt.renderer.MacRenderer:updateWorkingBuffers() (M)java.awt.image.BufferedImage:getHeight()
M:org.apache.batik.gvt.renderer.MacRenderer:updateWorkingBuffers() (O)java.awt.image.BufferedImage:<init>(int,int,int)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(java.awt.Shape) (O)org.apache.batik.ext.awt.geom.RectListManager:<init>()
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(java.awt.Shape) (M)java.awt.geom.AffineTransform:createTransformedShape(java.awt.Shape)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(java.awt.Shape) (I)java.awt.Shape:getBounds()
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(java.awt.Shape) (M)org.apache.batik.ext.awt.geom.RectListManager:add(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(java.awt.Shape) (M)org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)org.apache.batik.gvt.renderer.MacRenderer:updateWorkingBuffers()
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (S)org.apache.batik.ext.awt.image.GraphicsUtil:createGraphics(java.awt.image.BufferedImage,java.awt.RenderingHints)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (O)java.awt.Rectangle:<init>(int,int,int,int)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)org.apache.batik.ext.awt.geom.RectListManager:subtract(org.apache.batik.ext.awt.geom.RectListManager,int,int)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)org.apache.batik.ext.awt.geom.RectListManager:mergeRects(int,int)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)org.apache.batik.ext.awt.geom.RectListManager:iterator()
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Rectangle:intersects(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Rectangle:intersection(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:setClip(int,int,int,int)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:fillRect(int,int,int,int)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)org.apache.batik.ext.awt.geom.RectListManager:iterator()
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)java.util.Iterator:hasNext()
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)java.util.Iterator:next()
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Rectangle:intersects(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Rectangle:intersection(java.awt.Rectangle)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:setTransform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:setClip(int,int,int,int)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:fillRect(int,int,int,int)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:setComposite(java.awt.Composite)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:transform(java.awt.geom.AffineTransform)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (I)org.apache.batik.gvt.GraphicsNode:paint(java.awt.Graphics2D)
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.awt.Graphics2D:dispose()
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (M)java.lang.Throwable:printStackTrace()
M:org.apache.batik.gvt.renderer.MacRenderer:repaint(org.apache.batik.ext.awt.geom.RectListManager) (S)org.apache.batik.util.HaltingThread:hasBeenHalted()
M:org.apache.batik.gvt.renderer.MacRenderer:<clinit>() (O)java.awt.geom.AffineTransform:<init>()
M:org.apache.batik.gvt.renderer.MacRenderer:<clinit>() (O)java.awt.Color:<init>(int,int,int,int)
M:org.apache.batik.gvt.renderer.MacRenderer:<clinit>() (O)java.awt.RenderingHints:<init>(java.util.Map)
M:org.apache.batik.gvt.renderer.MacRenderer:<clinit>() (M)java.awt.RenderingHints:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.gvt.renderer.MacRenderer:<clinit>() (M)java.awt.RenderingHints:put(java.lang.Object,java.lang.Object)
