C:org.apache.batik.extension.ExtensionElement org.apache.batik.extension.ExtensionElement
C:org.apache.batik.extension.ExtensionElement org.apache.batik.anim.dom.SVGOMElement
C:org.apache.batik.extension.GraphicsExtensionElement org.apache.batik.util.SVGConstants
C:org.apache.batik.extension.GraphicsExtensionElement org.apache.batik.constants.XMLConstants
C:org.apache.batik.extension.GraphicsExtensionElement org.apache.batik.util.DoublyIndexedTable
C:org.apache.batik.extension.GraphicsExtensionElement org.apache.batik.anim.dom.TraitInformation
C:org.apache.batik.extension.GraphicsExtensionElement org.apache.batik.util.SVGTypes
C:org.apache.batik.extension.GraphicsExtensionElement org.apache.batik.extension.GraphicsExtensionElement
C:org.apache.batik.extension.GraphicsExtensionElement org.apache.batik.extension.StylableExtensionElement
C:org.apache.batik.extension.GraphicsExtensionElement org.w3c.dom.svg.SVGTransformable
C:org.apache.batik.extension.GraphicsExtensionElement org.w3c.dom.svg.SVGException
C:org.apache.batik.extension.GraphicsExtensionElement org.apache.batik.anim.dom.SVGLocatableSupport
C:org.apache.batik.extension.GraphicsExtensionElement org.apache.batik.dom.util.XMLSupport
C:org.apache.batik.extension.GraphicsExtensionElement org.apache.batik.dom.svg.SVGTestsSupport
C:org.apache.batik.extension.StylableExtensionElement org.apache.batik.util.ParsedURL
C:org.apache.batik.extension.StylableExtensionElement org.w3c.dom.Node
C:org.apache.batik.extension.StylableExtensionElement java.lang.UnsupportedOperationException
C:org.apache.batik.extension.StylableExtensionElement org.apache.batik.extension.StylableExtensionElement
C:org.apache.batik.extension.StylableExtensionElement org.apache.batik.extension.ExtensionElement
C:org.apache.batik.extension.StylableExtensionElement org.apache.batik.css.engine.CSSStylableElement
C:org.apache.batik.extension.StylableExtensionElement org.w3c.dom.svg.SVGStylable
C:org.apache.batik.extension.StylableExtensionElement java.lang.String
C:org.apache.batik.extension.StylableExtensionElement org.w3c.dom.Node
C:org.apache.batik.extension.StylableExtensionElement java.lang.String
C:org.apache.batik.extension.svg.FlowSpanElement org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.FlowSpanElement org.apache.batik.extension.svg.FlowSpanElement
C:org.apache.batik.extension.svg.FlowSpanElement org.apache.batik.anim.dom.SVGOMTextPositioningElement
C:org.apache.batik.extension.svg.BatikRegularPolygonElement org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.BatikRegularPolygonElement org.apache.batik.extension.svg.BatikRegularPolygonElement
C:org.apache.batik.extension.svg.BatikRegularPolygonElement org.apache.batik.extension.GraphicsExtensionElement
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikDomExtension$BatikRegularPolygonElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikDomExtension$BatikStarElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikDomExtension$BatikHistogramNormalizationElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikDomExtension$ColorSwitchElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikDomExtension$FlowTextElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikDomExtension$FlowDivElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikDomExtension$FlowParaElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikDomExtension$FlowRegionBreakElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikDomExtension$FlowRegionElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikDomExtension$FlowLineElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikDomExtension$FlowSpanElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.extension.svg.BatikDomExtension
C:org.apache.batik.extension.svg.BatikDomExtension java.lang.Object
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.dom.DomExtension
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.dom.ExtensibleDOMImplementation
C:org.apache.batik.extension.svg.BatikDomExtension org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge$BatikFlowContentBridge org.apache.batik.extension.svg.BatikFlowTextElementBridge$BatikFlowContentBridge
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge$BatikFlowContentBridge org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge$BatikFlowContentBridge org.apache.batik.extension.svg.BatikFlowTextElementBridge
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge$BatikFlowContentBridge org.apache.batik.bridge.SVGTextElementBridge
C:org.apache.batik.extension.svg.BatikDomExtension$FlowDivElementFactory org.apache.batik.extension.svg.FlowDivElement
C:org.apache.batik.extension.svg.BatikDomExtension$FlowDivElementFactory org.apache.batik.dom.AbstractDocument
C:org.apache.batik.extension.svg.BatikDomExtension$FlowDivElementFactory org.apache.batik.extension.svg.BatikDomExtension$FlowDivElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowDivElementFactory java.lang.Object
C:org.apache.batik.extension.svg.BatikDomExtension$FlowDivElementFactory org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowDivElementFactory org.apache.batik.extension.svg.BatikDomExtension
C:org.apache.batik.extension.svg.BatikDomExtension$FlowDivElementFactory org.apache.batik.dom.ExtensibleDOMImplementation
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge$LineBreakInfo org.apache.batik.extension.svg.BatikFlowTextElementBridge$LineBreakInfo
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge$LineBreakInfo java.lang.Object
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge$LineBreakInfo org.apache.batik.extension.svg.BatikFlowTextElementBridge
C:org.apache.batik.extension.svg.FlowParaElement org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.FlowParaElement org.apache.batik.extension.svg.FlowParaElement
C:org.apache.batik.extension.svg.FlowParaElement org.apache.batik.anim.dom.SVGOMTextPositioningElement
C:org.apache.batik.extension.svg.HistogramRed org.apache.batik.ext.awt.image.rendered.CachableRed
C:org.apache.batik.extension.svg.HistogramRed org.apache.batik.extension.svg.HistogramRed
C:org.apache.batik.extension.svg.HistogramRed org.apache.batik.ext.awt.image.rendered.AbstractRed
C:org.apache.batik.extension.svg.HistogramRed org.apache.batik.extension.svg.HistogramRed
C:org.apache.batik.extension.svg.HistogramRed java.awt.image.Raster
C:org.apache.batik.extension.svg.HistogramRed [I
C:org.apache.batik.extension.svg.HistogramRed org.apache.batik.ext.awt.image.rendered.CachableRed
C:org.apache.batik.extension.svg.HistogramRed java.awt.image.Raster
C:org.apache.batik.extension.svg.HistogramRed java.util.Vector
C:org.apache.batik.extension.svg.BatikStarElement org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.BatikStarElement org.apache.batik.extension.svg.BatikStarElement
C:org.apache.batik.extension.svg.BatikStarElement org.apache.batik.extension.GraphicsExtensionElement
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.extension.svg.BatikStarElementBridge
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.util.SVGConstants
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.bridge.BridgeException
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.bridge.ErrorConstants
C:org.apache.batik.extension.svg.BatikStarElementBridge java.lang.Object
C:org.apache.batik.extension.svg.BatikStarElementBridge java.awt.geom.GeneralPath
C:org.apache.batik.extension.svg.BatikStarElementBridge java.lang.Math
C:org.apache.batik.extension.svg.BatikStarElementBridge java.lang.NumberFormatException
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.bridge.SVGDecoratedShapeElementBridge
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.parser.UnitProcessor$Context
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.parser.UnitProcessor$Context
C:org.apache.batik.extension.svg.BatikStarElementBridge java.lang.String
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.extension.svg.BatikStarElementBridge
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.bridge.BridgeContext
C:org.apache.batik.extension.svg.BatikStarElementBridge org.w3c.dom.Element
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.gvt.ShapeNode
C:org.apache.batik.extension.svg.BatikStarElementBridge java.awt.geom.GeneralPath
C:org.apache.batik.extension.svg.BatikStarElementBridge java.lang.NumberFormatException
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.bridge.UnitProcessor
C:org.apache.batik.extension.svg.BatikStarElementBridge org.w3c.dom.Element
C:org.apache.batik.extension.svg.BatikStarElementBridge java.lang.String
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.gvt.ShapeNode
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.bridge.SVGUtilities
C:org.apache.batik.extension.svg.BatikStarElementBridge org.apache.batik.parser.UnitProcessor
C:org.apache.batik.extension.svg.MarginInfo org.apache.batik.extension.svg.MarginInfo
C:org.apache.batik.extension.svg.MarginInfo java.lang.Object
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.extension.svg.BatikRegularPolygonElementBridge
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.util.SVGConstants
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.bridge.BridgeException
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.bridge.ErrorConstants
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge java.lang.Object
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge java.awt.geom.GeneralPath
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge java.lang.Math
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge java.lang.NumberFormatException
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.bridge.SVGDecoratedShapeElementBridge
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.parser.UnitProcessor$Context
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.parser.UnitProcessor$Context
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge java.lang.String
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge java.awt.geom.GeneralPath
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.w3c.dom.Element
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.bridge.BridgeContext
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge java.lang.NumberFormatException
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.bridge.UnitProcessor
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.w3c.dom.Element
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge java.lang.String
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.gvt.ShapeNode
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.bridge.SVGUtilities
C:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge org.apache.batik.parser.UnitProcessor
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElement org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElement org.apache.batik.extension.svg.BatikHistogramNormalizationElement
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElement org.apache.batik.extension.PrefixableStylableExtensionElement
C:org.apache.batik.extension.svg.BatikDomExtension$BatikHistogramNormalizationElementFactory org.apache.batik.extension.svg.BatikHistogramNormalizationElement
C:org.apache.batik.extension.svg.BatikDomExtension$BatikHistogramNormalizationElementFactory org.apache.batik.dom.AbstractDocument
C:org.apache.batik.extension.svg.BatikDomExtension$BatikHistogramNormalizationElementFactory org.apache.batik.extension.svg.BatikDomExtension$BatikHistogramNormalizationElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$BatikHistogramNormalizationElementFactory java.lang.Object
C:org.apache.batik.extension.svg.BatikDomExtension$BatikHistogramNormalizationElementFactory org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$BatikHistogramNormalizationElementFactory org.apache.batik.extension.svg.BatikDomExtension
C:org.apache.batik.extension.svg.BatikDomExtension$BatikHistogramNormalizationElementFactory org.apache.batik.dom.ExtensibleDOMImplementation
C:org.apache.batik.extension.svg.BatikDomExtension$BatikStarElementFactory org.apache.batik.extension.svg.BatikStarElement
C:org.apache.batik.extension.svg.BatikDomExtension$BatikStarElementFactory org.apache.batik.dom.AbstractDocument
C:org.apache.batik.extension.svg.BatikDomExtension$BatikStarElementFactory org.apache.batik.extension.svg.BatikDomExtension$BatikStarElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$BatikStarElementFactory java.lang.Object
C:org.apache.batik.extension.svg.BatikDomExtension$BatikStarElementFactory org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$BatikStarElementFactory org.apache.batik.extension.svg.BatikDomExtension
C:org.apache.batik.extension.svg.BatikDomExtension$BatikStarElementFactory org.apache.batik.dom.ExtensibleDOMImplementation
C:org.apache.batik.extension.svg.FlowRegionElement org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.FlowRegionElement org.apache.batik.extension.svg.FlowRegionElement
C:org.apache.batik.extension.svg.FlowRegionElement org.apache.batik.extension.PrefixableStylableExtensionElement
C:org.apache.batik.extension.svg.FlowLineElement org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.FlowLineElement org.apache.batik.extension.svg.FlowLineElement
C:org.apache.batik.extension.svg.FlowLineElement org.apache.batik.anim.dom.SVGOMTextPositioningElement
C:org.apache.batik.extension.svg.BatikDomExtension$FlowSpanElementFactory org.apache.batik.extension.svg.FlowSpanElement
C:org.apache.batik.extension.svg.BatikDomExtension$FlowSpanElementFactory org.apache.batik.dom.AbstractDocument
C:org.apache.batik.extension.svg.BatikDomExtension$FlowSpanElementFactory org.apache.batik.extension.svg.BatikDomExtension$FlowSpanElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowSpanElementFactory java.lang.Object
C:org.apache.batik.extension.svg.BatikDomExtension$FlowSpanElementFactory org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowSpanElementFactory org.apache.batik.extension.svg.BatikDomExtension
C:org.apache.batik.extension.svg.BatikDomExtension$FlowSpanElementFactory org.apache.batik.dom.ExtensibleDOMImplementation
C:org.apache.batik.extension.svg.RegionInfo org.apache.batik.extension.svg.RegionInfo
C:org.apache.batik.extension.svg.RegionInfo java.awt.geom.Rectangle2D$Float
C:org.apache.batik.extension.svg.RegionInfo java.awt.geom.Rectangle2D
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit java.awt.image.renderable.RenderContext
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit org.apache.batik.extension.svg.HistogramRed
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit org.apache.batik.ext.awt.image.TransferFunction
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit org.apache.batik.ext.awt.image.LinearTransfer
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit org.apache.batik.ext.awt.image.rendered.ComponentTransferRed
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit org.apache.batik.extension.svg.BatikHistogramNormalizationFilter
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit java.awt.image.renderable.RenderContext
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit java.awt.geom.AffineTransform
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit java.awt.image.RenderedImage
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit java.awt.image.SampleModel
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit [Lorg.apache.batik.ext.awt.image.TransferFunction;
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit org.apache.batik.ext.awt.image.TransferFunction
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit java.util.Vector
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit java.awt.geom.AffineTransform
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit java.awt.image.RenderedImage
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit java.awt.image.SampleModel
C:org.apache.batik.extension.svg.GlyphIterator org.apache.batik.gvt.font.GVTFont
C:org.apache.batik.extension.svg.GlyphIterator org.apache.batik.gvt.font.AWTGVTFont
C:org.apache.batik.extension.svg.GlyphIterator java.lang.Float
C:org.apache.batik.extension.svg.GlyphIterator java.awt.geom.Point2D$Float
C:org.apache.batik.extension.svg.GlyphIterator org.apache.batik.extension.svg.GlyphIterator
C:org.apache.batik.extension.svg.GlyphIterator org.apache.batik.extension.svg.LineInfo
C:org.apache.batik.extension.svg.GlyphIterator java.lang.Object
C:org.apache.batik.extension.svg.GlyphIterator java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.extension.svg.GlyphIterator org.apache.batik.extension.svg.GlyphIterator
C:org.apache.batik.extension.svg.GlyphIterator java.text.AttributedCharacterIterator
C:org.apache.batik.extension.svg.GlyphIterator org.apache.batik.gvt.font.GVTGlyphVector
C:org.apache.batik.extension.svg.GlyphIterator java.lang.Object
C:org.apache.batik.extension.svg.GlyphIterator org.apache.batik.gvt.font.GVTLineMetrics
C:org.apache.batik.extension.svg.GlyphIterator java.text.AttributedCharacterIterator
C:org.apache.batik.extension.svg.GlyphIterator org.apache.batik.gvt.font.GVTGlyphVector
C:org.apache.batik.extension.svg.GlyphIterator java.awt.geom.Point2D
C:org.apache.batik.extension.svg.GlyphIterator java.lang.System
C:org.apache.batik.extension.svg.GlyphIterator org.apache.batik.gvt.font.GVTLineMetrics
C:org.apache.batik.extension.svg.GlyphIterator java.lang.Boolean
C:org.apache.batik.extension.svg.GlyphIterator java.awt.Shape
C:org.apache.batik.extension.svg.GlyphIterator java.awt.geom.Rectangle2D
C:org.apache.batik.extension.svg.GlyphIterator org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute
C:org.apache.batik.extension.svg.GlyphIterator org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.extension.svg.BatikExtConstants org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.BatikExtConstants java.lang.Object
C:org.apache.batik.extension.svg.LineInfo java.lang.StringBuilder
C:org.apache.batik.extension.svg.LineInfo org.apache.batik.extension.svg.LineInfo
C:org.apache.batik.extension.svg.LineInfo java.lang.Object
C:org.apache.batik.extension.svg.LineInfo java.awt.geom.Point2D$Float
C:org.apache.batik.extension.svg.LineInfo java.awt.geom.Point2D
C:org.apache.batik.extension.svg.FlowExtTextLayoutFactory org.apache.batik.extension.svg.FlowExtGlyphLayout
C:org.apache.batik.extension.svg.FlowExtTextLayoutFactory org.apache.batik.extension.svg.FlowExtTextLayoutFactory
C:org.apache.batik.extension.svg.FlowExtTextLayoutFactory java.lang.Object
C:org.apache.batik.extension.svg.FlowExtTextLayoutFactory org.apache.batik.bridge.TextLayoutFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionElementFactory org.apache.batik.extension.svg.FlowRegionElement
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionElementFactory org.apache.batik.dom.AbstractDocument
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionElementFactory org.apache.batik.extension.svg.BatikDomExtension$FlowRegionElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionElementFactory java.lang.Object
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionElementFactory org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionElementFactory org.apache.batik.extension.svg.BatikDomExtension
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionElementFactory org.apache.batik.dom.ExtensibleDOMImplementation
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.util.SVGConstants
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge java.lang.NumberFormatException
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.bridge.BridgeException
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.bridge.ErrorConstants
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge java.lang.Object
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.ext.awt.image.renderable.PadRable8Bit
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.ext.awt.image.renderable.Filter
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge java.awt.geom.Rectangle2D
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.bridge.BridgeContext
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.w3c.dom.Element
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.gvt.GraphicsNode
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge java.util.Map
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge java.lang.String
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge java.lang.NumberFormatException
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge java.util.Map
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.bridge.SVGUtilities
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.w3c.dom.Element
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge java.lang.String
C:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge org.apache.batik.ext.awt.image.PadMode
C:org.apache.batik.extension.svg.BatikDomExtension$FlowLineElementFactory org.apache.batik.extension.svg.FlowLineElement
C:org.apache.batik.extension.svg.BatikDomExtension$FlowLineElementFactory org.apache.batik.dom.AbstractDocument
C:org.apache.batik.extension.svg.BatikDomExtension$FlowLineElementFactory org.apache.batik.extension.svg.BatikDomExtension$FlowLineElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowLineElementFactory java.lang.Object
C:org.apache.batik.extension.svg.BatikDomExtension$FlowLineElementFactory org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowLineElementFactory org.apache.batik.extension.svg.BatikDomExtension
C:org.apache.batik.extension.svg.BatikDomExtension$FlowLineElementFactory org.apache.batik.dom.ExtensibleDOMImplementation
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.extension.svg.BatikFlowTextElementBridge
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.extension.svg.FlowExtTextNode
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.awt.geom.Point2D$Float
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.util.SVGConstants
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.anim.dom.SVGOMElement
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.extension.svg.BatikFlowTextElementBridge$BatikFlowContentBridge
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.w3c.dom.Node
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.w3c.dom.Element
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.gvt.text.TextPaintInfo
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.util.ArrayList
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.lang.Integer
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.lang.Object
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.util.LinkedList
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.BridgeException
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.ErrorConstants
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.extension.svg.RegionInfo
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.util.HashMap
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.dom.events.NodeEventTarget
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.SVGAElementBridge$CursorHolder
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.constants.XMLConstants
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.SVGAElementBridge$AnchorListener
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.SVGAElementBridge$CursorMouseOverListener
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.SVGAElementBridge$CursorMouseOutListener
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.lang.NumberFormatException
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.extension.svg.MarginInfo
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.SVGTextElementBridge
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.extension.svg.BatikFlowTextElementBridge$LineBreakInfo
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.lang.String
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.w3c.dom.Node
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.util.List
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.text.AttributedString
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.extension.svg.BatikFlowTextElementBridge
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.BridgeContext
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.w3c.dom.Element
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.gvt.text.TextPaintInfo
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.util.Iterator
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.lang.Object
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.parser.UnitProcessor$Context
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.lang.Integer
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.util.Map
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.util.HashMap
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.lang.NumberFormatException
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.awt.geom.Point2D
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.lang.String
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.text.AttributedString
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.awt.Color
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.util.WeakHashMap
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.util.List
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.util.Iterator
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.UnitProcessor
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.BridgeContext
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.SVGUtilities
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.CSSUtilities
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.dom.util.XMLSupport
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.awt.font.TextAttribute
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.util.Map
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.SVGAElementBridge
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.CursorManager
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.dom.util.XLinkSupport
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.bridge.TextUtilities
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.util.Collection
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.lang.Boolean
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.lang.Float
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge java.text.AttributedCharacterIterator
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.gvt.text.GVTAttributedCharacterIterator
C:org.apache.batik.extension.svg.BatikFlowTextElementBridge org.apache.batik.parser.UnitProcessor
C:org.apache.batik.extension.svg.FlowDivElement org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.FlowDivElement org.apache.batik.extension.svg.FlowDivElement
C:org.apache.batik.extension.svg.FlowDivElement org.apache.batik.extension.PrefixableStylableExtensionElement
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter org.apache.batik.extension.svg.BatikHistogramNormalizationFilter
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter java.lang.Object
C:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter org.apache.batik.ext.awt.image.renderable.FilterColorInterpolation
C:org.apache.batik.extension.svg.BatikDomExtension$FlowParaElementFactory org.apache.batik.extension.svg.FlowParaElement
C:org.apache.batik.extension.svg.BatikDomExtension$FlowParaElementFactory org.apache.batik.dom.AbstractDocument
C:org.apache.batik.extension.svg.BatikDomExtension$FlowParaElementFactory org.apache.batik.extension.svg.BatikDomExtension$FlowParaElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowParaElementFactory java.lang.Object
C:org.apache.batik.extension.svg.BatikDomExtension$FlowParaElementFactory org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowParaElementFactory org.apache.batik.extension.svg.BatikDomExtension
C:org.apache.batik.extension.svg.BatikDomExtension$FlowParaElementFactory org.apache.batik.dom.ExtensibleDOMImplementation
C:org.apache.batik.extension.svg.FlowExtTextPainter java.util.List
C:org.apache.batik.extension.svg.FlowExtTextPainter java.util.ArrayList
C:org.apache.batik.extension.svg.FlowExtTextPainter org.apache.batik.bridge.StrokingTextPainter$TextRun
C:org.apache.batik.extension.svg.FlowExtTextPainter org.apache.batik.extension.svg.FlowExtTextPainter
C:org.apache.batik.extension.svg.FlowExtTextPainter org.apache.batik.bridge.StrokingTextPainter
C:org.apache.batik.extension.svg.FlowExtTextPainter java.util.List
C:org.apache.batik.extension.svg.FlowExtTextPainter org.apache.batik.extension.svg.FlowExtTextPainter
C:org.apache.batik.extension.svg.FlowExtTextPainter org.apache.batik.bridge.TextNode
C:org.apache.batik.extension.svg.FlowExtTextPainter java.text.AttributedCharacterIterator
C:org.apache.batik.extension.svg.FlowExtTextPainter [Ljava.text.AttributedCharacterIterator;
C:org.apache.batik.extension.svg.FlowExtTextPainter java.util.Iterator
C:org.apache.batik.extension.svg.FlowExtTextPainter org.apache.batik.bridge.StrokingTextPainter$TextRun
C:org.apache.batik.extension.svg.FlowExtTextPainter org.apache.batik.bridge.TextNode
C:org.apache.batik.extension.svg.FlowExtTextPainter java.text.AttributedCharacterIterator
C:org.apache.batik.extension.svg.FlowExtTextPainter java.util.Iterator
C:org.apache.batik.extension.svg.FlowExtTextPainter org.apache.batik.extension.svg.FlowExtGlyphLayout
C:org.apache.batik.extension.svg.FlowExtTextPainter java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.gvt.font.GVTGlyphVector
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.util.List
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.extension.svg.GlyphIterator
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.extension.svg.RegionInfo
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.awt.geom.Point2D$Float
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.extension.svg.MarginInfo
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.util.LinkedList
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.bridge.GlyphLayout
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.gvt.font.MultiGlyphVector
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.extension.svg.LineInfo
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.extension.svg.FlowExtGlyphLayout
C:org.apache.batik.extension.svg.FlowExtGlyphLayout [Ljava.text.AttributedCharacterIterator;
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.util.List
C:org.apache.batik.extension.svg.FlowExtGlyphLayout [Lorg.apache.batik.gvt.font.GVTGlyphVector;
C:org.apache.batik.extension.svg.FlowExtGlyphLayout [Ljava.util.List;
C:org.apache.batik.extension.svg.FlowExtGlyphLayout [Lorg.apache.batik.extension.svg.GlyphIterator;
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.util.Iterator
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.extension.svg.RegionInfo
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.awt.geom.Point2D$Float
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.text.AttributedCharacterIterator
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.lang.Object
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.extension.svg.MarginInfo
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.gvt.font.GVTGlyphVector
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.extension.svg.GlyphIterator
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.awt.geom.Point2D
C:org.apache.batik.extension.svg.FlowExtGlyphLayout [F
C:org.apache.batik.extension.svg.FlowExtGlyphLayout org.apache.batik.extension.svg.LineInfo
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.util.Iterator
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.awt.geom.Point2D
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.text.AttributedCharacterIterator
C:org.apache.batik.extension.svg.FlowExtGlyphLayout java.text.AttributedCharacterIterator$Attribute
C:org.apache.batik.extension.svg.FlowExtTextNode org.apache.batik.extension.svg.FlowExtTextNode
C:org.apache.batik.extension.svg.FlowExtTextNode org.apache.batik.bridge.TextNode
C:org.apache.batik.extension.svg.FlowExtTextNode org.apache.batik.extension.svg.FlowExtTextPainter
C:org.apache.batik.extension.svg.BatikDomExtension$BatikRegularPolygonElementFactory org.apache.batik.extension.svg.BatikRegularPolygonElement
C:org.apache.batik.extension.svg.BatikDomExtension$BatikRegularPolygonElementFactory org.apache.batik.dom.AbstractDocument
C:org.apache.batik.extension.svg.BatikDomExtension$BatikRegularPolygonElementFactory org.apache.batik.extension.svg.BatikDomExtension$BatikRegularPolygonElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$BatikRegularPolygonElementFactory java.lang.Object
C:org.apache.batik.extension.svg.BatikDomExtension$BatikRegularPolygonElementFactory org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$BatikRegularPolygonElementFactory org.apache.batik.extension.svg.BatikDomExtension
C:org.apache.batik.extension.svg.BatikDomExtension$BatikRegularPolygonElementFactory org.apache.batik.dom.ExtensibleDOMImplementation
C:org.apache.batik.extension.svg.ColorSwitchBridge org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.ColorSwitchBridge org.w3c.dom.Node
C:org.apache.batik.extension.svg.ColorSwitchBridge org.w3c.dom.Element
C:org.apache.batik.extension.svg.ColorSwitchBridge org.apache.batik.bridge.PaintBridge
C:org.apache.batik.extension.svg.ColorSwitchBridge org.apache.batik.extension.svg.ColorSwitchBridge
C:org.apache.batik.extension.svg.ColorSwitchBridge org.apache.batik.bridge.AbstractSVGBridge
C:org.apache.batik.extension.svg.ColorSwitchBridge org.w3c.dom.Element
C:org.apache.batik.extension.svg.ColorSwitchBridge org.w3c.dom.Node
C:org.apache.batik.extension.svg.ColorSwitchBridge org.apache.batik.bridge.Bridge
C:org.apache.batik.extension.svg.ColorSwitchBridge org.apache.batik.bridge.BridgeContext
C:org.apache.batik.extension.svg.ColorSwitchBridge org.apache.batik.bridge.SVGUtilities
C:org.apache.batik.extension.svg.ColorSwitchBridge java.awt.Color
C:org.apache.batik.extension.svg.BatikDomExtension$ColorSwitchElementFactory org.apache.batik.extension.svg.ColorSwitchElement
C:org.apache.batik.extension.svg.BatikDomExtension$ColorSwitchElementFactory org.apache.batik.dom.AbstractDocument
C:org.apache.batik.extension.svg.BatikDomExtension$ColorSwitchElementFactory org.apache.batik.extension.svg.BatikDomExtension$ColorSwitchElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$ColorSwitchElementFactory java.lang.Object
C:org.apache.batik.extension.svg.BatikDomExtension$ColorSwitchElementFactory org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$ColorSwitchElementFactory org.apache.batik.extension.svg.BatikDomExtension
C:org.apache.batik.extension.svg.BatikDomExtension$ColorSwitchElementFactory org.apache.batik.dom.ExtensibleDOMImplementation
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionBreakElementFactory org.apache.batik.extension.svg.FlowRegionBreakElement
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionBreakElementFactory org.apache.batik.dom.AbstractDocument
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionBreakElementFactory org.apache.batik.extension.svg.BatikDomExtension$FlowRegionBreakElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionBreakElementFactory java.lang.Object
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionBreakElementFactory org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionBreakElementFactory org.apache.batik.extension.svg.BatikDomExtension
C:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionBreakElementFactory org.apache.batik.dom.ExtensibleDOMImplementation
C:org.apache.batik.extension.svg.BatikDomExtension$FlowTextElementFactory org.apache.batik.extension.svg.FlowTextElement
C:org.apache.batik.extension.svg.BatikDomExtension$FlowTextElementFactory org.apache.batik.dom.AbstractDocument
C:org.apache.batik.extension.svg.BatikDomExtension$FlowTextElementFactory org.apache.batik.extension.svg.BatikDomExtension$FlowTextElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowTextElementFactory java.lang.Object
C:org.apache.batik.extension.svg.BatikDomExtension$FlowTextElementFactory org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory
C:org.apache.batik.extension.svg.BatikDomExtension$FlowTextElementFactory org.apache.batik.extension.svg.BatikDomExtension
C:org.apache.batik.extension.svg.BatikDomExtension$FlowTextElementFactory org.apache.batik.dom.ExtensibleDOMImplementation
C:org.apache.batik.extension.svg.FlowRegionBreakElement org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.FlowRegionBreakElement org.apache.batik.extension.svg.FlowRegionBreakElement
C:org.apache.batik.extension.svg.FlowRegionBreakElement org.apache.batik.anim.dom.SVGOMTextPositioningElement
C:org.apache.batik.extension.svg.ColorSwitchElement org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.ColorSwitchElement org.apache.batik.extension.svg.ColorSwitchElement
C:org.apache.batik.extension.svg.ColorSwitchElement org.apache.batik.extension.PrefixableStylableExtensionElement
C:org.apache.batik.extension.svg.BatikBridgeExtension java.lang.String
C:org.apache.batik.extension.svg.BatikBridgeExtension org.apache.batik.extension.svg.BatikRegularPolygonElementBridge
C:org.apache.batik.extension.svg.BatikBridgeExtension org.apache.batik.extension.svg.BatikStarElementBridge
C:org.apache.batik.extension.svg.BatikBridgeExtension org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge
C:org.apache.batik.extension.svg.BatikBridgeExtension org.apache.batik.extension.svg.BatikFlowTextElementBridge
C:org.apache.batik.extension.svg.BatikBridgeExtension org.apache.batik.extension.svg.ColorSwitchBridge
C:org.apache.batik.extension.svg.BatikBridgeExtension org.apache.batik.extension.svg.BatikBridgeExtension
C:org.apache.batik.extension.svg.BatikBridgeExtension java.lang.Object
C:org.apache.batik.extension.svg.BatikBridgeExtension org.apache.batik.bridge.BridgeExtension
C:org.apache.batik.extension.svg.BatikBridgeExtension java.util.Arrays
C:org.apache.batik.extension.svg.BatikBridgeExtension java.util.Collections
C:org.apache.batik.extension.svg.BatikBridgeExtension java.util.List
C:org.apache.batik.extension.svg.BatikBridgeExtension org.apache.batik.bridge.BridgeContext
C:org.apache.batik.extension.svg.FlowTextElement org.apache.batik.extension.svg.BatikExtConstants
C:org.apache.batik.extension.svg.FlowTextElement org.apache.batik.extension.svg.FlowTextElement
C:org.apache.batik.extension.svg.FlowTextElement org.apache.batik.extension.GraphicsExtensionElement
C:org.apache.batik.extension.PrefixableStylableExtensionElement java.lang.StringBuilder
C:org.apache.batik.extension.PrefixableStylableExtensionElement org.w3c.dom.DOMException
C:org.apache.batik.extension.PrefixableStylableExtensionElement java.lang.Object
C:org.apache.batik.extension.PrefixableStylableExtensionElement org.apache.batik.extension.PrefixableStylableExtensionElement
C:org.apache.batik.extension.PrefixableStylableExtensionElement org.apache.batik.extension.StylableExtensionElement
C:org.apache.batik.extension.PrefixableStylableExtensionElement java.lang.String
C:org.apache.batik.extension.PrefixableStylableExtensionElement java.lang.String
C:org.apache.batik.extension.PrefixableStylableExtensionElement java.lang.Integer
C:org.apache.batik.extension.PrefixableStylableExtensionElement org.apache.batik.dom.util.DOMUtilities
M:org.apache.batik.extension.ExtensionElement:<init>() (O)org.apache.batik.anim.dom.SVGOMElement:<init>()
M:org.apache.batik.extension.ExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.anim.dom.SVGOMElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.GraphicsExtensionElement:<init>() (O)org.apache.batik.extension.StylableExtensionElement:<init>()
M:org.apache.batik.extension.GraphicsExtensionElement:<init>() (M)org.apache.batik.extension.GraphicsExtensionElement:createLiveAnimatedTransformList(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.batik.extension.GraphicsExtensionElement:<init>() (M)org.apache.batik.extension.GraphicsExtensionElement:createLiveAnimatedBoolean(java.lang.String,java.lang.String,boolean)
M:org.apache.batik.extension.GraphicsExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.extension.StylableExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.GraphicsExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (M)org.apache.batik.extension.GraphicsExtensionElement:createLiveAnimatedTransformList(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.batik.extension.GraphicsExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (M)org.apache.batik.extension.GraphicsExtensionElement:createLiveAnimatedBoolean(java.lang.String,java.lang.String,boolean)
M:org.apache.batik.extension.GraphicsExtensionElement:getNearestViewportElement() (S)org.apache.batik.anim.dom.SVGLocatableSupport:getNearestViewportElement(org.w3c.dom.Element)
M:org.apache.batik.extension.GraphicsExtensionElement:getFarthestViewportElement() (S)org.apache.batik.anim.dom.SVGLocatableSupport:getFarthestViewportElement(org.w3c.dom.Element)
M:org.apache.batik.extension.GraphicsExtensionElement:getBBox() (S)org.apache.batik.anim.dom.SVGLocatableSupport:getBBox(org.w3c.dom.Element)
M:org.apache.batik.extension.GraphicsExtensionElement:getCTM() (S)org.apache.batik.anim.dom.SVGLocatableSupport:getCTM(org.w3c.dom.Element)
M:org.apache.batik.extension.GraphicsExtensionElement:getScreenCTM() (S)org.apache.batik.anim.dom.SVGLocatableSupport:getScreenCTM(org.w3c.dom.Element)
M:org.apache.batik.extension.GraphicsExtensionElement:getTransformToElement(org.w3c.dom.svg.SVGElement) (S)org.apache.batik.anim.dom.SVGLocatableSupport:getTransformToElement(org.w3c.dom.Element,org.w3c.dom.svg.SVGElement)
M:org.apache.batik.extension.GraphicsExtensionElement:getXMLlang() (S)org.apache.batik.dom.util.XMLSupport:getXMLLang(org.w3c.dom.Element)
M:org.apache.batik.extension.GraphicsExtensionElement:setXMLlang(java.lang.String) (M)org.apache.batik.extension.GraphicsExtensionElement:setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.batik.extension.GraphicsExtensionElement:getXMLspace() (S)org.apache.batik.dom.util.XMLSupport:getXMLSpace(org.w3c.dom.Element)
M:org.apache.batik.extension.GraphicsExtensionElement:setXMLspace(java.lang.String) (M)org.apache.batik.extension.GraphicsExtensionElement:setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
M:org.apache.batik.extension.GraphicsExtensionElement:getRequiredFeatures() (S)org.apache.batik.dom.svg.SVGTestsSupport:getRequiredFeatures(org.w3c.dom.Element)
M:org.apache.batik.extension.GraphicsExtensionElement:getRequiredExtensions() (S)org.apache.batik.dom.svg.SVGTestsSupport:getRequiredExtensions(org.w3c.dom.Element)
M:org.apache.batik.extension.GraphicsExtensionElement:getSystemLanguage() (S)org.apache.batik.dom.svg.SVGTestsSupport:getSystemLanguage(org.w3c.dom.Element)
M:org.apache.batik.extension.GraphicsExtensionElement:hasExtension(java.lang.String) (S)org.apache.batik.dom.svg.SVGTestsSupport:hasExtension(org.w3c.dom.Element,java.lang.String)
M:org.apache.batik.extension.GraphicsExtensionElement:<clinit>() (O)org.apache.batik.util.DoublyIndexedTable:<init>(org.apache.batik.util.DoublyIndexedTable)
M:org.apache.batik.extension.GraphicsExtensionElement:<clinit>() (O)org.apache.batik.anim.dom.TraitInformation:<init>(boolean,int)
M:org.apache.batik.extension.GraphicsExtensionElement:<clinit>() (M)org.apache.batik.util.DoublyIndexedTable:put(java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.batik.extension.GraphicsExtensionElement:<clinit>() (O)org.apache.batik.anim.dom.TraitInformation:<init>(boolean,int)
M:org.apache.batik.extension.GraphicsExtensionElement:<clinit>() (M)org.apache.batik.util.DoublyIndexedTable:put(java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.batik.extension.GraphicsExtensionElement:<clinit>() (O)org.apache.batik.anim.dom.TraitInformation:<init>(boolean,int)
M:org.apache.batik.extension.GraphicsExtensionElement:<clinit>() (M)org.apache.batik.util.DoublyIndexedTable:put(java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.batik.extension.GraphicsExtensionElement:<clinit>() (O)org.apache.batik.anim.dom.TraitInformation:<init>(boolean,int)
M:org.apache.batik.extension.GraphicsExtensionElement:<clinit>() (M)org.apache.batik.util.DoublyIndexedTable:put(java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.batik.extension.GraphicsExtensionElement:<clinit>() (O)org.apache.batik.anim.dom.TraitInformation:<init>(boolean,int)
M:org.apache.batik.extension.GraphicsExtensionElement:<clinit>() (M)org.apache.batik.util.DoublyIndexedTable:put(java.lang.Object,java.lang.Object,java.lang.Object)
M:org.apache.batik.extension.StylableExtensionElement:<init>() (O)org.apache.batik.extension.ExtensionElement:<init>()
M:org.apache.batik.extension.StylableExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.extension.ExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.StylableExtensionElement:getXMLId() (M)org.apache.batik.extension.StylableExtensionElement:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.StylableExtensionElement:getCSSClass() (M)org.apache.batik.extension.StylableExtensionElement:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.StylableExtensionElement:getCSSBase() (M)org.apache.batik.extension.StylableExtensionElement:getBaseURI()
M:org.apache.batik.extension.StylableExtensionElement:getCSSBase() (O)org.apache.batik.util.ParsedURL:<init>(java.lang.String)
M:org.apache.batik.extension.StylableExtensionElement:isPseudoInstanceOf(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.StylableExtensionElement:isPseudoInstanceOf(java.lang.String) (M)org.apache.batik.extension.StylableExtensionElement:getPreviousSibling()
M:org.apache.batik.extension.StylableExtensionElement:isPseudoInstanceOf(java.lang.String) (I)org.w3c.dom.Node:getNodeType()
M:org.apache.batik.extension.StylableExtensionElement:isPseudoInstanceOf(java.lang.String) (I)org.w3c.dom.Node:getPreviousSibling()
M:org.apache.batik.extension.StylableExtensionElement:getStyle() (O)java.lang.UnsupportedOperationException:<init>(java.lang.String)
M:org.apache.batik.extension.StylableExtensionElement:getPresentationAttribute(java.lang.String) (O)java.lang.UnsupportedOperationException:<init>(java.lang.String)
M:org.apache.batik.extension.StylableExtensionElement:getClassName() (O)java.lang.UnsupportedOperationException:<init>(java.lang.String)
M:org.apache.batik.extension.svg.FlowSpanElement:<init>() (O)org.apache.batik.anim.dom.SVGOMTextPositioningElement:<init>()
M:org.apache.batik.extension.svg.FlowSpanElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.anim.dom.SVGOMTextPositioningElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.FlowSpanElement:newNode() (O)org.apache.batik.extension.svg.FlowSpanElement:<init>()
M:org.apache.batik.extension.svg.BatikRegularPolygonElement:<init>() (O)org.apache.batik.extension.GraphicsExtensionElement:<init>()
M:org.apache.batik.extension.svg.BatikRegularPolygonElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.extension.GraphicsExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.BatikRegularPolygonElement:newNode() (O)org.apache.batik.extension.svg.BatikRegularPolygonElement:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (O)org.apache.batik.extension.svg.BatikDomExtension$BatikRegularPolygonElementFactory:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (M)org.apache.batik.dom.ExtensibleDOMImplementation:registerCustomElementFactory(java.lang.String,java.lang.String,org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory)
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (O)org.apache.batik.extension.svg.BatikDomExtension$BatikStarElementFactory:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (M)org.apache.batik.dom.ExtensibleDOMImplementation:registerCustomElementFactory(java.lang.String,java.lang.String,org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory)
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (O)org.apache.batik.extension.svg.BatikDomExtension$BatikHistogramNormalizationElementFactory:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (M)org.apache.batik.dom.ExtensibleDOMImplementation:registerCustomElementFactory(java.lang.String,java.lang.String,org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory)
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (O)org.apache.batik.extension.svg.BatikDomExtension$ColorSwitchElementFactory:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (M)org.apache.batik.dom.ExtensibleDOMImplementation:registerCustomElementFactory(java.lang.String,java.lang.String,org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory)
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (O)org.apache.batik.extension.svg.BatikDomExtension$FlowTextElementFactory:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (M)org.apache.batik.dom.ExtensibleDOMImplementation:registerCustomElementFactory(java.lang.String,java.lang.String,org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory)
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (O)org.apache.batik.extension.svg.BatikDomExtension$FlowDivElementFactory:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (M)org.apache.batik.dom.ExtensibleDOMImplementation:registerCustomElementFactory(java.lang.String,java.lang.String,org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory)
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (O)org.apache.batik.extension.svg.BatikDomExtension$FlowParaElementFactory:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (M)org.apache.batik.dom.ExtensibleDOMImplementation:registerCustomElementFactory(java.lang.String,java.lang.String,org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory)
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (O)org.apache.batik.extension.svg.BatikDomExtension$FlowRegionBreakElementFactory:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (M)org.apache.batik.dom.ExtensibleDOMImplementation:registerCustomElementFactory(java.lang.String,java.lang.String,org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory)
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (O)org.apache.batik.extension.svg.BatikDomExtension$FlowRegionElementFactory:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (M)org.apache.batik.dom.ExtensibleDOMImplementation:registerCustomElementFactory(java.lang.String,java.lang.String,org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory)
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (O)org.apache.batik.extension.svg.BatikDomExtension$FlowLineElementFactory:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (M)org.apache.batik.dom.ExtensibleDOMImplementation:registerCustomElementFactory(java.lang.String,java.lang.String,org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory)
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (O)org.apache.batik.extension.svg.BatikDomExtension$FlowSpanElementFactory:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension:registerTags(org.apache.batik.dom.ExtensibleDOMImplementation) (M)org.apache.batik.dom.ExtensibleDOMImplementation:registerCustomElementFactory(java.lang.String,java.lang.String,org.apache.batik.dom.ExtensibleDOMImplementation$ElementFactory)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge$BatikFlowContentBridge:<init>(org.apache.batik.extension.svg.BatikFlowTextElementBridge,org.apache.batik.bridge.BridgeContext,org.apache.batik.bridge.SVGTextElementBridge,org.w3c.dom.Element) (O)org.apache.batik.bridge.SVGTextElementBridge$AbstractTextChildTextContent:<init>(org.apache.batik.bridge.SVGTextElementBridge,org.apache.batik.bridge.BridgeContext,org.apache.batik.bridge.SVGTextElementBridge,org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikDomExtension$FlowDivElementFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$FlowDivElementFactory:create(java.lang.String,org.w3c.dom.Document) (O)org.apache.batik.extension.svg.FlowDivElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge$LineBreakInfo:<init>(int,float,boolean) (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.FlowParaElement:<init>() (O)org.apache.batik.anim.dom.SVGOMTextPositioningElement:<init>()
M:org.apache.batik.extension.svg.FlowParaElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.anim.dom.SVGOMTextPositioningElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.FlowParaElement:newNode() (O)org.apache.batik.extension.svg.FlowParaElement:<init>()
M:org.apache.batik.extension.svg.HistogramRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed) (O)org.apache.batik.ext.awt.image.rendered.AbstractRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed,java.util.Map)
M:org.apache.batik.extension.svg.HistogramRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed) (M)org.apache.batik.extension.svg.HistogramRed:getNumXTiles()
M:org.apache.batik.extension.svg.HistogramRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed) (M)org.apache.batik.extension.svg.HistogramRed:getNumYTiles()
M:org.apache.batik.extension.svg.HistogramRed:tallyTile(java.awt.image.Raster) (M)java.awt.image.Raster:getMinX()
M:org.apache.batik.extension.svg.HistogramRed:tallyTile(java.awt.image.Raster) (M)java.awt.image.Raster:getMinY()
M:org.apache.batik.extension.svg.HistogramRed:tallyTile(java.awt.image.Raster) (M)java.awt.image.Raster:getWidth()
M:org.apache.batik.extension.svg.HistogramRed:tallyTile(java.awt.image.Raster) (M)java.awt.image.Raster:getHeight()
M:org.apache.batik.extension.svg.HistogramRed:tallyTile(java.awt.image.Raster) (M)java.awt.image.Raster:getPixels(int,int,int,int,int[])
M:org.apache.batik.extension.svg.HistogramRed:getHistogram() (M)org.apache.batik.extension.svg.HistogramRed:getSources()
M:org.apache.batik.extension.svg.HistogramRed:getHistogram() (M)java.util.Vector:get(int)
M:org.apache.batik.extension.svg.HistogramRed:getHistogram() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getMinTileY()
M:org.apache.batik.extension.svg.HistogramRed:getHistogram() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getNumXTiles()
M:org.apache.batik.extension.svg.HistogramRed:getHistogram() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getMinTileX()
M:org.apache.batik.extension.svg.HistogramRed:getHistogram() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getNumYTiles()
M:org.apache.batik.extension.svg.HistogramRed:getHistogram() (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getTile(int,int)
M:org.apache.batik.extension.svg.HistogramRed:getHistogram() (M)org.apache.batik.extension.svg.HistogramRed:tallyTile(java.awt.image.Raster)
M:org.apache.batik.extension.svg.HistogramRed:copyData(java.awt.image.WritableRaster) (M)org.apache.batik.extension.svg.HistogramRed:copyToRaster(java.awt.image.WritableRaster)
M:org.apache.batik.extension.svg.HistogramRed:getTile(int,int) (M)org.apache.batik.extension.svg.HistogramRed:getMinTileY()
M:org.apache.batik.extension.svg.HistogramRed:getTile(int,int) (M)org.apache.batik.extension.svg.HistogramRed:getMinTileX()
M:org.apache.batik.extension.svg.HistogramRed:getTile(int,int) (M)org.apache.batik.extension.svg.HistogramRed:getSources()
M:org.apache.batik.extension.svg.HistogramRed:getTile(int,int) (M)java.util.Vector:get(int)
M:org.apache.batik.extension.svg.HistogramRed:getTile(int,int) (I)org.apache.batik.ext.awt.image.rendered.CachableRed:getTile(int,int)
M:org.apache.batik.extension.svg.HistogramRed:getTile(int,int) (M)org.apache.batik.extension.svg.HistogramRed:getNumXTiles()
M:org.apache.batik.extension.svg.HistogramRed:getTile(int,int) (M)org.apache.batik.extension.svg.HistogramRed:tallyTile(java.awt.image.Raster)
M:org.apache.batik.extension.svg.BatikStarElement:<init>() (O)org.apache.batik.extension.GraphicsExtensionElement:<init>()
M:org.apache.batik.extension.svg.BatikStarElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.extension.GraphicsExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.BatikStarElement:newNode() (O)org.apache.batik.extension.svg.BatikStarElement:<init>()
M:org.apache.batik.extension.svg.BatikStarElementBridge:<init>() (O)org.apache.batik.bridge.SVGDecoratedShapeElementBridge:<init>()
M:org.apache.batik.extension.svg.BatikStarElementBridge:getInstance() (O)org.apache.batik.extension.svg.BatikStarElementBridge:<init>()
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)org.apache.batik.bridge.UnitProcessor:createContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (I)org.w3c.dom.Element:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)org.apache.batik.bridge.UnitProcessor:svgHorizontalCoordinateToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (I)org.w3c.dom.Element:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)org.apache.batik.bridge.UnitProcessor:svgVerticalCoordinateToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (I)org.w3c.dom.Element:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (O)org.apache.batik.bridge.BridgeException:<init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)org.apache.batik.bridge.UnitProcessor:svgOtherLengthToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (I)org.w3c.dom.Element:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (O)org.apache.batik.bridge.BridgeException:<init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)org.apache.batik.bridge.UnitProcessor:svgOtherLengthToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)org.apache.batik.extension.svg.BatikStarElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (O)java.awt.geom.GeneralPath:<init>()
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)java.lang.Math:cos(double)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)java.lang.Math:sin(double)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.awt.geom.GeneralPath:moveTo(float,float)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.awt.geom.GeneralPath:lineTo(float,float)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)java.lang.Math:cos(double)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)java.lang.Math:sin(double)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.awt.geom.GeneralPath:lineTo(float,float)
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.awt.geom.GeneralPath:closePath()
M:org.apache.batik.extension.svg.BatikStarElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)org.apache.batik.gvt.ShapeNode:setShape(java.awt.Shape)
M:org.apache.batik.extension.svg.BatikStarElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.svg.BatikStarElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikStarElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (S)org.apache.batik.bridge.SVGUtilities:convertSVGInteger(java.lang.String)
M:org.apache.batik.extension.svg.BatikStarElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.bridge.BridgeException:<init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.svg.BatikStarElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.bridge.BridgeException:<init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.svg.MarginInfo:<init>(float,float,float,float,float,int,boolean) (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.MarginInfo:<init>(float,int) (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.MarginInfo:<init>(float,int) (M)org.apache.batik.extension.svg.MarginInfo:setMargin(float)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:<init>() (O)org.apache.batik.bridge.SVGDecoratedShapeElementBridge:<init>()
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:getInstance() (O)org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:<init>()
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)org.apache.batik.bridge.UnitProcessor:createContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (I)org.w3c.dom.Element:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)org.apache.batik.bridge.UnitProcessor:svgHorizontalCoordinateToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (I)org.w3c.dom.Element:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)org.apache.batik.bridge.UnitProcessor:svgVerticalCoordinateToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (I)org.w3c.dom.Element:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)org.apache.batik.bridge.UnitProcessor:svgOtherLengthToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (O)org.apache.batik.bridge.BridgeException:<init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (O)java.awt.geom.GeneralPath:<init>()
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)java.lang.Math:cos(double)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (S)java.lang.Math:sin(double)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.awt.geom.GeneralPath:moveTo(float,float)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.awt.geom.GeneralPath:lineTo(float,float)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)java.awt.geom.GeneralPath:closePath()
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:buildShape(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.ShapeNode) (M)org.apache.batik.gvt.ShapeNode:setShape(java.awt.Shape)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (S)org.apache.batik.bridge.SVGUtilities:convertSVGInteger(java.lang.String)
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.bridge.BridgeException:<init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.bridge.BridgeException:<init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElement:<init>() (O)org.apache.batik.extension.PrefixableStylableExtensionElement:<init>()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.extension.PrefixableStylableExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElement:newNode() (O)org.apache.batik.extension.svg.BatikHistogramNormalizationElement:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$BatikHistogramNormalizationElementFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$BatikHistogramNormalizationElementFactory:create(java.lang.String,org.w3c.dom.Document) (O)org.apache.batik.extension.svg.BatikHistogramNormalizationElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.BatikDomExtension$BatikStarElementFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$BatikStarElementFactory:create(java.lang.String,org.w3c.dom.Document) (O)org.apache.batik.extension.svg.BatikStarElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.FlowRegionElement:<init>() (O)org.apache.batik.extension.PrefixableStylableExtensionElement:<init>()
M:org.apache.batik.extension.svg.FlowRegionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.extension.PrefixableStylableExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.FlowRegionElement:newNode() (O)org.apache.batik.extension.svg.FlowRegionElement:<init>()
M:org.apache.batik.extension.svg.FlowLineElement:<init>() (O)org.apache.batik.anim.dom.SVGOMTextPositioningElement:<init>()
M:org.apache.batik.extension.svg.FlowLineElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.anim.dom.SVGOMTextPositioningElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.FlowLineElement:newNode() (O)org.apache.batik.extension.svg.FlowLineElement:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$FlowSpanElementFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$FlowSpanElementFactory:create(java.lang.String,org.w3c.dom.Document) (O)org.apache.batik.extension.svg.FlowSpanElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.RegionInfo:<init>(float,float,float,float,float) (O)java.awt.geom.Rectangle2D$Float:<init>(float,float,float,float)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:setSource(org.apache.batik.ext.awt.image.renderable.Filter) (M)org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:init(org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:getSource() (M)org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:getSources()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:getSource() (M)java.util.Vector:get(int)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:setTrim(float) (M)org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:touch()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,float) (O)org.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable:<init>()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,float) (M)org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:setSource(org.apache.batik.ext.awt.image.renderable.Filter)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,float) (M)org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:setTrim(float)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (M)org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:getSource()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (I)org.apache.batik.ext.awt.image.renderable.Filter:getWidth()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (I)org.apache.batik.ext.awt.image.renderable.Filter:getHeight()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (S)java.awt.geom.AffineTransform:getScaleInstance(double,double)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (M)java.awt.image.renderable.RenderContext:getRenderingHints()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (O)java.awt.image.renderable.RenderContext:<init>(java.awt.geom.AffineTransform,java.awt.RenderingHints)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (M)org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:getSource()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (I)org.apache.batik.ext.awt.image.renderable.Filter:createRendering(java.awt.image.renderable.RenderContext)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (M)org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:convertSourceCS(java.awt.image.RenderedImage)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (O)org.apache.batik.extension.svg.HistogramRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (M)org.apache.batik.extension.svg.HistogramRed:getHistogram()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (I)java.awt.image.RenderedImage:getWidth()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext) (I)java.awt.image.RenderedImage:getHeight()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:getSource()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:createRendering(java.awt.image.renderable.RenderContext) (I)org.apache.batik.ext.awt.image.renderable.Filter:createRendering(java.awt.image.renderable.RenderContext)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:computeHistogram(java.awt.image.renderable.RenderContext)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:createRendering(java.awt.image.renderable.RenderContext) (I)java.awt.image.RenderedImage:getSampleModel()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)java.awt.image.SampleModel:getNumBands()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:createRendering(java.awt.image.renderable.RenderContext) (O)org.apache.batik.ext.awt.image.LinearTransfer:<init>(float,float)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:createRendering(java.awt.image.renderable.RenderContext) (M)org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:convertSourceCS(java.awt.image.RenderedImage)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:createRendering(java.awt.image.renderable.RenderContext) (O)org.apache.batik.ext.awt.image.rendered.ComponentTransferRed:<init>(org.apache.batik.ext.awt.image.rendered.CachableRed,org.apache.batik.ext.awt.image.TransferFunction[],java.awt.RenderingHints)
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (I)java.text.AttributedCharacterIterator:getBeginIndex()
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (I)org.apache.batik.gvt.font.GVTGlyphVector:getCharacterCount(int,int)
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (I)org.apache.batik.gvt.font.GVTGlyphVector:getFontRenderContext()
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (I)java.text.AttributedCharacterIterator:getAttributes()
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (O)org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map)
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (I)java.text.AttributedCharacterIterator:getRunLimit(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (I)java.text.AttributedCharacterIterator:getRunLimit(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (I)org.apache.batik.gvt.font.GVTGlyphVector:getNumGlyphs()
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphPositions(int,int,float[])
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (M)org.apache.batik.extension.svg.GlyphIterator:getCharWidth()
M:org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector) (M)org.apache.batik.extension.svg.GlyphIterator:getCharAdvance()
M:org.apache.batik.extension.svg.GlyphIterator:<init>(org.apache.batik.extension.svg.GlyphIterator) (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.GlyphIterator:<init>(org.apache.batik.extension.svg.GlyphIterator) (M)org.apache.batik.extension.svg.GlyphIterator:copy(org.apache.batik.extension.svg.GlyphIterator)
M:org.apache.batik.extension.svg.GlyphIterator:copy() (O)org.apache.batik.extension.svg.GlyphIterator:<init>(org.apache.batik.extension.svg.GlyphIterator)
M:org.apache.batik.extension.svg.GlyphIterator:copy(org.apache.batik.extension.svg.GlyphIterator) (O)org.apache.batik.extension.svg.GlyphIterator:<init>(org.apache.batik.extension.svg.GlyphIterator)
M:org.apache.batik.extension.svg.GlyphIterator:getMaxFontSize() (M)org.apache.batik.extension.svg.GlyphIterator:updateLineMetrics(int)
M:org.apache.batik.extension.svg.GlyphIterator:getMaxAscent() (M)org.apache.batik.extension.svg.GlyphIterator:updateLineMetrics(int)
M:org.apache.batik.extension.svg.GlyphIterator:getMaxDescent() (M)org.apache.batik.extension.svg.GlyphIterator:updateLineMetrics(int)
M:org.apache.batik.extension.svg.GlyphIterator:getLineBreaks() (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.extension.svg.GlyphIterator:getLineBreaks() (I)java.text.AttributedCharacterIterator:getRunLimit(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.GlyphIterator:getLineBreaks() (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.extension.svg.GlyphIterator:getLineBreaks() (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphVisible(int,boolean)
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (M)org.apache.batik.extension.svg.GlyphIterator:getCharAdvance()
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (M)org.apache.batik.extension.svg.GlyphIterator:addLeftShift(int,float)
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (I)java.text.AttributedCharacterIterator:setIndex(int)
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (I)org.apache.batik.gvt.font.GVTGlyphVector:getCharacterCount(int,int)
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (M)org.apache.batik.extension.svg.GlyphIterator:updateLineMetrics(int)
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (I)java.text.AttributedCharacterIterator:getRunLimit(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (I)java.text.AttributedCharacterIterator:getAttributes()
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (O)org.apache.batik.gvt.font.AWTGVTFont:<init>(java.util.Map)
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (M)org.apache.batik.extension.svg.GlyphIterator:getCharAdvance()
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (M)org.apache.batik.extension.svg.GlyphIterator:isPrinting()
M:org.apache.batik.extension.svg.GlyphIterator:nextChar() (M)org.apache.batik.extension.svg.GlyphIterator:getCharWidth()
M:org.apache.batik.extension.svg.GlyphIterator:addLeftShift(int,float) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.extension.svg.GlyphIterator:addLeftShift(int,float) (S)java.lang.System:arraycopy(java.lang.Object,int,java.lang.Object,int,int)
M:org.apache.batik.extension.svg.GlyphIterator:updateLineMetrics(int) (I)org.apache.batik.gvt.font.GVTFont:getLineMetrics(java.text.CharacterIterator,int,int,java.awt.font.FontRenderContext)
M:org.apache.batik.extension.svg.GlyphIterator:updateLineMetrics(int) (M)org.apache.batik.gvt.font.GVTLineMetrics:getAscent()
M:org.apache.batik.extension.svg.GlyphIterator:updateLineMetrics(int) (M)org.apache.batik.gvt.font.GVTLineMetrics:getDescent()
M:org.apache.batik.extension.svg.GlyphIterator:updateLineMetrics(int) (I)org.apache.batik.gvt.font.GVTFont:getSize()
M:org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float) (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphVisible(int,boolean)
M:org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float) (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D)
M:org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float) (M)org.apache.batik.extension.svg.GlyphIterator:isPrinting()
M:org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float) (M)org.apache.batik.extension.svg.GlyphIterator:getCharWidth(int)
M:org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float) (M)org.apache.batik.extension.svg.GlyphIterator:done()
M:org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float) (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphVisible(int,boolean)
M:org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float) (M)org.apache.batik.extension.svg.GlyphIterator:nextChar()
M:org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float) (M)org.apache.batik.extension.svg.GlyphIterator:isPrinting()
M:org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float) (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphVisible(int,boolean)
M:org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float) (O)org.apache.batik.extension.svg.LineInfo:<init>(java.awt.geom.Point2D$Float,java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector,int,int,float,float,float,float,boolean,java.awt.geom.Point2D$Float)
M:org.apache.batik.extension.svg.GlyphIterator:isPrinting() (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.GlyphIterator:isPrinting() (M)org.apache.batik.extension.svg.GlyphIterator:isPrinting(char)
M:org.apache.batik.extension.svg.GlyphIterator:getCharAdvance() (M)org.apache.batik.extension.svg.GlyphIterator:getCharAdvance(int)
M:org.apache.batik.extension.svg.GlyphIterator:getCharWidth() (M)org.apache.batik.extension.svg.GlyphIterator:getCharWidth(int)
M:org.apache.batik.extension.svg.GlyphIterator:getCharWidth(int) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphVisualBounds(int)
M:org.apache.batik.extension.svg.GlyphIterator:getCharWidth(int) (I)java.awt.Shape:getBounds2D()
M:org.apache.batik.extension.svg.GlyphIterator:getCharWidth(int) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphPosition(int)
M:org.apache.batik.extension.svg.GlyphIterator:getCharWidth(int) (M)java.awt.geom.Rectangle2D:getX()
M:org.apache.batik.extension.svg.GlyphIterator:getCharWidth(int) (M)java.awt.geom.Rectangle2D:getWidth()
M:org.apache.batik.extension.svg.GlyphIterator:getCharWidth(int) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.extension.svg.LineInfo:<init>(java.awt.geom.Point2D$Float,java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector,int,int,float,float,float,float,boolean,java.awt.geom.Point2D$Float) (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.LineInfo:toString() (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(java.lang.Object)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(char)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(int)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(float)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(float)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(float)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(float)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(boolean)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:append(java.lang.Object)
M:org.apache.batik.extension.svg.LineInfo:toString() (M)java.lang.StringBuilder:toString()
M:org.apache.batik.extension.svg.FlowExtTextLayoutFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.FlowExtTextLayoutFactory:createTextLayout(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext) (O)org.apache.batik.extension.svg.FlowExtGlyphLayout:<init>(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext)
M:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionElementFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionElementFactory:create(java.lang.String,org.w3c.dom.Document) (O)org.apache.batik.extension.svg.FlowRegionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:<init>() (O)org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge:<init>()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:getInstance() (O)org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:<init>()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map) (S)org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map) (I)org.apache.batik.ext.awt.image.renderable.Filter:getBounds2D()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map) (S)org.apache.batik.bridge.SVGUtilities:convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map) (I)org.w3c.dom.Element:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map) (S)org.apache.batik.bridge.SVGUtilities:convertSVGNumber(java.lang.String)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map) (O)org.apache.batik.bridge.BridgeException:<init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map) (O)org.apache.batik.extension.svg.BatikHistogramNormalizationFilter8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,float)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map) (O)org.apache.batik.ext.awt.image.renderable.PadRable8Bit:<init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map) (S)org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:createFilter(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,java.util.Map) (S)org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getAttributeNS(java.lang.String,java.lang.String)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (S)org.apache.batik.bridge.SVGUtilities:convertSVGInteger(java.lang.String)
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.bridge.BridgeException:<init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:convertSides(org.w3c.dom.Element,java.lang.String,int,org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.bridge.BridgeException:<init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.svg.BatikDomExtension$FlowLineElementFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$FlowLineElementFactory:create(java.lang.String,org.w3c.dom.Document) (O)org.apache.batik.extension.svg.FlowLineElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:<init>() (O)org.apache.batik.bridge.SVGTextElementBridge:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getInstance() (O)org.apache.batik.extension.svg.BatikFlowTextElementBridge:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:instantiateGraphicsNode() (O)org.apache.batik.extension.svg.FlowExtTextNode:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getLocation(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Element:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Element:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (O)org.apache.batik.extension.svg.BatikFlowTextElementBridge$BatikFlowContentBridge:<init>(org.apache.batik.extension.svg.BatikFlowTextElementBridge,org.apache.batik.bridge.BridgeContext,org.apache.batik.bridge.SVGTextElementBridge,org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.anim.dom.SVGOMElement:setSVGContext(org.apache.batik.dom.svg.SVGContext)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getFirstChild(org.w3c.dom.Node)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Node:getNodeType()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addContextToChild(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNextSibling(org.w3c.dom.Node)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildAttributedString(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildAttributedString(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getFlowDiv(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildAttributedString(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getNodeType()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.bridge.SVGTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getFirstChild()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getNodeType()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.bridge.SVGTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getNextSibling()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getFirstChild()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getNodeType()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:addGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildGlyphPositionAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getNextSibling()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getNodeType()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.bridge.SVGTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getFirstChild()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getNodeType()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.bridge.SVGTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getNextSibling()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Element:getFirstChild()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getNodeType()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getTextPaintInfo(org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:addPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:addChildPaintAttributes(java.text.AttributedString,org.w3c.dom.Element,org.apache.batik.bridge.TextNode,org.apache.batik.gvt.text.TextPaintInfo,org.apache.batik.bridge.BridgeContext) (I)org.w3c.dom.Node:getNextSibling()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getFlowDiv(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Element:getFirstChild()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getFlowDiv(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Node:getNodeType()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getFlowDiv(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getFlowDiv(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Node:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getFlowDiv(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getFlowDiv(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Node:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getFlowDiv(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getFlowDiv(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getFlowDiv(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Node:getNextSibling()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (O)org.apache.batik.gvt.text.TextPaintInfo:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.util.WeakHashMap:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (O)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (O)java.util.ArrayList:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (O)java.util.ArrayList:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (O)java.util.ArrayList:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Element:getFirstChild()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Node:getNodeType()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Node:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Element:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Node:getNextSibling()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:toAttributedString()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)java.util.List:iterator()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.Integer:intValue()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)java.util.List:size()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)java.util.List:get(int)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)java.util.List:get(int)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.Integer:intValue()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (O)java.util.LinkedList:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherFlowPara(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.text.AttributedString:addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (O)java.util.LinkedList:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Element:getFirstChild()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Node:getNodeType()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Node:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Element:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getRegions(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element) (I)org.w3c.dom.Node:getNextSibling()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List) (I)org.w3c.dom.Element:getFirstChild()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List) (I)org.w3c.dom.Node:getNodeType()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List) (I)org.w3c.dom.Node:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List) (I)org.w3c.dom.Node:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List) (S)org.apache.batik.bridge.UnitProcessor:createContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:gatherRegionInfo(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,float,java.util.List) (I)org.w3c.dom.Node:getNextSibling()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (S)org.apache.batik.bridge.UnitProcessor:svgHorizontalCoordinateToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (S)org.apache.batik.bridge.UnitProcessor:svgVerticalCoordinateToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (S)org.apache.batik.bridge.UnitProcessor:svgHorizontalLengthToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (O)org.apache.batik.bridge.BridgeException:<init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (S)org.apache.batik.bridge.UnitProcessor:svgVerticalLengthToUserSpace(java.lang.String,java.lang.String,org.apache.batik.parser.UnitProcessor$Context)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (O)org.apache.batik.bridge.BridgeException:<init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:buildRegion(org.apache.batik.parser.UnitProcessor$Context,org.w3c.dom.Element,float) (O)org.apache.batik.extension.svg.RegionInfo:<init>(float,float,float,float,float)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.BridgeContext:getUserAgent()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (S)org.apache.batik.bridge.SVGUtilities:matchUserAgent(org.w3c.dom.Element,org.apache.batik.bridge.UserAgent)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (S)org.apache.batik.bridge.CSSUtilities:convertDisplay(org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (S)org.apache.batik.dom.util.XMLSupport:getXMLSpace(org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (O)java.util.HashMap:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (O)java.util.HashMap:<init>(java.util.Map)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)java.util.Map:get(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)org.w3c.dom.Element:getFirstChild()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:getLastChar()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)org.w3c.dom.Node:getNodeType()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)org.w3c.dom.Node:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)org.w3c.dom.Node:getNamespaceURI()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)org.w3c.dom.Node:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.BridgeContext:isInteractive()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.BridgeContext:getUserAgent()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (O)org.apache.batik.bridge.SVGAElementBridge$CursorHolder:<init>(java.awt.Cursor)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (O)org.apache.batik.bridge.SVGAElementBridge$AnchorListener:<init>(org.apache.batik.bridge.UserAgent,org.apache.batik.bridge.SVGAElementBridge$CursorHolder)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)org.apache.batik.dom.events.NodeEventTarget:addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (O)org.apache.batik.bridge.SVGAElementBridge$CursorMouseOverListener:<init>(org.apache.batik.bridge.UserAgent,org.apache.batik.bridge.SVGAElementBridge$CursorHolder)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)org.apache.batik.dom.events.NodeEventTarget:addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (O)org.apache.batik.bridge.SVGAElementBridge$CursorMouseOutListener:<init>(org.apache.batik.bridge.UserAgent,org.apache.batik.bridge.SVGAElementBridge$CursorHolder)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)org.apache.batik.dom.events.NodeEventTarget:addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (S)org.apache.batik.dom.util.XLinkSupport:getXLinkHref(org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.BridgeContext:getReferencedElement(org.w3c.dom.Element,java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (S)org.apache.batik.bridge.TextUtilities:getElementContent(org.w3c.dom.Element)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:normalizeString(java.lang.String,boolean,boolean)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (O)java.util.HashMap:<init>()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (O)java.util.HashMap:<init>(java.util.Map)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:append(java.lang.String,java.util.Map)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.util.WeakHashMap:get(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)org.w3c.dom.Node:getNodeValue()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.extension.svg.BatikFlowTextElementBridge:normalizeString(java.lang.String,boolean,boolean)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:append(java.lang.String,java.util.Map)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)org.w3c.dom.Node:getNextSibling()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:getLastChar()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:stripLast()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.util.WeakHashMap:values()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)java.util.Collection:iterator()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:fillAttributedStringBuffer(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,boolean,java.lang.Integer,java.util.Map,org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer,java.util.List) (M)java.util.WeakHashMap:get(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map) (O)org.apache.batik.bridge.SVGTextElementBridge:getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:getAttributeMap(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.text.TextPath,java.lang.Integer,java.util.Map) (I)java.util.Map:put(java.lang.Object,java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:checkMap(java.util.Map) (I)java.util.Map:containsKey(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:checkMap(java.util.Map) (I)java.util.Map:containsKey(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:checkMap(java.util.Map) (I)java.util.Map:containsKey(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:checkMap(java.util.Map) (I)java.util.Map:containsKey(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:checkMap(java.util.Map) (I)java.util.Map:containsKey(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (S)java.lang.Float:parseFloat(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (S)java.lang.Float:parseFloat(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (S)java.lang.Float:parseFloat(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (S)java.lang.Float:parseFloat(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (S)java.lang.Float:parseFloat(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (S)java.lang.Float:parseFloat(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (I)org.w3c.dom.Element:getAttribute(java.lang.String)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (M)java.lang.String:length()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (I)org.w3c.dom.Element:getLocalName()
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.svg.BatikFlowTextElementBridge:makeMarginInfo(org.w3c.dom.Element) (O)org.apache.batik.extension.svg.MarginInfo:<init>(float,float,float,float,float,int,boolean)
M:org.apache.batik.extension.svg.FlowDivElement:<init>() (O)org.apache.batik.extension.PrefixableStylableExtensionElement:<init>()
M:org.apache.batik.extension.svg.FlowDivElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.extension.PrefixableStylableExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.FlowDivElement:newNode() (O)org.apache.batik.extension.svg.FlowDivElement:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$FlowParaElementFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$FlowParaElementFactory:create(java.lang.String,org.w3c.dom.Document) (O)org.apache.batik.extension.svg.FlowParaElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.FlowExtTextPainter:<init>() (O)org.apache.batik.bridge.StrokingTextPainter:<init>()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (M)org.apache.batik.bridge.TextNode:getTextRuns()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (M)org.apache.batik.extension.svg.FlowExtTextPainter:getTextChunkACIs(java.text.AttributedCharacterIterator)
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (M)org.apache.batik.extension.svg.FlowExtTextPainter:computeTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator,java.text.AttributedCharacterIterator[])
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (I)java.util.List:iterator()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (O)java.util.ArrayList:<init>()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (O)java.util.ArrayList:<init>()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (M)org.apache.batik.bridge.StrokingTextPainter$TextRun:getLayout()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (M)org.apache.batik.bridge.StrokingTextPainter$TextRun:isFirstRunInChunk()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (O)java.util.ArrayList:<init>()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (M)org.apache.batik.bridge.StrokingTextPainter$TextRun:getLayout()
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (S)org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List)
M:org.apache.batik.extension.svg.FlowExtTextPainter:getTextRuns(org.apache.batik.bridge.TextNode,java.text.AttributedCharacterIterator) (M)org.apache.batik.bridge.TextNode:setTextRuns(java.util.List)
M:org.apache.batik.extension.svg.FlowExtTextPainter:<clinit>() (O)org.apache.batik.extension.svg.FlowExtTextPainter:<init>()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:<init>(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext) (O)org.apache.batik.bridge.GlyphLayout:<init>(java.text.AttributedCharacterIterator,int[],java.awt.geom.Point2D,java.awt.font.FontRenderContext)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.List:iterator()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.List:iterator()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getHeight()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.List:iterator()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getTopMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getTopMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:isFlowRegionBreak()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getBottomMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getHeight()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (O)java.util.LinkedList:<init>()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.List:iterator()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.bridge.GlyphLayout:getGlyphVector()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (O)org.apache.batik.gvt.font.MultiGlyphVector:<init>(java.util.List)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)org.apache.batik.gvt.font.GVTGlyphVector:getNumGlyphs()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphVisible(int,boolean)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getTopMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getTopMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getHeight()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getTopMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getBottomMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getLeftMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getRightMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.List:get(int)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.bridge.GlyphLayout:isLeftToRight()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getIndent()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getIndent()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getX()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getY()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getWidth()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getHeight()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (O)java.util.LinkedList:<init>()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (O)org.apache.batik.extension.svg.GlyphIterator:<init>(java.text.AttributedCharacterIterator,org.apache.batik.gvt.font.GVTGlyphVector)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:done()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:isPrinting()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (S)org.apache.batik.extension.svg.FlowExtGlyphLayout:updateVerticalAlignOffset(java.awt.geom.Point2D$Float,org.apache.batik.extension.svg.RegionInfo,float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:copy()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:done()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:isPrinting()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:getAdv()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:copy(org.apache.batik.extension.svg.GlyphIterator)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getX()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getY()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getWidth()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getHeight()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getTopMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:copy(org.apache.batik.extension.svg.GlyphIterator)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:copy(org.apache.batik.extension.svg.GlyphIterator)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:isLastChar()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:getLineBreaks()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:isBreakChar()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:isBreakChar()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:copy(org.apache.batik.extension.svg.GlyphIterator)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:nextChar()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:getChar()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:nextChar()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:getMaxAscent()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:getMaxDescent()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:getMaxFontSize()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:getMaxAscent()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:getMaxDescent()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:getMaxDescent()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:getMaxDescent()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:copy(org.apache.batik.extension.svg.GlyphIterator)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getX()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getY()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getWidth()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getHeight()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getTopMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:copy(org.apache.batik.extension.svg.GlyphIterator)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (S)org.apache.batik.extension.svg.FlowExtGlyphLayout:updateVerticalAlignOffset(java.awt.geom.Point2D$Float,org.apache.batik.extension.svg.RegionInfo,float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:newLine(java.awt.geom.Point2D$Float,float,boolean,java.awt.geom.Point2D$Float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.List:add(java.lang.Object)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getLeftMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getRightMargin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:copy(org.apache.batik.extension.svg.GlyphIterator)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:getGlyphIndex()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphVisible(int,boolean)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:isFlowRegionBreak()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.RegionInfo:getHeight()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (O)java.awt.geom.Point2D$Float:<init>(float,float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.text.AttributedCharacterIterator:first()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (I)java.text.AttributedCharacterIterator:getAttribute(java.text.AttributedCharacterIterator$Attribute)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.MarginInfo:getJustification()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (M)org.apache.batik.extension.svg.GlyphIterator:getOrigin()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:textWrapTextChunk(java.text.AttributedCharacterIterator[],java.util.List,java.util.List) (S)org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:updateVerticalAlignOffset(java.awt.geom.Point2D$Float,org.apache.batik.extension.svg.RegionInfo,float) (M)org.apache.batik.extension.svg.RegionInfo:getHeight()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:updateVerticalAlignOffset(java.awt.geom.Point2D$Float,org.apache.batik.extension.svg.RegionInfo,float) (M)org.apache.batik.extension.svg.RegionInfo:getVerticalAlignment()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:updateVerticalAlignOffset(java.awt.geom.Point2D$Float,org.apache.batik.extension.svg.RegionInfo,float) (M)java.awt.geom.Point2D$Float:setLocation(float,float)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (I)java.util.List:iterator()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (I)org.apache.batik.gvt.font.GVTGlyphVector:getNumGlyphs()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (I)org.apache.batik.gvt.font.GVTGlyphVector:getGlyphPositions(int,int,float[])
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (M)java.awt.geom.Point2D:getX()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (M)java.awt.geom.Point2D:getY()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (O)java.awt.geom.Point2D$Float:<init>()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (I)java.util.Iterator:hasNext()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (I)java.util.Iterator:next()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (M)org.apache.batik.extension.svg.LineInfo:getEndIdx()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (M)org.apache.batik.extension.svg.LineInfo:getLocation()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (M)org.apache.batik.extension.svg.LineInfo:getAdvance()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (M)org.apache.batik.extension.svg.LineInfo:getVisualAdvance()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (M)org.apache.batik.extension.svg.LineInfo:getLastCharWidth()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (M)org.apache.batik.extension.svg.LineInfo:getLineWidth()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (M)org.apache.batik.extension.svg.LineInfo:isPartialLine()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (M)org.apache.batik.extension.svg.LineInfo:getVerticalAlignOffset()
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D)
M:org.apache.batik.extension.svg.FlowExtGlyphLayout:layoutChunk(org.apache.batik.gvt.font.GVTGlyphVector,java.awt.geom.Point2D,int,java.util.List) (I)org.apache.batik.gvt.font.GVTGlyphVector:setGlyphPosition(int,java.awt.geom.Point2D)
M:org.apache.batik.extension.svg.FlowExtTextNode:<init>() (O)org.apache.batik.bridge.TextNode:<init>()
M:org.apache.batik.extension.svg.FlowExtTextNode:<init>() (S)org.apache.batik.extension.svg.FlowExtTextPainter:getInstance()
M:org.apache.batik.extension.svg.FlowExtTextNode:setTextPainter(org.apache.batik.bridge.TextPainter) (S)org.apache.batik.extension.svg.FlowExtTextPainter:getInstance()
M:org.apache.batik.extension.svg.BatikDomExtension$BatikRegularPolygonElementFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$BatikRegularPolygonElementFactory:create(java.lang.String,org.w3c.dom.Document) (O)org.apache.batik.extension.svg.BatikRegularPolygonElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.ColorSwitchBridge:<init>() (O)org.apache.batik.bridge.AbstractSVGBridge:<init>()
M:org.apache.batik.extension.svg.ColorSwitchBridge:createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float) (I)org.w3c.dom.Element:getFirstChild()
M:org.apache.batik.extension.svg.ColorSwitchBridge:createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float) (I)org.w3c.dom.Node:getNodeType()
M:org.apache.batik.extension.svg.ColorSwitchBridge:createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float) (M)org.apache.batik.bridge.BridgeContext:getUserAgent()
M:org.apache.batik.extension.svg.ColorSwitchBridge:createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float) (S)org.apache.batik.bridge.SVGUtilities:matchUserAgent(org.w3c.dom.Element,org.apache.batik.bridge.UserAgent)
M:org.apache.batik.extension.svg.ColorSwitchBridge:createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float) (I)org.w3c.dom.Node:getNextSibling()
M:org.apache.batik.extension.svg.ColorSwitchBridge:createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float) (M)org.apache.batik.bridge.BridgeContext:getBridge(org.w3c.dom.Element)
M:org.apache.batik.extension.svg.ColorSwitchBridge:createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float) (I)org.apache.batik.bridge.PaintBridge:createPaint(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float)
M:org.apache.batik.extension.svg.BatikDomExtension$ColorSwitchElementFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$ColorSwitchElementFactory:create(java.lang.String,org.w3c.dom.Document) (O)org.apache.batik.extension.svg.ColorSwitchElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionBreakElementFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$FlowRegionBreakElementFactory:create(java.lang.String,org.w3c.dom.Document) (O)org.apache.batik.extension.svg.FlowRegionBreakElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.BatikDomExtension$FlowTextElementFactory:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikDomExtension$FlowTextElementFactory:create(java.lang.String,org.w3c.dom.Document) (O)org.apache.batik.extension.svg.FlowTextElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.FlowRegionBreakElement:<init>() (O)org.apache.batik.anim.dom.SVGOMTextPositioningElement:<init>()
M:org.apache.batik.extension.svg.FlowRegionBreakElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.anim.dom.SVGOMTextPositioningElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.FlowRegionBreakElement:newNode() (O)org.apache.batik.extension.svg.FlowRegionBreakElement:<init>()
M:org.apache.batik.extension.svg.ColorSwitchElement:<init>() (O)org.apache.batik.extension.PrefixableStylableExtensionElement:<init>()
M:org.apache.batik.extension.svg.ColorSwitchElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.extension.PrefixableStylableExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.ColorSwitchElement:newNode() (O)org.apache.batik.extension.svg.ColorSwitchElement:<init>()
M:org.apache.batik.extension.svg.BatikBridgeExtension:<init>() (O)java.lang.Object:<init>()
M:org.apache.batik.extension.svg.BatikBridgeExtension:getImplementedExtensions() (S)java.util.Arrays:asList(java.lang.Object[])
M:org.apache.batik.extension.svg.BatikBridgeExtension:getImplementedExtensions() (S)java.util.Collections:unmodifiableList(java.util.List)
M:org.apache.batik.extension.svg.BatikBridgeExtension:getImplementedExtensions() (I)java.util.List:iterator()
M:org.apache.batik.extension.svg.BatikBridgeExtension:registerTags(org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.extension.svg.BatikRegularPolygonElementBridge:<init>()
M:org.apache.batik.extension.svg.BatikBridgeExtension:registerTags(org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.bridge.BridgeContext:putBridge(org.apache.batik.bridge.Bridge)
M:org.apache.batik.extension.svg.BatikBridgeExtension:registerTags(org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.extension.svg.BatikStarElementBridge:<init>()
M:org.apache.batik.extension.svg.BatikBridgeExtension:registerTags(org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.bridge.BridgeContext:putBridge(org.apache.batik.bridge.Bridge)
M:org.apache.batik.extension.svg.BatikBridgeExtension:registerTags(org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.extension.svg.BatikHistogramNormalizationElementBridge:<init>()
M:org.apache.batik.extension.svg.BatikBridgeExtension:registerTags(org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.bridge.BridgeContext:putBridge(org.apache.batik.bridge.Bridge)
M:org.apache.batik.extension.svg.BatikBridgeExtension:registerTags(org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.extension.svg.BatikFlowTextElementBridge:<init>()
M:org.apache.batik.extension.svg.BatikBridgeExtension:registerTags(org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.bridge.BridgeContext:putBridge(org.apache.batik.bridge.Bridge)
M:org.apache.batik.extension.svg.BatikBridgeExtension:registerTags(org.apache.batik.bridge.BridgeContext) (O)org.apache.batik.extension.svg.ColorSwitchBridge:<init>()
M:org.apache.batik.extension.svg.BatikBridgeExtension:registerTags(org.apache.batik.bridge.BridgeContext) (M)org.apache.batik.bridge.BridgeContext:putBridge(org.apache.batik.bridge.Bridge)
M:org.apache.batik.extension.svg.FlowTextElement:<init>() (O)org.apache.batik.extension.GraphicsExtensionElement:<init>()
M:org.apache.batik.extension.svg.FlowTextElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.extension.GraphicsExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.svg.FlowTextElement:newNode() (O)org.apache.batik.extension.svg.FlowTextElement:<init>()
M:org.apache.batik.extension.PrefixableStylableExtensionElement:<init>() (O)org.apache.batik.extension.StylableExtensionElement:<init>()
M:org.apache.batik.extension.PrefixableStylableExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (O)org.apache.batik.extension.StylableExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument)
M:org.apache.batik.extension.PrefixableStylableExtensionElement:<init>(java.lang.String,org.apache.batik.dom.AbstractDocument) (M)org.apache.batik.extension.PrefixableStylableExtensionElement:setPrefix(java.lang.String)
M:org.apache.batik.extension.PrefixableStylableExtensionElement:getNodeName() (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.PrefixableStylableExtensionElement:getNodeName() (M)org.apache.batik.extension.PrefixableStylableExtensionElement:getLocalName()
M:org.apache.batik.extension.PrefixableStylableExtensionElement:getNodeName() (O)java.lang.StringBuilder:<init>()
M:org.apache.batik.extension.PrefixableStylableExtensionElement:getNodeName() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.extension.PrefixableStylableExtensionElement:getNodeName() (M)java.lang.StringBuilder:append(char)
M:org.apache.batik.extension.PrefixableStylableExtensionElement:getNodeName() (M)org.apache.batik.extension.PrefixableStylableExtensionElement:getLocalName()
M:org.apache.batik.extension.PrefixableStylableExtensionElement:getNodeName() (M)java.lang.StringBuilder:append(java.lang.String)
M:org.apache.batik.extension.PrefixableStylableExtensionElement:getNodeName() (M)java.lang.StringBuilder:toString()
M:org.apache.batik.extension.PrefixableStylableExtensionElement:setPrefix(java.lang.String) (M)org.apache.batik.extension.PrefixableStylableExtensionElement:isReadonly()
M:org.apache.batik.extension.PrefixableStylableExtensionElement:setPrefix(java.lang.String) (M)org.apache.batik.extension.PrefixableStylableExtensionElement:getNodeType()
M:org.apache.batik.extension.PrefixableStylableExtensionElement:setPrefix(java.lang.String) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.extension.PrefixableStylableExtensionElement:setPrefix(java.lang.String) (M)org.apache.batik.extension.PrefixableStylableExtensionElement:getNodeName()
M:org.apache.batik.extension.PrefixableStylableExtensionElement:setPrefix(java.lang.String) (M)org.apache.batik.extension.PrefixableStylableExtensionElement:createDOMException(short,java.lang.String,java.lang.Object[])
M:org.apache.batik.extension.PrefixableStylableExtensionElement:setPrefix(java.lang.String) (M)java.lang.String:equals(java.lang.Object)
M:org.apache.batik.extension.PrefixableStylableExtensionElement:setPrefix(java.lang.String) (S)org.apache.batik.dom.util.DOMUtilities:isValidName(java.lang.String)
M:org.apache.batik.extension.PrefixableStylableExtensionElement:setPrefix(java.lang.String) (M)org.apache.batik.extension.PrefixableStylableExtensionElement:getNodeType()
M:org.apache.batik.extension.PrefixableStylableExtensionElement:setPrefix(java.lang.String) (S)java.lang.Integer:valueOf(int)
M:org.apache.batik.extension.PrefixableStylableExtensionElement:setPrefix(java.lang.String) (M)org.apache.batik.extension.PrefixableStylableExtensionElement:getNodeName()
M:org.apache.batik.extension.PrefixableStylableExtensionElement:setPrefix(java.lang.String) (M)org.apache.batik.extension.PrefixableStylableExtensionElement:createDOMException(short,java.lang.String,java.lang.Object[])
