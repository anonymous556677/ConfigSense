Jar_name_x,function,option,Method,Jar_name_y,Method_short,class_name,xml_path,Method_body
prevayler-factory-2.7-SNAPSHOT,org.prevayler.PrevaylerFactory:transactionDeepCopyMode(),_transactionDeepCopyMode,(O)org.prevayler.PrevaylerFactory:snapshotManager(),prevayler-factory-2.7-SNAPSHOT,snapshotManager,PrevaylerFactory,../data/xml/prevayler_call_methods/PrevaylerFactory.xml,"
private GenericSnapshotManager<P> snapshotManager() throws Exception {
    if (_nullSnapshotManager != null)
      return _nullSnapshotManager;

    PrevaylerDirectory directory = new PrevaylerDirectory(prevalenceDirectory());
    if (!_snapshotSerializers.isEmpty())
      return new GenericSnapshotManager<P>(_snapshotSerializers, _primarySnapshotSuffix, prevalentSystem(), directory,
          journalSerializer());

    String snapshotSuffix = ""snapshot"";
    JavaSerializer snapshotSerializer = new JavaSerializer();
    return new GenericSnapshotManager<P>(Collections.singletonMap(snapshotSuffix, snapshotSerializer), snapshotSuffix,
        prevalentSystem(), directory, journalSerializer());
  }

  "
prevayler-factory-2.7-SNAPSHOT,org.prevayler.PrevaylerFactory:transactionDeepCopyMode(),_transactionDeepCopyMode,(O)org.prevayler.PrevaylerFactory:publisher(org.prevayler.implementation.snapshot.GenericSnapshotManager),prevayler-factory-2.7-SNAPSHOT,publisher,PrevaylerFactory,../data/xml/prevayler_call_methods/PrevaylerFactory.xml,"
private TransactionPublisher<P> publisher(GenericSnapshotManager<P> snapshotManager) throws IOException {
    if (_remoteServerIpAddress != null)
      return new ClientPublisher<P>(new OldNetworkImpl(), _remoteServerIpAddress, _remoteServerPort);
    return new CentralPublisher<P>(clock(), journal());
  }

  "
prevayler-factory-2.7-SNAPSHOT,org.prevayler.PrevaylerFactory:transactionDeepCopyMode(),_transactionDeepCopyMode,(O)org.prevayler.foundation.network.OldNetworkImpl:<init>(),prevayler-factory-2.7-SNAPSHOT,<init>,OldNetworkImpl,../data/xml/prevayler_call_methods/OldNetworkImpl.xml,not found
prevayler-factory-2.7-SNAPSHOT,org.prevayler.PrevaylerFactory:transactionDeepCopyMode(),_transactionDeepCopyMode,"(O)org.prevayler.implementation.replication.ServerListener:<init>(org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.network.OldNetworkImpl,int)",prevayler-factory-2.7-SNAPSHOT,<init>,ServerListener,../data/xml/prevayler_call_methods/ServerListener.xml,"//TODO Close the socket when the publisher is closed (listen for it or have the Dashboard (new idea) close this when it closes the publisher).
public ServerListener(TransactionPublisher<P> publisher, OldNetworkImpl network, int port) throws IOException {
    _serverSocket = network.openObjectServerSocket(port);
    _publisher = publisher;
    setDaemon(true);
    start(); //FIXME: Make sure this thread ends when Prevayler is closed.
  }

  "
prevayler-factory-2.7-SNAPSHOT,org.prevayler.PrevaylerFactory:transactionDeepCopyMode(),_transactionDeepCopyMode,(O)org.prevayler.PrevaylerFactory:journalSerializer(),prevayler-factory-2.7-SNAPSHOT,journalSerializer,PrevaylerFactory,../data/xml/prevayler_call_methods/PrevaylerFactory.xml,"
private Serializer journalSerializer() {
    if (_journalSerializer != null)
      return _journalSerializer;
    return new JavaSerializer();
  }

  "
prevayler-factory-2.7-SNAPSHOT,org.prevayler.PrevaylerFactory:transactionDeepCopyMode(),_transactionDeepCopyMode,(O)org.prevayler.PrevaylerFactory:transactionDeepCopyMode(),prevayler-factory-2.7-SNAPSHOT,transactionDeepCopyMode,PrevaylerFactory,../data/xml/prevayler_call_methods/PrevaylerFactory.xml,not found
prevayler-factory-2.7-SNAPSHOT,org.prevayler.PrevaylerFactory:transactionDeepCopyMode(),_transactionDeepCopyMode,"(O)org.prevayler.implementation.PrevaylerImpl:<init>(org.prevayler.implementation.snapshot.GenericSnapshotManager,org.prevayler.implementation.publishing.TransactionPublisher,org.prevayler.foundation.serialization.Serializer,boolean)",prevayler-factory-2.7-SNAPSHOT,<init>,PrevaylerImpl,../data/xml/prevayler_call_methods/PrevaylerImpl.xml,"/**
   * Creates a new Prevayler
   *
   * @param snapshotManager      The SnapshotManager that will be used for reading and writing snapshot files.
   * @param transactionPublisher The TransactionPublisher that will be used for publishing transactions executed with this PrevaylerImpl.
   * @param journalSerializer
   */
public PrevaylerImpl(GenericSnapshotManager<P> snapshotManager, TransactionPublisher<P> transactionPublisher,
                       Serializer journalSerializer, boolean transactionDeepCopyMode) throws IOException, ClassNotFoundException {
    _snapshotManager = snapshotManager;

    _guard = _snapshotManager.recoveredPrevalentSystem();

    _publisher = transactionPublisher;
    _clock = _publisher.clock();

    _guard.subscribeTo(_publisher);

    _journalSerializer = journalSerializer;

    _transactionDeepCopyMode = transactionDeepCopyMode;
  }

  "
