Jar_name_x,function,option,Method_short,class_name,xml_path,Method_body,Method,Jar_name_y
batik-all-1.14,org.apache.batik.transcoder.TranscodingHints:get(java.lang.Object),CONSTRAIN_SCRIPT_ORIGIN,computeAllowedScripts,SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent,../data/xml/batik_call_methods/SVGAbstractTranscoder.xml,"/**
         * Helper method. Builds a Vector containing the allowed
         * values for the &lt;script&gt; element's type attribute.
         */
protected void computeAllowedScripts(){
            scripts = new LinkedList();
            if (!SVGAbstractTranscoder.this.hints.containsKey
                (KEY_ALLOWED_SCRIPT_TYPES)) {
                return;
            }

            String allowedScripts
                = (String)SVGAbstractTranscoder.this.hints.get
                (KEY_ALLOWED_SCRIPT_TYPES);

            StringTokenizer st = new StringTokenizer(allowedScripts, "","");
            while (st.hasMoreTokens()) {
                scripts.add(st.nextToken());
            }
        }

        ",(M)org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent:computeAllowedScripts(),batik-all-1.14
batik-all-1.14,org.apache.batik.transcoder.TranscodingHints:get(java.lang.Object),CONSTRAIN_SCRIPT_ORIGIN,computeAllowedScripts,SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent,../data/xml/batik_call_methods/SVGAbstractTranscoder.xml,"/**
         * Helper method. Builds a Vector containing the allowed
         * values for the &lt;script&gt; element's type attribute.
         */
protected void computeAllowedScripts(){
            scripts = new LinkedList();
            if (!SVGAbstractTranscoder.this.hints.containsKey
                (KEY_ALLOWED_SCRIPT_TYPES)) {
                return;
            }

            String allowedScripts
                = (String)SVGAbstractTranscoder.this.hints.get
                (KEY_ALLOWED_SCRIPT_TYPES);

            StringTokenizer st = new StringTokenizer(allowedScripts, "","");
            while (st.hasMoreTokens()) {
                scripts.add(st.nextToken());
            }
        }

        ",(M)org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent:computeAllowedScripts(),batik-transcoder-1.14
