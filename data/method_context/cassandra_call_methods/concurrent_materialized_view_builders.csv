function,option,Method,Method_short,class_name,xml_path,Method_body
org.apache.cassandra.config.DatabaseDescriptor:getConcurrentViewBuilders(),concurrent_materialized_view_builders,(S)org.apache.cassandra.config.DatabaseDescriptor:getConcurrentViewBuilders(),getConcurrentViewBuilders,DatabaseDescriptor,../data/xml/cassandra_call_methods/DatabaseDescriptor.xml,"
public static int getConcurrentViewBuilders()
    {
        return conf.concurrent_materialized_view_builders;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getConcurrentViewBuilders(),concurrent_materialized_view_builders,(S)org.apache.cassandra.config.DatabaseDescriptor:setConcurrentViewBuilders(int),setConcurrentViewBuilders,DatabaseDescriptor,../data/xml/cassandra_call_methods/DatabaseDescriptor.xml,"
public static void setConcurrentViewBuilders(int value)
    {
        conf.concurrent_materialized_view_builders = value;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getConcurrentViewBuilders(),concurrent_materialized_view_builders,(M)org.apache.cassandra.db.compaction.CompactionManager:setConcurrentViewBuilders(int),setConcurrentViewBuilders,CompactionManager,../data/xml/cassandra_call_methods/CompactionManager.xml,"
public void setConcurrentViewBuilders(int value)
    {
        if (value > viewBuildExecutor.getCorePoolSize())
        {
            // we are increasing the value
            viewBuildExecutor.setMaximumPoolSize(value);
            viewBuildExecutor.setCorePoolSize(value);
        }
        else if (value < viewBuildExecutor.getCorePoolSize())
        {
            // we are reducing the value
            viewBuildExecutor.setCorePoolSize(value);
            viewBuildExecutor.setMaximumPoolSize(value);
        }
    }

    "
