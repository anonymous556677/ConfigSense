function,option,Method,Method_short,class_name,xml_path,Method_body
org.apache.cassandra.config.DatabaseDescriptor:getNetworkingCacheSizeInMB(),networking_cache_size_in_mb,(S)org.apache.cassandra.config.DatabaseDescriptor:getFileCacheSizeInMB(),getFileCacheSizeInMB,DatabaseDescriptor,../data/xml/cassandra_call_methods/DatabaseDescriptor.xml,"
public static int getFileCacheSizeInMB()
    {
        if (conf.file_cache_size_in_mb == null)
        {
            // In client mode the value is not set.
            assert DatabaseDescriptor.isClientInitialized();
            return 0;
        }

        return conf.file_cache_size_in_mb;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getNetworkingCacheSizeInMB(),networking_cache_size_in_mb,(S)org.apache.cassandra.config.DatabaseDescriptor:getNetworkingCacheSizeInMB(),getNetworkingCacheSizeInMB,DatabaseDescriptor,../data/xml/cassandra_call_methods/DatabaseDescriptor.xml,"
public static int getNetworkingCacheSizeInMB()
    {
        if (conf.networking_cache_size_in_mb == null)
        {
            // In client mode the value is not set.
            assert DatabaseDescriptor.isClientInitialized();
            return 0;
        }
        return conf.networking_cache_size_in_mb;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getNetworkingCacheSizeInMB(),networking_cache_size_in_mb,(S)org.apache.cassandra.utils.FBUtilities:prettyPrintMemory(long),prettyPrintMemory,FBUtilities,../data/xml/cassandra_call_methods/FBUtilities.xml,"
public static String prettyPrintMemory(long size)
    {
        return prettyPrintMemory(size, false);
    }

    

public static String prettyPrintMemory(long size, boolean includeSpace)
    {
        if (size >= 1 << 30)
            return String.format(""%.3f%sGiB"", size / (double) (1 << 30), includeSpace ? "" "" : """");
        if (size >= 1 << 20)
            return String.format(""%.3f%sMiB"", size / (double) (1 << 20), includeSpace ? "" "" : """");
        return String.format(""%.3f%sKiB"", size / (double) (1 << 10), includeSpace ? "" "" : """");
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getNetworkingCacheSizeInMB(),networking_cache_size_in_mb,(M)org.apache.cassandra.utils.memory.BufferPool:metrics(),metrics,BufferPool,../data/xml/cassandra_call_methods/BufferPool.xml,"
@VisibleForTesting
    public BufferPoolMetrics metrics()
    {
        return metrics;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getNetworkingCacheSizeInMB(),networking_cache_size_in_mb,(M)org.apache.cassandra.metrics.BufferPoolMetrics:register3xAlias(),register3xAlias,BufferPoolMetrics,../data/xml/cassandra_call_methods/BufferPoolMetrics.xml,"/**
     * used to register alias for 3.0/3.11 compatibility
     */
public void register3xAlias()
    {
        MetricNameFactory legacyFactory = new DefaultNameFactory(""BufferPool"");
        Metrics.registerMBean(misses, legacyFactory.createMetricName(""Misses"").getMBeanName());
        Metrics.registerMBean(size, legacyFactory.createMetricName(""Size"").getMBeanName());
    }
}"
