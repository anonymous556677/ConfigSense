function,option,Method,Method_short,class_name,xml_path,Method_body
org.apache.cassandra.config.DatabaseDescriptor:getFileCacheEnabled(),file_cache_enabled,(S)org.apache.cassandra.config.DatabaseDescriptor:getFileCacheSizeInMB(),getFileCacheSizeInMB,DatabaseDescriptor,../data/xml/cassandra_call_methods/DatabaseDescriptor.xml,"
public static int getFileCacheSizeInMB()
    {
        if (conf.file_cache_size_in_mb == null)
        {
            // In client mode the value is not set.
            assert DatabaseDescriptor.isClientInitialized();
            return 0;
        }

        return conf.file_cache_size_in_mb;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getFileCacheEnabled(),file_cache_enabled,(S)org.apache.cassandra.config.DatabaseDescriptor:getFileCacheRoundUp(),getFileCacheRoundUp,DatabaseDescriptor,../data/xml/cassandra_call_methods/DatabaseDescriptor.xml,"
public static boolean getFileCacheRoundUp()
    {
        if (conf.file_cache_round_up == null)
        {
            // In client mode the value is not set.
            assert DatabaseDescriptor.isClientInitialized();
            return false;
        }

        return conf.file_cache_round_up;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getFileCacheEnabled(),file_cache_enabled,(S)org.apache.cassandra.config.DatabaseDescriptor:getFileCacheEnabled(),getFileCacheEnabled,DatabaseDescriptor,../data/xml/cassandra_call_methods/DatabaseDescriptor.xml,"
public static boolean getFileCacheEnabled()
    {
        return conf.file_cache_enabled;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getFileCacheEnabled(),file_cache_enabled,(S)org.apache.cassandra.utils.memory.BufferPools:forChunkCache(),forChunkCache,BufferPools,../data/xml/cassandra_call_methods/BufferPools.xml,"/**
     * Long-lived buffers used for chunk cache and other disk access
     */
public static BufferPool forChunkCache()
    {
        return CHUNK_CACHE_POOL;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getFileCacheEnabled(),file_cache_enabled,(O)org.apache.cassandra.cache.ChunkCache:<init>(org.apache.cassandra.utils.memory.BufferPool),<init>,ChunkCache,../data/xml/cassandra_call_methods/ChunkCache.xml,"
private ChunkCache(BufferPool pool)
    {
        bufferPool = pool;
        metrics = new ChunkCacheMetrics(this);
        cache = Caffeine.newBuilder()
                        .maximumWeight(cacheSize)
                        .executor(MoreExecutors.directExecutor())
                        .weigher((key, buffer) -> ((Buffer) buffer).buffer.capacity())
                        .removalListener(this)
                        .recordStats(() -> metrics)
                        .build(this);
    }

    "
