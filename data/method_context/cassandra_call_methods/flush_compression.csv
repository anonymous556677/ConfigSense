function,option,Method,Method_short,class_name,xml_path,Method_body
org.apache.cassandra.config.DatabaseDescriptor:getFlushCompression(),flush_compression,(M)org.apache.cassandra.schema.TableMetadataRef:getLocal(),getLocal,TableMetadataRef,../data/xml/cassandra_call_methods/TableMetadataRef.xml,"/**
     * Returns node-local table metadata
     */
public TableMetadata getLocal()
    {
        if (this.localTableMetadata != null)
            return localTableMetadata;

        return metadata;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getFlushCompression(),flush_compression,(M)org.apache.cassandra.schema.CompressionParams:getSstableCompressor(),getSstableCompressor,CompressionParams,../data/xml/cassandra_call_methods/CompressionParams.xml,"/**
     * Returns the SSTable compressor.
     * @return the SSTable compressor or {@code null} if compression is disabled.
     */
public ICompressor getSstableCompressor()
    {
        return sstableCompressor;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getFlushCompression(),flush_compression,(S)org.apache.cassandra.config.DatabaseDescriptor:getFlushCompression(),getFlushCompression,DatabaseDescriptor,../data/xml/cassandra_call_methods/DatabaseDescriptor.xml,"
public static Config.FlushCompression getFlushCompression()
    {
        return conf.flush_compression;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getFlushCompression(),flush_compression,(M)org.apache.cassandra.config.Config$FlushCompression:ordinal(),ordinal,Config$FlushCompression,../data/xml/cassandra_call_methods/Config.xml,not found
org.apache.cassandra.config.DatabaseDescriptor:getFlushCompression(),flush_compression,(I)org.apache.cassandra.io.compress.ICompressor:recommendedUses(),recommendedUses,ICompressor,../data/xml/cassandra_call_methods/ICompressor.xml,"/**
     * Hints to Cassandra which uses this compressor is recommended for. For example a compression algorithm which gets
     * good compression ratio may trade off too much compression speed to be useful in certain compression heavy use
     * cases such as flushes or mutation hints.
     *
     * Note that Cassandra may ignore these recommendations, it is not a strict contract.
     */
default Set<Uses> recommendedUses()
    {
        return ImmutableSet.copyOf(EnumSet.allOf(Uses.class));
    }
}"
