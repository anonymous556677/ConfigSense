function,option,Method,Method_short,class_name,xml_path,Method_body
org.apache.cassandra.config.DatabaseDescriptor:getCommitLogSyncPeriod(),commitlog_sync_period_in_ms,(S)org.apache.cassandra.config.DatabaseDescriptor:getCommitLogSyncPeriod(),getCommitLogSyncPeriod,DatabaseDescriptor,../data/xml/cassandra_call_methods/DatabaseDescriptor.xml,"
public static int getCommitLogSyncPeriod()
    {
        return conf.commitlog_sync_period_in_ms;
    }

    "
org.apache.cassandra.config.DatabaseDescriptor:getCommitLogSyncPeriod(),commitlog_sync_period_in_ms,(M)org.apache.cassandra.db.commitlog.CommitLog$Configuration:useCompression(),useCompression,CommitLog$Configuration,../data/xml/cassandra_call_methods/CommitLog.xml,"/**
         * Checks if the segments must be compressed.
         * @return <code>true</code> if the segments must be compressed, <code>false</code> otherwise.
         */
public boolean useCompression()
        {
            return compressor != null;
        }

        "
org.apache.cassandra.config.DatabaseDescriptor:getCommitLogSyncPeriod(),commitlog_sync_period_in_ms,(M)org.apache.cassandra.db.commitlog.CommitLog$Configuration:useEncryption(),useEncryption,CommitLog$Configuration,../data/xml/cassandra_call_methods/CommitLog.xml,"/**
         * Checks if the segments must be encrypted.
         * @return <code>true</code> if the segments must be encrypted, <code>false</code> otherwise.
         */
public boolean useEncryption()
        {
            return encryptionContext.isEnabled();
        }

        "
