function,Method_body,option,Method,Method_short,class_name,xml_path
org.h2.engine.Database:getSettings(),"/**
     * Create an internal connection. This connection is used when initializing
     * triggers, and when calling user defined functions.
     *
     * @param columnList if the url should be 'jdbc:columnlist:connection'
     * @return the internal connection
     */
public JdbcConnection createConnection(boolean columnList) {
        String url;
        if (columnList) {
            url = Constants.CONN_URL_COLUMNLIST;
        } else {
            url = Constants.CONN_URL_INTERNAL;
        }
        return new JdbcConnection(this, getUser().getName(), url);
    }

    ",DEFAULT_CONNECTION,(M)org.h2.engine.SessionLocal:createConnection(boolean),createConnection,SessionLocal,../data/xml/h2_call_methods/SessionLocal.xml
org.h2.engine.Database:getSettings(),not found,DEFAULT_CONNECTION,(M)org.h2.expression.Expression:getValue(org.h2.engine.SessionLocal),getValue,Expression,../data/xml/h2_call_methods/Expression.xml
org.h2.engine.Database:getSettings(),"
@Override
    public boolean getAutoCommit() {
        return autoCommit;
    }

    ",DEFAULT_CONNECTION,(M)org.h2.engine.SessionLocal:getAutoCommit(),getAutoCommit,SessionLocal,../data/xml/h2_call_methods/SessionLocal.xml
org.h2.engine.Database:getSettings(),"
public Value getLastIdentity() {
        return lastIdentity;
    }

    ",DEFAULT_CONNECTION,(M)org.h2.engine.SessionLocal:getLastIdentity(),getLastIdentity,SessionLocal,../data/xml/h2_call_methods/SessionLocal.xml
org.h2.engine.Database:getSettings(),"
public Database getDatabase() {
        return database;
    }

    ",DEFAULT_CONNECTION,(M)org.h2.engine.SessionLocal:getDatabase(),getDatabase,SessionLocal,../data/xml/h2_call_methods/SessionLocal.xml
org.h2.engine.Database:getSettings(),"
public DbSettings getSettings() {
        return dbSettings;
    }

    ",DEFAULT_CONNECTION,(M)org.h2.engine.Database:getSettings(),getSettings,Database,../data/xml/h2_call_methods/Database.xml
org.h2.engine.Database:getSettings(),"
@Override
    public void setAutoCommit(boolean b) {
        autoCommit = b;
    }

    ",DEFAULT_CONNECTION,(M)org.h2.engine.SessionLocal:setAutoCommit(boolean),setAutoCommit,SessionLocal,../data/xml/h2_call_methods/SessionLocal.xml
org.h2.engine.Database:getSettings(),"
public void setLastIdentity(Value last) {
        this.lastIdentity = last;
    }

    ",DEFAULT_CONNECTION,(M)org.h2.engine.SessionLocal:setLastIdentity(org.h2.value.Value),setLastIdentity,SessionLocal,../data/xml/h2_call_methods/SessionLocal.xml
